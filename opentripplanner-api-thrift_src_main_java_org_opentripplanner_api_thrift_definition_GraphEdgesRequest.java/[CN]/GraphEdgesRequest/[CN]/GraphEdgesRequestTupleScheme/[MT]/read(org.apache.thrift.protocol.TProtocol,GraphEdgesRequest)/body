{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(2);
  if (incoming.get(0)) {
    struct.street_edges_only=iprot.readBool();
    struct.setStreet_edges_onlyIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TSet _set29=new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32,iprot.readI32());
      struct.can_be_traversed_by=new HashSet<org.opentripplanner.api.thrift.definition.TravelMode>(2 * _set29.size);
      for (int _i30=0; _i30 < _set29.size; ++_i30) {
        org.opentripplanner.api.thrift.definition.TravelMode _elem31;
        _elem31=org.opentripplanner.api.thrift.definition.TravelMode.findByValue(iprot.readI32());
        struct.can_be_traversed_by.add(_elem31);
      }
    }
    struct.setCan_be_traversed_byIsSet(true);
  }
}
