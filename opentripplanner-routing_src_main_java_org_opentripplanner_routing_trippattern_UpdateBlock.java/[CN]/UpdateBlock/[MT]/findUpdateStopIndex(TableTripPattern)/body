{
  if (updates == null || updates.size() < 1)   return -1;
  int result=matchBlockSimple(pattern);
  if (result == MATCH_FAILED) {
    LOG.debug("simple block matching failed, trying fuzzy matching.");
    result=matchBlockFuzzy(pattern);
  }
  if (result != MATCH_FAILED) {
    LOG.debug("found matching stop block at index {}",result);
    return result;
  }
  LOG.warn("update block matching failed completely.");
  LOG.warn("have a look at the pattern and block:");
  List<Stop> patternStops=pattern.getStops();
  int nStops=patternStops.size();
  int nHops=nStops - 1;
  for (int i=0; i < nStops; i++) {
    Stop s=patternStops.get(i);
    Update u=null;
    if (i < updates.size())     u=updates.get(i);
    int ti=pattern.getTripIndex(this.tripId);
    int schedArr=(i < 1) ? 0 : pattern.getArrivalTime(i - 1,ti);
    int schedDep=(i >= nHops) ? 0 : pattern.getDepartureTime(i,ti);
    System.out.printf("Stop %02d %s A%d D%d >>> %s\n",i,s.getId().getId(),schedArr,schedDep,(u == null) ? "--" : u.toString());
  }
  return MATCH_FAILED;
}
