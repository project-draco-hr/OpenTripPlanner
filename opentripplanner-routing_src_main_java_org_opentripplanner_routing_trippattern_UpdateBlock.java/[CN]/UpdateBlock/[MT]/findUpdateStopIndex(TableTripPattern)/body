{
  if (updates == null || updates.size() < 1)   return -1;
  List<Stop> patternStops=pattern.getStops();
  int high=patternStops.size() - updates.size();
  PATTERN:   for (int pi=0; pi <= high; pi++) {
    LOG.trace("---{}",pi);
    for (int ui=0; ui < updates.size(); ui++) {
      Stop ps=patternStops.get(pi + ui);
      Update u=updates.get(ui);
      LOG.trace("{} == {}",ps.getId().getId(),u.stopId);
      if (!ps.getId().getId().equals(u.stopId)) {
        continue PATTERN;
      }
    }
    LOG.debug("found matching stop block at index {}",pi);
    return pi;
  }
  LOG.debug("match failed");
  for (int i=0; i < patternStops.size(); i++) {
    Stop s=patternStops.get(i);
    Update u=null;
    if (i < updates.size())     u=updates.get(i);
    int ti=pattern.getTripIndex(this.tripId);
    int schedArr=pattern.getArrivalTime(i,ti);
    int schedDep=pattern.getDepartureTime(i,ti);
    System.out.printf("Stop %02d %s %d %d >>> %s\n",i,s.getId().getId(),schedArr,schedDep,(u == null) ? "--" : u.toString());
  }
  return -1;
}
