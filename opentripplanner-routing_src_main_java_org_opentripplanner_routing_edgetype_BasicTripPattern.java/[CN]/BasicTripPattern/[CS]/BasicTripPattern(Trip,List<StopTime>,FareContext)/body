{
  this.exemplar=exemplar;
  this.fareContext=fareContext;
  int hops=stopTimes.size() - 1;
  departureTimes=(ArrayList<Integer>[])Array.newInstance(ArrayList.class,hops);
  runningTimes=(ArrayList<Integer>[])Array.newInstance(ArrayList.class,hops);
  dwellTimes=(ArrayList<Integer>[])Array.newInstance(ArrayList.class,hops);
  arrivalTimes=(ArrayList<Integer>[])Array.newInstance(ArrayList.class,hops);
  perTripFlags=new ArrayList<Integer>();
  perStopFlags=new int[hops + 1];
  zones=new String[hops + 1];
  trips=new ArrayList<Trip>();
  int i;
  for (i=0; i < hops; ++i) {
    departureTimes[i]=new ArrayList<Integer>();
    runningTimes[i]=new ArrayList<Integer>();
    dwellTimes[i]=new ArrayList<Integer>();
    arrivalTimes[i]=new ArrayList<Integer>();
  }
  stops=new ArrayList<Stop>(stopTimes.size());
  i=0;
  for (  StopTime stopTime : stopTimes) {
    stops.add(stopTime.getStop());
    zones[i]=stopTimes.get(i).getStop().getZoneId();
    if (stopTime.getStop().getWheelchairBoarding() != 0) {
      perStopFlags[i]|=FLAG_WHEELCHAIR_ACCESSIBLE;
    }
    if (stopTime.getPickupType() != 1) {
      perStopFlags[i]|=FLAG_PICKUP;
    }
    if (stopTime.getDropOffType() != 1) {
      perStopFlags[i]|=FLAG_DROPOFF;
    }
    ++i;
  }
}
