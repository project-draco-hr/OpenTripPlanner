{
  ArrayList<Integer> stopRunningTimes=runningTimes[stopIndex];
  ArrayList<Integer> stopDepartureTimes=departureTimes[stopIndex];
  ArrayList<Integer> stopArrivalTimes=arrivalTimes[stopIndex];
  ArrayList<Integer> stopDwellTimes=dwellTimes[stopIndex];
  ArrayList<String> stopHeadsigns=headsigns[stopIndex];
  if (insertionPoint > 0) {
    if (stopDepartureTimes.get(insertionPoint - 1) > departureTime) {
      throw new TripOvertakingException(trip,trips.get(insertionPoint - 1),stopIndex);
    }
  }
  if (insertionPoint < stopDepartureTimes.size()) {
    if (stopDepartureTimes.get(insertionPoint) < departureTime) {
      throw new TripOvertakingException(trips.get(insertionPoint + 1),trip,stopIndex);
    }
  }
  if (stopIndex == 0) {
    trips.add(insertionPoint,trip);
    perTripFlags.add(insertionPoint,0);
  }
  stopDepartureTimes.add(insertionPoint,departureTime);
  stopRunningTimes.add(insertionPoint,runningTime);
  stopArrivalTimes.add(insertionPoint,arrivalTime);
  stopDwellTimes.add(insertionPoint,dwellTime);
  stopHeadsigns.add(insertionPoint,headsign);
}
