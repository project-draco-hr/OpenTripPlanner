{
  log.info("Downloading NED elevation data.");
  List<URL> urls=getDownloadURLsCached();
  List<File> files=new ArrayList<File>();
  Iterator<URL> it=urls.iterator();
  URL url=it.next();
  int tileCount=0;
  do {
    String tileProgress=String.format("Tile %d/%d",++tileCount,urls.size());
    String key=getKey(url);
    File tile=getPathToNEDTile(key);
    if (tile.exists()) {
      files.add(tile);
      log.debug("{} found in NED cache, not downloading: {}",tileProgress,tile);
      if (it.hasNext()) {
        url=it.next();
        continue;
      }
 else {
        break;
      }
    }
    log.info("{} not in NED cache, requesting download: {}",tileProgress,tile);
    try {
      while (true) {
        sleep(3000);
        String token;
        while (true) {
          token=initiateDownload(url);
          int i=0;
          do {
            log.info("Waiting 30 seconds to check if tile is ready for download...");
            sleep(30000);
          }
 while (!downloadReady(token) && i++ < 20);
          sleep(3000);
          if (i != 20) {
            break;
          }
          log.info("Giving up on slow download and retrying.");
        }
        downloadFile(url,token);
        try {
          files.add(unzipFile(url));
        }
 catch (        NotAZipFileException e) {
          continue;
        }
        break;
      }
    }
 catch (    NoDownloadIDException e) {
      log.debug("Failed to download, retrying");
      continue;
    }
catch (    Exception e) {
      throw new RuntimeException("Error getting data from USGS Download Server while downloading",e);
    }
    if (it.hasNext()) {
      url=it.next();
    }
 else {
      break;
    }
  }
 while (true);
  return files;
}
