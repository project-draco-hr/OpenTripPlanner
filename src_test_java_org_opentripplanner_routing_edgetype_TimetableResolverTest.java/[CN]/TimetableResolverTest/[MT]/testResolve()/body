{
  ServiceDate today=new ServiceDate();
  ServiceDate yesterday=today.previous();
  ServiceDate tomorrow=today.next();
  TripPattern pattern=patternIndex.get(new AgencyAndId("agency","1.1"));
  TimetableResolver resolver=new TimetableResolver();
  Timetable scheduled=resolver.resolve(pattern,today);
  assertEquals(scheduled,resolver.resolve(pattern,null));
  TripDescriptor.Builder tripDescriptorBuilder=TripDescriptor.newBuilder();
  tripDescriptorBuilder.setTripId("1.1");
  tripDescriptorBuilder.setScheduleRelationship(ScheduleRelationship.CANCELED);
  TripUpdate.Builder tripUpdateBuilder=TripUpdate.newBuilder();
  tripUpdateBuilder.setTrip(tripDescriptorBuilder);
  TripUpdate tripUpdate=tripUpdateBuilder.build();
  updateResolver(resolver,pattern,tripUpdate,"agency",today);
  Timetable forNow=resolver.resolve(pattern,today);
  assertEquals(scheduled,resolver.resolve(pattern,yesterday));
  assertNotSame(scheduled,forNow);
  assertEquals(scheduled,resolver.resolve(pattern,tomorrow));
  assertEquals(scheduled,resolver.resolve(pattern,null));
  updateResolver(resolver,pattern,tripUpdate,"agency",yesterday);
  Timetable forYesterday=resolver.resolve(pattern,yesterday);
  assertNotSame(scheduled,forYesterday);
  assertNotSame(scheduled,forNow);
  assertEquals(scheduled,resolver.resolve(pattern,tomorrow));
  assertEquals(scheduled,resolver.resolve(pattern,null));
}
