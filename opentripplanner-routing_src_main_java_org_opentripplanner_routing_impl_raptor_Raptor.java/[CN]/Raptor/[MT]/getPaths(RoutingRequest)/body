{
  if (options.rctx == null) {
    options.setRoutingContext(graphService.getGraph(options.getRouterId()));
    options.rctx.pathParsers=new PathParser[1];
    options.rctx.pathParsers[0]=new BasicPathParser();
  }
  init();
  options.setAlightSlack(0);
  options.setBoardSlack(0);
  options.setTransferSlack(0);
  RoutingRequest walkOptions=options.clone();
  walkOptions.rctx.pathParsers=new PathParser[0];
  TraverseModeSet modes=options.getModes().clone();
  modes.setTransit(false);
  walkOptions.setModes(modes);
  RaptorPathSet routeSet=new RaptorPathSet(stops.length);
  for (int i=0; i < options.getMaxTransfers() + 2; ++i) {
    round(options,walkOptions,routeSet,i);
    if (routeSet.getTargetStates().size() >= options.getNumItineraries())     break;
  }
  if (routeSet.getTargetStates().isEmpty()) {
    System.out.println("RAPTOR found no paths (try retrying?)");
  }
  List<GraphPath> paths=new ArrayList<GraphPath>();
  for (  RaptorState targetState : routeSet.getTargetStates()) {
    ArrayList<RaptorState> states=new ArrayList<RaptorState>();
    RaptorState cur=targetState;
    while (cur != null) {
      states.add(cur);
      cur=cur.parent;
    }
    State state=new State(options);
    for (int i=states.size() - 1; i >= 0; --i) {
      cur=states.get(i);
      if (cur.walkPath != null) {
        GraphPath path=new GraphPath(cur.walkPath,true);
        for (        Edge e : path.edges) {
          State oldState=state;
          state=e.traverse(state);
          if (state == null) {
            e.traverse(oldState);
          }
        }
      }
 else {
        for (        Edge e : state.getVertex().getOutgoing()) {
          if (e instanceof PreBoardEdge) {
            state=e.traverse(state);
          }
        }
        PatternBoard board=cur.route.boards[cur.boardStopSequence][cur.patternIndex];
        State oldState=state;
        state=board.traverse(state);
        if (state == null) {
          state=board.traverse(oldState);
        }
        HOP:         while (true) {
          for (          Edge e : state.getVertex().getOutgoing()) {
            if (e instanceof PatternDwell) {
              state=e.traverse(state);
            }
 else             if (e instanceof PatternHop) {
              state=e.traverse(state);
              for (              Edge e2 : state.getVertex().getOutgoing()) {
                if (e2 instanceof PatternAlight) {
                  for (                  Edge e3 : e2.getToVertex().getOutgoing()) {
                    if (e3 instanceof PreAlightEdge) {
                      if (raptorStopsForStopId.get(((TransitStop)e3.getToVertex()).getStopId()) == cur.stop) {
                        state=e2.traverse(state);
                        state=e3.traverse(state);
                        break HOP;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    paths.add(new GraphPath(state,true));
  }
  return paths;
}
