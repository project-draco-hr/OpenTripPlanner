{
  if (options.rctx == null) {
    options.setRoutingContext(graphService.getGraph(options.getRouterId()));
    options.rctx.pathParsers=new PathParser[1];
    options.rctx.pathParsers[0]=new BasicPathParser();
  }
  Graph graph=graphService.getGraph(options.getRouterId());
  RaptorData data=graph.getService(RaptorDataService.class).getData();
  RoutingRequest walkOptions=options.clone();
  walkOptions.rctx.pathParsers=new PathParser[0];
  TraverseModeSet modes=options.getModes().clone();
  modes.setTransit(false);
  walkOptions.setModes(modes);
  RaptorPathSet routeSet=new RaptorPathSet(data.stops.length);
  options.setMaxTransfers(options.maxTransfers + 2);
  for (int i=0; i < options.getMaxTransfers() + 2; ++i) {
    round(data,options,walkOptions,routeSet,i);
  }
  if (routeSet.getTargetStates().isEmpty()) {
    System.out.println("RAPTOR found no paths (try retrying?)");
  }
  List<GraphPath> paths=new ArrayList<GraphPath>();
  for (  RaptorState targetState : routeSet.getTargetStates()) {
    ArrayList<RaptorState> states=new ArrayList<RaptorState>();
    RaptorState cur=targetState;
    while (cur != null) {
      states.add(cur);
      cur=cur.parent;
    }
    State state=getState(options,data,states);
    paths.add(new GraphPath(state,true));
  }
  return paths;
}
