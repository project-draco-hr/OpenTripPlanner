{
  long wayId=way.getId();
  if (waysById.containsKey(wayId) || areaWaysById.containsKey(wayId))   return;
  if (areaWayIds.contains(wayId)) {
    areaWaysById.put(wayId,way);
  }
  applyLevelsForWay(way);
  if (!(OSMFilter.isWayRoutable(way) || way.isParkAndRide() || way.isBikeParking())) {
    return;
  }
  if ((way.isTag("area","yes") || way.isTag("amenity","parking") || way.isTag("amenity","bicycle_parking")) && way.getNodeRefs().size() > 2) {
    if (!areaWayIds.contains(wayId)) {
      singleWayAreas.add(way);
      areaWaysById.put(wayId,way);
      areaWayIds.add(wayId);
      for (      Long node : way.getNodeRefs()) {
        MapUtils.addToMapSet(areasForNode,node,way);
      }
    }
    return;
  }
  waysById.put(wayId,way);
  if (waysById.size() % 10000 == 0)   LOG.debug("ways=" + waysById.size());
}
