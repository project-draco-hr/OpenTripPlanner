{
  Graph graph;
  GtfsContext context;
  graph=ConstantsForTests.getInstance().getPortlandGraph();
  context=ConstantsForTests.getInstance().getPortlandContext();
  Vertex airport=graph.getVertex("TriMet_10579");
  TraverseOptions wo=new TraverseOptions();
  wo.setGtfsContext(context);
  GregorianCalendar startTime=new GregorianCalendar(2009,11,1,12,34,25);
  long startClock, endClock;
  ShortestPathTree spt;
  startClock=System.nanoTime();
  spt=Dijkstra.getShortestPathTree(graph,"TriMet_6876",airport.label,new State(startTime.getTimeInMillis()),wo);
  endClock=System.nanoTime();
  long aStarSpeed=endClock - startClock;
  GraphPath path=spt.getPath(airport);
  assertNotNull(path);
  startClock=System.nanoTime();
  spt=AStar.getShortestPathTree(graph,"TriMet_6876",airport.label,new State(startTime.getTimeInMillis()),wo);
  endClock=System.nanoTime();
  long dijkstraSpeed=endClock - startClock;
  assertTrue(aStarSpeed >= dijkstraSpeed);
  path=spt.getPath(airport);
}
