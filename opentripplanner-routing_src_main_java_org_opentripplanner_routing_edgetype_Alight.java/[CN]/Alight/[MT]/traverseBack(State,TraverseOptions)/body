{
  if (!options.getModes().contains(hop.getMode())) {
    return null;
  }
  if (options.getModes().getBicycle() && !hop.getBikesAllowed()) {
    return null;
  }
  if (options.wheelchairAccessible && !wheelchairAccessible) {
    return null;
  }
  long current_time=state0.getTime();
  long transfer_penalty=0;
  StateData data=state0.getData();
  AgencyAndId serviceId=hop.getServiceId();
  int wait=-1;
  for (  ServiceDay sd : options.serviceDays) {
    int secondsSinceMidnight=sd.secondsSinceMidnight(current_time);
    if (secondsSinceMidnight < 0)     continue;
    if (sd.serviceIdRunning(serviceId)) {
      int newWait=secondsSinceMidnight - hop.getEndStopTime().getArrivalTime();
      if (wait < 0 || newWait < wait) {
        wait=newWait;
      }
    }
  }
  if (wait < 0) {
    return null;
  }
  Editor editor=state0.edit();
  editor.incrementTimeInSeconds(-wait);
  editor.incrementNumBoardings();
  editor.setTripId(trip.getId());
  editor.setZone(zone);
  editor.setRoute(trip.getRoute().getId());
  editor.setFareContext(fareContext);
  return new TraverseResult(wait,editor.createState(),this);
}
