{
  Graph g=buildGraphNoTransit();
  addRegularStopGrid(g);
  addTransitMultipleLines(g);
  link(g);
  g.index(new DefaultStreetVertexIndexFactory());
  ProfileRequest req=new ProfileRequest();
  req.fromLon=req.toLon=-83.0118;
  req.fromLat=req.toLat=39.9908;
  req.date=new LocalDate(2015,9,17);
  req.bikeSpeed=4.1f;
  req.walkSpeed=1.3f;
  req.fromTime=7 * 3600;
  req.toTime=9 * 3600;
  req.maxBikeTime=20;
  req.maxWalkTime=20;
  req.transitModes=new TraverseModeSet("TRANSIT");
  req.accessModes=req.egressModes=req.directModes=new QualifiedModeSet("WALK");
  RaptorWorkerData data=RepeatedRaptorProfileRouter.getRaptorWorkerData(req,g,null,new TaskStatistics());
  assertNotNull(data);
  RepeatedRaptorProfileRouter rrpr=new RepeatedRaptorProfileRouter(g,req);
  TIntIntMap initialStops1=rrpr.findInitialStops(false,data);
  assertFalse(initialStops1.isEmpty());
  req.walkSpeed=25f;
  data=RepeatedRaptorProfileRouter.getRaptorWorkerData(req,g,null,new TaskStatistics());
  assertNotNull(data);
  rrpr=new RepeatedRaptorProfileRouter(g,req);
  TIntIntMap initialStops2=rrpr.findInitialStops(false,data);
  boolean foundDecreases=false;
  for (TIntIntIterator it=initialStops1.iterator(); it.hasNext(); ) {
    it.advance();
    assertTrue(initialStops2.containsKey(it.key()));
    assertTrue("Found increase in travel time to stop",initialStops2.get(it.key()) <= it.value());
    foundDecreases=foundDecreases || initialStops2.get(it.key()) < it.value() - EPSILON;
  }
  assertTrue("No decreases were found due to increased walk speed",foundDecreases);
}
