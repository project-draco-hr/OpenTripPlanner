{
  Fare fare1=new Fare();
  fare1.addFare(FareType.regular,new WrappedCurrency("EUR"),100);
  FareService fs1=new SimpleFareService(fare1);
  Fare fare2=new Fare();
  fare2.addFare(FareType.regular,new WrappedCurrency("EUR"),140);
  fare2.addFare(FareType.student,new WrappedCurrency("EUR"),120);
  FareService fs2=new SimpleFareService(fare2);
  Fare fare3=new Fare();
  fare3.addFare(FareType.student,new WrappedCurrency("EUR"),80);
  FareService fs3=new SimpleFareService(fare3);
  AddingMultipleFareService mfs=new AddingMultipleFareService(new ArrayList<FareService>());
  Fare fare=mfs.getCost(null);
  assertNull(fare);
  mfs=new AddingMultipleFareService(Arrays.asList(fs1));
  fare=mfs.getCost(null);
  assertEquals(100,fare.getFare(FareType.regular).getCents());
  assertEquals(null,fare.getFare(FareType.student));
  mfs=new AddingMultipleFareService(Arrays.asList(fs1,fs2));
  fare=mfs.getCost(null);
  assertEquals(240,fare.getFare(FareType.regular).getCents());
  assertEquals(220,fare.getFare(FareType.student).getCents());
  mfs=new AddingMultipleFareService(Arrays.asList(fs2,fs1));
  fare=mfs.getCost(null);
  assertEquals(240,fare.getFare(FareType.regular).getCents());
  assertEquals(220,fare.getFare(FareType.student).getCents());
  mfs=new AddingMultipleFareService(Arrays.asList(fs1,fs3));
  fare=mfs.getCost(null);
  assertEquals(100,fare.getFare(FareType.regular).getCents());
  assertEquals(180,fare.getFare(FareType.student).getCents());
}
