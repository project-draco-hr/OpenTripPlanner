{
  child=parent.clone();
  child.backState=parent;
  child.backEdge=e;
  child.backEdgeNarrative=en;
  child.hops=parent.hops + 1;
  if (parent.vertex == en.getFromVertex()) {
    traversingBackward=false;
    child.vertex=en.getToVertex();
  }
 else   if (parent.vertex == en.getToVertex()) {
    traversingBackward=true;
    child.vertex=en.getFromVertex();
  }
 else {
    _log.warn("Edge is not connected to parent state: {}",en);
    _log.warn("   from   vertex: {}",en.getFromVertex());
    _log.warn("   to     vertex: {}",en.getToVertex());
    _log.warn("   parent vertex: {}",parent.vertex);
    defectiveTraversal=true;
  }
}
