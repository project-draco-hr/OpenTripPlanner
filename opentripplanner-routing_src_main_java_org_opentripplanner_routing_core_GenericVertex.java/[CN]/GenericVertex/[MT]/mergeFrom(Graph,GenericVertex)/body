{
  Iterable<DirectEdge> incoming=cast(this.incoming);
  Iterable<DirectEdge> outgoing=cast(this.outgoing);
  Iterator<DirectEdge> it=incoming.iterator();
  while (it.hasNext()) {
    DirectEdge edge=it.next();
    if (edge.getFromVertex() == other) {
      it.remove();
    }
  }
  it=outgoing.iterator();
  while (it.hasNext()) {
    DirectEdge edge=it.next();
    if (edge.getToVertex() == other) {
      it.remove();
    }
  }
  for (  AbstractEdge edge : cast(other.getIncoming(),AbstractEdge.class)) {
    if (edge.getFromVertex() == this) {
      continue;
    }
    edge.setToVertex(this);
    this.addIncoming(edge);
  }
  for (  AbstractEdge edge : cast(other.getOutgoing(),AbstractEdge.class)) {
    if (edge.getToVertex() == this) {
      continue;
    }
    edge.setFromVertex(this);
    this.addOutgoing(edge);
  }
  graph.removeVertex(other);
}
