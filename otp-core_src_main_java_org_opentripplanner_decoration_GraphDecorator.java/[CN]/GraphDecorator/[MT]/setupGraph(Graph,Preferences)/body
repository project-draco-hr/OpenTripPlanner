{
  try {
    PeriodicTimerGraphUpdater periodicUpdater=graph.getService(PeriodicTimerGraphUpdater.class,true);
    for (    String beanName : config.childrenNames()) {
      Preferences beanConfig=config.node(beanName);
      String beanType=beanConfig.get("type",null);
      Class<? extends Configurable> clazz=configurables.get(beanType);
      if (clazz != null) {
        try {
          LOG.info("Configuring bean {} of type {} ({})",beanName,beanType,clazz.getName());
          Configurable bean=clazz.newInstance();
          bean.configure(graph,beanConfig);
        }
 catch (        Exception e) {
          LOG.error("Can't configure bean: " + beanName,e);
        }
      }
    }
    if (periodicUpdater.size() == 0) {
      graph.putService(PeriodicTimerGraphUpdater.class,null);
    }
  }
 catch (  BackingStoreException e) {
    LOG.error("Can't read configuration",e);
  }
}
