{
  LOG.debug("loading serialized graph for routerId {}",routerId);
  String graphFileName=new File(path,GRAPH_FILENAME).getPath();
  String configFileName=new File(path,CONFIG_FILENAME).getPath();
  LOG.debug("graph file for routerId '{}' is at {}",routerId,graphFileName);
  InputStream is=null;
  final String CLASSPATH_PREFIX="classpath:/";
  if (graphFileName.startsWith(CLASSPATH_PREFIX)) {
    String resourceName=graphFileName.substring(CLASSPATH_PREFIX.length());
    LOG.debug("loading graph on classpath at {}",resourceName);
    is=Thread.currentThread().getContextClassLoader().getResourceAsStream(resourceName);
  }
 else {
    try {
      File graphFile=new File(graphFileName);
      is=new FileInputStream(graphFile);
    }
 catch (    IOException ex) {
      is=null;
      LOG.warn("Error creating graph input stream",ex);
    }
  }
  if (is == null) {
    LOG.warn("Graph file not found or not openable for routerId '{}' under {}",routerId,graphFileName);
    return null;
  }
  LOG.info("Loading graph...");
  Graph graph=null;
  try {
    graph=Graph.load(new ObjectInputStream(is),loadLevel,streetVertexIndexFactory);
  }
 catch (  Exception ex) {
    LOG.error("Exception while loading graph from {}.",graphFileName);
    ex.printStackTrace();
    return null;
  }
  graph.routerId=(routerId);
  try {
    is=null;
    if (configFileName.startsWith(CLASSPATH_PREFIX)) {
      String resourceName=configFileName.substring(CLASSPATH_PREFIX.length());
      LOG.debug("Trying to load config on classpath at {}",resourceName);
      is=Thread.currentThread().getContextClassLoader().getResourceAsStream(resourceName);
    }
 else {
      LOG.debug("Trying to load config on file at {}",configFileName);
      File configFile=new File(configFileName);
      if (configFile.canRead()) {
        LOG.info("Loading config from file {}",configFileName);
        is=new FileInputStream(configFile);
      }
    }
    Preferences config=is == null ? null : new PropertiesPreferences(is);
    decorator.setupGraph(graph,config);
  }
 catch (  IOException e) {
    LOG.error("Can't read config file",e);
  }
  return graph;
}
