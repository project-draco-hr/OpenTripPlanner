{
  LOG.info("Starting transport network visualizer");
  TransportNetwork network;
  if (args.length == 1) {
    LOG.info("Reading serialized transport network");
    File in=new File(args[0]);
    FileInputStream fis=new FileInputStream(in);
    network=TransportNetwork.read(fis);
    fis.close();
    LOG.info("Done reading serialized transport network");
  }
 else   if (args.length == 2) {
    LOG.info("Building transport network");
    network=TransportNetwork.fromFiles(args[0],args[1]);
    LOG.info("Done building transport network");
  }
 else {
    LOG.info("usage:");
    LOG.info(" TransportNetworkVisualizer serialized_transport_network");
    LOG.info(" TransportNetworkVisualizer osm_file gtfs_file");
    return;
  }
  network.streetLayer.indexStreets();
  LOG.info("Starting server on {}:{}",INTERFACE,PORT);
  HttpServer server=new HttpServer();
  server.addListener(new NetworkListener("transport_network_visualizer",INTERFACE,PORT));
  server.getServerConfiguration().addHttpHandler(new TransportNetworkHandler(network),"/api/*");
  server.getServerConfiguration().addHttpHandler(new CLStaticHttpHandler(ClassLoader.getSystemClassLoader(),"/org/opentripplanner/transit/TransitNetworkVisualizer/"));
  try {
    server.start();
    LOG.info("VEX server running.");
    Thread.currentThread().join();
  }
 catch (  BindException be) {
    LOG.error("Cannot bind to port {}. Is it already in use?",PORT);
  }
catch (  IOException ioe) {
    LOG.error("IO exception while starting server.");
  }
catch (  InterruptedException ie) {
    LOG.info("Interrupted, shutting down.");
  }
  server.shutdown();
}
