{
  agency=new Agency();
  agency.setId("AGENCY");
  route=new Route();
  route.setType(com.conveyal.gtfs.model.Route.BUS);
  route.setShortName("T");
  route.setLongName("TEST");
  route.setAgency(agency);
  route.setId(new AgencyAndId(agency.getId(),"TEST"));
  metro=new Route();
  metro.setType(com.conveyal.gtfs.model.Route.SUBWAY);
  metro.setShortName("M");
  metro.setLongName("METRO");
  metro.setAgency(agency);
  metro.setId(new AgencyAndId(agency.getId(),"METRO"));
  trip=new Trip();
  trip.setRoute(route);
  trip.setId(new AgencyAndId(agency.getId(),"TRIP"));
  trip2=new Trip();
  trip2.setRoute(route);
  trip2.setId(new AgencyAndId(agency.getId(),"TRIP2"));
  stops=new Stop[4];
  for (int i=0; i < stops.length; i++) {
    Stop s=new Stop();
    s.setLat(-122.123);
    s.setLon(37.363 + i * 0.001);
    s.setId(new AgencyAndId(agency.getId(),"" + i));
    stops[i]=s;
  }
  List<StopTime> stopTimes=makeStopTimes(trip);
  StopPattern sp=new StopPattern(stopTimes);
  pattern=new TripPattern(route,sp);
  times=makeTripTimes(trip,stopTimes);
  pattern.scheduledTimetable.addTripTimes(times);
  pattern.scheduledTimetable.addTripTimes(makeTripTimes(trip2,makeStopTimes(trip2)));
  frequencyEntry=new FrequencyEntry(7 * 3600,12 * 3600,600,false,makeTripTimes(trip,makeStopTimes(trip)));
  pattern.scheduledTimetable.addFrequencyEntry(frequencyEntry);
  pattern.scheduledTimetable.addFrequencyEntry(new FrequencyEntry(7 * 3600,12 * 3600,600,false,makeTripTimes(trip2,makeStopTimes(trip2))));
  metroTrip=new Trip();
  metroTrip.setRoute(metro);
  metroTrip.setId(new AgencyAndId(agency.getId(),"TRIP"));
  stopTimes=makeStopTimes(metroTrip);
  sp=new StopPattern(stopTimes);
  metroPattern=new TripPattern(metro,sp);
  metroTimes=makeTripTimes(metroTrip,stopTimes);
  metroPattern.scheduledTimetable.addTripTimes(metroTimes);
}
