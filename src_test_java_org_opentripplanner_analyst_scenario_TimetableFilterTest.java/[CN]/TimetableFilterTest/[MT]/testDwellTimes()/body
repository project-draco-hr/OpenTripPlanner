{
  AdjustDwellTime adt=new AdjustDwellTime();
  adt.routeId=Arrays.asList(route.getId().getId());
  adt.agencyId=agency.getId();
  adt.stopId=Arrays.asList(stops[0].getId().getId(),stops[2].getId().getId());
  adt.dwellTime=60;
  TripTimes tt2=adt.apply(trip,pattern,times);
  assertNotNull(tt2);
  assertEquals(60,tt2.getDepartureTime(0) - tt2.getArrivalTime(0));
  assertEquals(30,tt2.getDepartureTime(1) - tt2.getArrivalTime(1));
  assertEquals(60,tt2.getDepartureTime(2) - tt2.getArrivalTime(2));
  assertEquals(30,tt2.getDepartureTime(3) - tt2.getArrivalTime(3));
  assertEquals(30,times.getDepartureTime(2) - times.getArrivalTime(2));
  FrequencyEntry fe2=adt.apply(trip,pattern,frequencyEntry);
  assertNotNull(fe2);
  tt2=fe2.tripTimes;
  assertEquals(60,tt2.getDepartureTime(0) - tt2.getArrivalTime(0));
  assertEquals(30,tt2.getDepartureTime(1) - tt2.getArrivalTime(1));
  assertEquals(60,tt2.getDepartureTime(2) - tt2.getArrivalTime(2));
  assertEquals(30,tt2.getDepartureTime(3) - tt2.getArrivalTime(3));
  assertEquals(30,frequencyEntry.tripTimes.getDepartureTime(2) - frequencyEntry.tripTimes.getArrivalTime(2));
}
