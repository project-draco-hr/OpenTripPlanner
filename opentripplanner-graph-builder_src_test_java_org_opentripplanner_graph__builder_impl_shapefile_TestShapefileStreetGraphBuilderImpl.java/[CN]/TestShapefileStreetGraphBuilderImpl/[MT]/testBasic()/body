{
  Graph gg=new Graph();
  URL resource=getClass().getResource("nyc_streets/streets.shp");
  File file=null;
  if (resource != null) {
    file=new File(resource.getFile());
  }
  if (file == null || !file.exists()) {
    System.out.println("No New York City basemap; skipping; see comment here for details");
    return;
  }
  ShapefileFeatureSourceFactoryImpl factory=new ShapefileFeatureSourceFactoryImpl(file);
  ShapefileStreetSchema schema=new ShapefileStreetSchema();
  schema.setIdAttribute("SegmentID");
  schema.setNameAttribute("Street");
  CaseBasedTraversalPermissionConverter perms=new CaseBasedTraversalPermissionConverter("TrafDir",StreetTraversalPermission.PEDESTRIAN_AND_BICYCLE);
  perms.addPermission("W",StreetTraversalPermission.ALL,StreetTraversalPermission.PEDESTRIAN);
  perms.addPermission("A",StreetTraversalPermission.PEDESTRIAN,StreetTraversalPermission.ALL);
  perms.addPermission("T",StreetTraversalPermission.ALL,StreetTraversalPermission.ALL);
  schema.setPermissionConverter(perms);
  ShapefileStreetGraphBuilderImpl loader=new ShapefileStreetGraphBuilderImpl();
  loader.setFeatureSourceFactory(factory);
  loader.setSchema(schema);
  loader.buildGraph(gg);
  assertEquals(201520,gg.getVertices().size());
  Vertex start=null;
  Vertex end=null;
  for (  Vertex v : gg.getVertices()) {
    if (v.getLabel().startsWith("PARK PL at VANDERBILT AV")) {
      start=v;
    }
 else {
      if (v.getLabel().startsWith("GRAND ST at LAFAYETTE ST")) {
        end=v;
      }
    }
  }
  assertNotNull(start);
  assertNotNull(end);
  TraverseOptions wo=new TraverseOptions();
  ShortestPathTree spt=AStar.getShortestPathTree(gg,start,end,new State(0),wo);
  assertNotNull(spt);
}
