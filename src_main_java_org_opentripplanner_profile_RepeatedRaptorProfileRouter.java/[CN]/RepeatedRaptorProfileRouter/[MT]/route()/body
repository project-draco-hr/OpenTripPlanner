{
  long computationStartTime=System.currentTimeMillis();
  LOG.info("Begin profile request");
  LOG.info("Finding initial stops");
  TObjectIntMap<TransitStop> accessTimes=findInitialStops(false);
  LOG.info("Found {} initial transit stops",accessTimes.size());
  LOG.info("Make data...");
  TimeWindow window=new TimeWindow(request.fromTime,request.toTime,graph.index.servicesRunning(request.date));
  RaptorWorkerData raptorWorkerData=new RaptorWorkerData(graph,window);
  LOG.info("Done.");
  int[] walkTimes=new int[Vertex.getMaxIndex()];
  Arrays.fill(walkTimes,RaptorWorker.UNREACHED);
  for (  State state : walkOnlySpt.getAllStates()) {
    int time=(int)state.getElapsedTimeSeconds();
    int vidx=state.getVertex().getIndex();
    int otime=walkTimes[vidx];
    if (otime == RaptorWorker.UNREACHED || otime > time)     walkTimes[vidx]=time;
  }
  RaptorWorker worker=new RaptorWorker(raptorWorkerData,request);
  PropagatedTimesStore propagatedTimesStore=worker.runRaptor(graph,accessTimes,walkTimes);
  timeSurfaceRangeSet=new TimeSurface.RangeSet();
  timeSurfaceRangeSet.min=new TimeSurface(this);
  timeSurfaceRangeSet.avg=new TimeSurface(this);
  timeSurfaceRangeSet.max=new TimeSurface(this);
  propagatedTimesStore.makeSurfaces(timeSurfaceRangeSet);
  LOG.info("Profile request finished in {} seconds",(System.currentTimeMillis() - computationStartTime) / 1000.0);
}
