{
  Map<Vertex,Double> ret=new HashMap<Vertex,Double>();
  ret.put(targetVertex,0.0);
  BinHeap<Vertex> pq=new BinHeap<Vertex>();
  pq.insert(targetVertex,0.0);
  while (!pq.empty()) {
    double length0=pq.peek_min_key();
    Vertex v0=pq.extract_min();
    for (    Edge edge : getTurns(v0,!reverse)) {
      double length1=length0 + edge.getDistance();
      Vertex v1=reverse ? edge.getToVertex() : edge.getFromVertex();
      if (length1 < targetLength) {
        Double existingLength=ret.get(v1);
        if (existingLength == null || length1 < existingLength) {
          ret.put(v1,length1);
          pq.insert(v1,length1);
        }
      }
    }
  }
  return ret;
}
