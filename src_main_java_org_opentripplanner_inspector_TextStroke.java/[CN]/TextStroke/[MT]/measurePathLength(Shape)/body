{
  PathIterator it=new FlatteningPathIterator(shape.getPathIterator(null),FLATNESS);
  float points[]=new float[6];
  float moveX=0, moveY=0;
  float lastX=0, lastY=0;
  float thisX=0, thisY=0;
  int type=0;
  float total=0;
  while (!it.isDone()) {
    type=it.currentSegment(points);
switch (type) {
case PathIterator.SEG_MOVETO:
      moveX=lastX=points[0];
    moveY=lastY=points[1];
  break;
case PathIterator.SEG_CLOSE:
points[0]=moveX;
points[1]=moveY;
case PathIterator.SEG_LINETO:
thisX=points[0];
thisY=points[1];
float dx=thisX - lastX;
float dy=thisY - lastY;
total+=(float)Math.sqrt(dx * dx + dy * dy);
lastX=thisX;
lastY=thisY;
break;
}
it.next();
}
return total;
}
