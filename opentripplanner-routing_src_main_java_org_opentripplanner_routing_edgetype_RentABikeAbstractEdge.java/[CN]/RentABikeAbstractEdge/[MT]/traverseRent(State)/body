{
  RoutingRequest options=s0.getOptions();
  if (!s0.getNonTransitMode(options).equals(TraverseMode.WALK))   return null;
  if (!options.getModes().contains(TraverseMode.BICYCLE))   return null;
  BikeRentalStationVertex dropoff=(BikeRentalStationVertex)tov;
  if (options.isUseBikeRentalAvailabilityInformation() && dropoff.getBikesAvailable() == 0) {
    return null;
  }
  EdgeNarrative en=new FixedModeEdge(this,s0.getNonTransitMode(options));
  StateEditor s1=s0.edit(this,en);
  s1.incrementWeight(options.isArriveBy() ? options.bikeRentalDropoffCost : options.bikeRentalPickupCost);
  s1.incrementTimeInSeconds(options.isArriveBy() ? options.bikeRentalDropoffTime : options.bikeRentalPickupTime);
  s1.setBikeRenting(true);
  State s1b=s1.makeState();
  return s1b;
}
