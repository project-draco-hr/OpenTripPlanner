{
  JPanel vertexDataPanel=new JPanel();
  vertexDataPanel.setLayout(new BoxLayout(vertexDataPanel,BoxLayout.PAGE_AXIS));
  vertexDataPanel.setPreferredSize(new Dimension(300,600));
  leftPanel.add(vertexDataPanel,BorderLayout.CENTER);
  JLabel nvLabel=new JLabel("Vertices");
  vertexDataPanel.add(nvLabel);
  nearbyVertices=new JList();
  nearbyVertices.setVisibleRowCount(4);
  JScrollPane nvScrollPane=new JScrollPane(nearbyVertices);
  vertexDataPanel.add(nvScrollPane);
  JLabel ogeLabel=new JLabel("Outgoing edges");
  vertexDataPanel.add(ogeLabel);
  outgoingEdges=new JList();
  outgoingEdges.setVisibleRowCount(4);
  JScrollPane ogeScrollPane=new JScrollPane(outgoingEdges);
  vertexDataPanel.add(ogeScrollPane);
  JLabel iceLabel=new JLabel("Incoming edges");
  vertexDataPanel.add(iceLabel);
  incomingEdges=new JList();
  JScrollPane iceScrollPane=new JScrollPane(incomingEdges);
  vertexDataPanel.add(iceScrollPane);
  ListSelectionListener edgeChanged=new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      JList edgeList=(JList)e.getSource();
      Edge selected=(Edge)edgeList.getSelectedValue();
      boolean outgoing=(edgeList == outgoingEdges);
      reactToEdgeSelection(selected,outgoing);
    }
  }
;
  outgoingEdges.addListSelectionListener(edgeChanged);
  incomingEdges.addListSelectionListener(edgeChanged);
  nearbyVertices.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      outgoingEdges.removeAll();
      incomingEdges.removeAll();
      DisplayVertex selected=(DisplayVertex)nearbyVertices.getSelectedValue();
      if (selected != null) {
        Vertex nowSelected=selected.vertex;
        showGraph.highlightVertex(nowSelected);
        outgoingEdges.setModel(new EdgeListModel(nowSelected.getOutgoing()));
        incomingEdges.setModel(new EdgeListModel(nowSelected.getIncoming()));
      }
    }
  }
);
  JLabel pathsLabel=new JLabel("Paths");
  vertexDataPanel.add(pathsLabel);
  pathsList=new JList();
  pathsList.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent ev){
      GraphPath path=((PathPrinter)pathsList.getSelectedValue()).gp;
      DefaultListModel pathModel=new DefaultListModel();
      for (      State st : path.states) {
        pathModel.addElement(st.toString());
      }
      pathStates.setModel(pathModel);
      showGraph.highlightGraphPath(path);
    }
  }
);
  JScrollPane pathsScrollPane=new JScrollPane(pathsList);
  vertexDataPanel.add(pathsScrollPane);
}
