{
  JPanel pane=new JPanel();
  pane.setLayout(new GridLayout(0,2));
  firstComparePathStates=new JList<State>();
  JScrollPane stScrollPane=new JScrollPane(firstComparePathStates);
  stScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
  pane.add(stScrollPane);
  firstComparePathStates.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      JList<State> theList=(JList<State>)e.getSource();
      State st=(State)theList.getSelectedValue();
      DefaultListModel<String> stateListModel=new DefaultListModel<String>();
      stateListModel.addElement("weight:" + st.getWeight());
      stateListModel.addElement("bikeRenting:" + st.isBikeRenting());
      stateListModel.addElement("carParked:" + st.isCarParked());
      stateListModel.addElement("walkDistance:" + st.getWalkDistance());
      stateListModel.addElement("elapsedTime:" + st.getElapsedTimeSeconds());
      stateListModel.addElement("numBoardings:" + st.getNumBoardings());
      firstStateData.setModel(stateListModel);
    }
  }
);
  secondComparePathStates=new JList<State>();
  stScrollPane=new JScrollPane(secondComparePathStates);
  stScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
  pane.add(stScrollPane);
  secondComparePathStates.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      JList<State> theList=(JList<State>)e.getSource();
      State st=(State)theList.getSelectedValue();
      DefaultListModel<String> stateListModel=new DefaultListModel<String>();
      stateListModel.addElement("weight:" + st.getWeight());
      stateListModel.addElement("bikeRenting:" + st.isBikeRenting());
      stateListModel.addElement("carParked:" + st.isCarParked());
      stateListModel.addElement("walkDistance:" + st.getWalkDistance());
      stateListModel.addElement("elapsedTime:" + st.getElapsedTimeSeconds());
      stateListModel.addElement("numBoardings:" + st.getNumBoardings());
      secondStateData.setModel(stateListModel);
    }
  }
);
  firstStateData=new JList<String>();
  stScrollPane=new JScrollPane(firstStateData);
  stScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
  pane.add(stScrollPane);
  secondStateData=new JList<String>();
  stScrollPane=new JScrollPane(secondStateData);
  stScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
  pane.add(stScrollPane);
  JButton compareButton=new JButton();
  compareButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      State s1=firstComparePathStates.getSelectedValue();
      State s2=secondComparePathStates.getSelectedValue();
      System.out.println("s1 dominates s2:" + s1.dominates(s2));
    }
  }
);
  pane.add(compareButton);
  return pane;
}
