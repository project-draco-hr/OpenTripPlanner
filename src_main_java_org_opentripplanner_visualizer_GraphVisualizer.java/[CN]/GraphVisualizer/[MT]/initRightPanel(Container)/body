{
  JPanel rightPanel=new JPanel();
  rightPanel.setLayout(new BorderLayout());
  pane.add(rightPanel,BorderLayout.LINE_END);
  JTabbedPane rightPanelTabs=new JTabbedPane();
  rightPanel.add(rightPanelTabs,BorderLayout.LINE_END);
  serviceIdLabel=new JLabel("[service id]");
  rightPanel.add(serviceIdLabel,BorderLayout.PAGE_END);
  departurePattern=new JList<String>();
  JScrollPane dpScrollPane=new JScrollPane(departurePattern);
  rightPanelTabs.addTab("trip pattern",dpScrollPane);
  pathStates=new JList<State>();
  JScrollPane stScrollPane=new JScrollPane(pathStates);
  stScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
  rightPanelTabs.addTab("path states",stScrollPane);
  pathStates.addListSelectionListener(new ListSelectionListener(){
    @Override public void valueChanged(    ListSelectionEvent e){
      outgoingEdges.clearSelection();
      incomingEdges.clearSelection();
      @SuppressWarnings("unchecked") JList<State> theList=(JList<State>)e.getSource();
      State st=(State)theList.getSelectedValue();
      Edge edge=st.getBackEdge();
      reactToEdgeSelection(edge,false);
    }
  }
);
  metadataList=new JList<String>();
  metadataModel=new DefaultListModel<String>();
  metadataList.setModel(metadataModel);
  JScrollPane mdScrollPane=new JScrollPane(metadataList);
  mdScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
  rightPanelTabs.addTab("metadata",mdScrollPane);
  annotationMatches=new JList<GraphBuilderAnnotation>();
  annotationMatches.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      @SuppressWarnings("unchecked") JList<GraphBuilderAnnotation> theList=(JList<GraphBuilderAnnotation>)e.getSource();
      GraphBuilderAnnotation anno=theList.getSelectedValue();
      if (anno == null)       return;
      showGraph.drawAnotation(anno);
    }
  }
);
  annotationMatchesModel=new DefaultListModel<GraphBuilderAnnotation>();
  annotationMatches.setModel(annotationMatchesModel);
  JScrollPane amScrollPane=new JScrollPane(annotationMatches);
  amScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
  rightPanelTabs.addTab("annotations",amScrollPane);
  Dimension size=new Dimension(200,1600);
  amScrollPane.setMaximumSize(size);
  amScrollPane.setPreferredSize(size);
  stScrollPane.setMaximumSize(size);
  stScrollPane.setPreferredSize(size);
  mdScrollPane.setMaximumSize(size);
  mdScrollPane.setPreferredSize(size);
  rightPanelTabs.setMaximumSize(size);
  rightPanel.setMaximumSize(size);
}
