{
  if (target != this.target) {
    this.target=target;
    this.nVertices=GenericVertex.getMaxIndex();
    weights=new double[nVertices];
    Arrays.fill(weights,Double.POSITIVE_INFINITY);
    BinHeap<Vertex> q=new BinHeap<Vertex>();
    long t0=System.currentTimeMillis();
    if (target instanceof StreetLocation) {
      for (      DirectEdge de : ((StreetLocation)target).getExtra()) {
        GenericVertex gv;
        if (options.isArriveBy()) {
          gv=(GenericVertex)(de.getToVertex());
        }
 else {
          gv=(GenericVertex)(de.getFromVertex());
        }
        int gvi=gv.getIndex();
        if (gv == target)         continue;
        if (gvi >= nVertices)         continue;
        weights[gvi]=0;
        q.insert(gv,0);
      }
    }
 else {
      int i=((GenericVertex)target).getIndex();
      weights[i]=0;
      q.insert(target,0);
    }
    while (!q.empty()) {
      double uw=q.peek_min_key();
      Vertex u=q.extract_min();
      int ui=((GenericVertex)u).getIndex();
      if (uw > weights[ui])       continue;
      GraphVertex gv=g.getGraphVertex(u);
      if (gv == null)       continue;
      Iterable<Edge> edges;
      if (options.isArriveBy())       edges=gv.getOutgoing();
 else       edges=gv.getIncoming();
      for (      Edge e : edges) {
        if (e instanceof DirectEdge) {
          GenericVertex v=(GenericVertex)(options.isArriveBy() ? ((DirectEdge)e).getToVertex() : ((DirectEdge)e).getFromVertex());
          double vw=uw + (timeNotWeight ? e.timeLowerBound(options) : e.weightLowerBound(options));
          int vi=v.getIndex();
          if (weights[vi] > vw) {
            weights[vi]=vw;
            q.insert(v,vw);
          }
        }
      }
    }
    LOG.info("End SSSP ({} msec)",System.currentTimeMillis() - t0);
  }
}
