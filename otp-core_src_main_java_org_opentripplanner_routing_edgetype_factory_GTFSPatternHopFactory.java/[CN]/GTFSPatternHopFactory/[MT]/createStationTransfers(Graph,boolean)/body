{
  if (linkStopsToParentStops) {
    for (    Stop stop : _dao.getAllStops()) {
      String parentStation=stop.getParentStation();
      if (parentStation != null) {
        Vertex stopVertex=context.stopNodes.get(stop);
        String agencyId=stop.getId().getAgencyId();
        AgencyAndId parentStationId=new AgencyAndId(agencyId,parentStation);
        Stop parentStop=_dao.getStopForId(parentStationId);
        Vertex parentStopVertex=context.stopNodes.get(parentStop);
        new FreeEdge(parentStopVertex,stopVertex);
        new FreeEdge(stopVertex,parentStopVertex);
        Vertex stopArriveVertex=context.stopArriveNodes.get(stop);
        Vertex parentStopArriveVertex=context.stopArriveNodes.get(parentStop);
        if (stopArriveVertex != null && parentStopArriveVertex != null) {
          new FreeEdge(parentStopArriveVertex,stopArriveVertex);
          new FreeEdge(stopArriveVertex,parentStopArriveVertex);
        }
        Vertex stopDepartVertex=context.stopDepartNodes.get(stop);
        Vertex parentStopDepartVertex=context.stopDepartNodes.get(parentStop);
        if (stopDepartVertex != null && parentStopDepartVertex != null) {
          new FreeEdge(parentStopDepartVertex,stopDepartVertex);
          new FreeEdge(stopDepartVertex,parentStopDepartVertex);
        }
      }
    }
  }
  for (  Transfer transfer : _dao.getAllTransfers()) {
    int type=transfer.getTransferType();
    if (type == 3)     continue;
    if (transfer.getFromStop().equals(transfer.getToStop())) {
      continue;
    }
    TransitStop fromv=context.stopNodes.get(transfer.getFromStop());
    TransitStop tov=context.stopNodes.get(transfer.getToStop());
    double distance=distanceLibrary.distance(fromv.getCoordinate(),tov.getCoordinate());
    int time;
    if (transfer.getTransferType() == 2) {
      time=transfer.getMinTransferTime();
    }
 else {
      time=(int)distance;
    }
    TransferEdge transferEdge=new TransferEdge(fromv,tov,distance,time);
    CoordinateSequence sequence=new PackedCoordinateSequence.Double(new Coordinate[]{fromv.getCoordinate(),tov.getCoordinate()},2);
    LineString geometry=_geometryFactory.createLineString(sequence);
    transferEdge.setGeometry(geometry);
  }
}
