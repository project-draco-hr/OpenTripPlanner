{
  if (linkStopsWithinParentStops) {
    linkStopsWithinParentStops();
  }
  for (  Transfer transfer : _dao.getAllTransfers()) {
    int type=transfer.getTransferType();
    if (type == 3)     continue;
    if (transfer.getFromStop().equals(transfer.getToStop())) {
      continue;
    }
    TransitStop fromv=context.stopNodes.get(transfer.getFromStop());
    TransitStop tov=context.stopNodes.get(transfer.getToStop());
    double distance=distanceLibrary.distance(fromv.getCoordinate(),tov.getCoordinate());
    int time;
    if (transfer.getTransferType() == 2) {
      time=transfer.getMinTransferTime();
    }
 else {
      time=(int)distance;
    }
    TransferEdge transferEdge=new TransferEdge(fromv,tov,distance,time);
    CoordinateSequence sequence=new PackedCoordinateSequence.Double(new Coordinate[]{fromv.getCoordinate(),tov.getCoordinate()},2);
    LineString geometry=_geometryFactory.createLineString(sequence);
    transferEdge.setGeometry(geometry);
  }
}
