{
  _log.debug("creating linkages...");
  ArrayList<Vertex> vertices=new ArrayList<Vertex>(graph.getVertices());
  for (  Vertex v : vertices) {
    if (v instanceof TransitStop) {
      TransitStop ts=(TransitStop)v;
      if (!ts.isEntrance()) {
        boolean hasEntrance=false;
        for (        Edge e : v.getOutgoing()) {
          if (e instanceof PathwayEdge) {
            hasEntrance=true;
            break;
          }
        }
        if (hasEntrance) {
          continue;
        }
      }
      boolean wheelchairAccessible=ts.hasWheelchairEntrance();
      if (!networkLinkerLibrary.connectVertexToStreets(v,wheelchairAccessible)) {
        _log.warn(GraphBuilderAnnotation.register(graph,Variety.STOP_UNLINKED,ts));
      }
    }
  }
  networkLinkerLibrary.addAllReplacementEdgesToGraph();
  networkLinkerLibrary.markLocalStops();
  FindMaxWalkDistances.find(graph);
}
