{
  Collection<StreetVertex> existing=linker.splitVertices.get(v);
  if (existing != null)   return existing;
  String vertexLabel;
  if (v instanceof TransitVertex)   vertexLabel="link for " + ((TransitVertex)v).getStopId();
 else   vertexLabel="link for " + v;
  Coordinate coordinate=v.getCoordinate();
  CandidateEdgeBundle edges=linker.index.getClosestEdges(coordinate,linker.options,null,nearbyRouteEdges);
  if (edges == null || edges.size() < 2) {
    _log.debug("found too few edges: {} {}",v.getName(),v.getCoordinate());
    return null;
  }
  if (edges.endwise()) {
    return linker.index.getIntersectionAt(edges.endwiseVertex.getCoordinate());
  }
 else {
    List<StreetVertex> atIntersection=linker.index.getIntersectionAt(coordinate);
    if (atIntersection != null) {
      if (edges.getScore() > atIntersection.get(0).distance(coordinate))       return atIntersection;
    }
    return getSplitterVertices(vertexLabel,edges.toEdgeList(),coordinate);
  }
}
