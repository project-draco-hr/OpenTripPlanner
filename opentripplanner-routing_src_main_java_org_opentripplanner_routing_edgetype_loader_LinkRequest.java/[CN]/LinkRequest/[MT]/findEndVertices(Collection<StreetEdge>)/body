{
  HashMap<StreetVertex,Set<Edge>> edgesStartingAt=new HashMap<StreetVertex,Set<Edge>>();
  for (  Edge edge : edges) {
    Set<Edge> starting=edgesStartingAt.get(edge.getFromVertex());
    if (starting == null) {
      starting=new HashSet<Edge>();
      if (edge.getFromVertex() instanceof StreetVertex) {
        edgesStartingAt.put((StreetVertex)edge.getFromVertex(),starting);
      }
    }
    starting.add(edge);
  }
  int maxStarting=0;
  Entry<StreetVertex,Set<Edge>> startingVertex=null;
  for (  Entry<StreetVertex,Set<Edge>> entry : edgesStartingAt.entrySet()) {
    int numEdges=entry.getValue().size();
    if (numEdges >= maxStarting) {
      maxStarting=numEdges;
      startingVertex=entry;
    }
  }
  Coordinate startingCoordinate=startingVertex.getKey().getCoordinate();
  int maxEnding=0;
  Entry<StreetVertex,Set<Edge>> endingVertex=null;
  for (  Entry<StreetVertex,Set<Edge>> entry : edgesStartingAt.entrySet()) {
    Set<Edge> backEdges=entry.getValue();
    for (    Edge edge : backEdges) {
      if (edge.getToVertex().getCoordinate().equals(startingCoordinate)) {
        int numEdges=backEdges.size();
        if (numEdges >= maxEnding) {
          maxEnding=numEdges;
          endingVertex=entry;
        }
      }
    }
  }
  return new P2<Entry<StreetVertex,Set<Edge>>>(startingVertex,endingVertex);
}
