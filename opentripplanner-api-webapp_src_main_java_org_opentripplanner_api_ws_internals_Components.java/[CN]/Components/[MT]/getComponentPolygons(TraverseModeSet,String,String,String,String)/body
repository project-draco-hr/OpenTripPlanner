{
  RoutingRequest options=new RoutingRequest(modes);
  options.bannedRoutes=new HashSet<RouteSpec>();
  if (bannedRoutes.length() > 0) {
    options.bannedRoutes.addAll(RouteSpec.listFromString(bannedRoutes));
  }
  Graph graph=graphService.getGraph(routerId);
  long dateTime=DateUtils.toDate(date,time,graph.getTimeZone()).getTime();
  if (cachedPolygons == null || dateTime != cachedDateTime || !options.equals(cachedOptions)) {
    cachedOptions=options;
    cachedDateTime=dateTime;
    cachedPolygons=AnalysisUtils.getComponentPolygons(graph,options,dateTime);
  }
  GraphComponentPolygons out=new GraphComponentPolygons();
  out.components=new ArrayList<GraphComponent>();
  for (  Geometry geometry : cachedPolygons) {
    GraphComponent component=new GraphComponent();
    component.polygon=geometry;
    out.components.add(component);
  }
  return out;
}
