{
  temporaryEdges=Collections.newSetFromMap(new ConcurrentHashMap<Edge,Boolean>());
  streetIndex=indexFactory.newIndex(this);
  LOG.debug("street index built.");
  LOG.debug("Rebuilding edge and vertex indices.");
  rebuildVertexAndEdgeIndices();
  Set<TripPattern> tableTripPatterns=Sets.newHashSet();
  for (  PatternArriveVertex pav : IterableLibrary.filter(this.getVertices(),PatternArriveVertex.class)) {
    tableTripPatterns.add(pav.getTripPattern());
  }
  for (  TripPattern ttp : tableTripPatterns) {
    if (ttp != null)     ttp.getScheduledTimetable().finish();
  }
  this.index=new GraphIndex(this);
}
