{
  LOG.info(graph.addBuilderAnnotation(new Graphwide("Multiplying all bike safety values by " + (1 / bestBikeSafety))));
  HashSet<Edge> seenEdges=new HashSet<Edge>();
  HashSet<AreaEdgeList> seenAreas=new HashSet<AreaEdgeList>();
  for (  Vertex vertex : graph.getVertices()) {
    for (    Edge e : vertex.getOutgoing()) {
      if (e instanceof AreaEdge) {
        AreaEdgeList areaEdgeList=((AreaEdge)e).getArea();
        if (seenAreas.contains(areaEdgeList))         continue;
        seenAreas.add(areaEdgeList);
        for (        NamedArea area : areaEdgeList.getAreas()) {
          area.setBicycleSafetyMultiplier(area.getBicycleSafetyMultiplier() / bestBikeSafety);
        }
      }
      if (!(e instanceof StreetEdge)) {
        continue;
      }
      StreetEdge pse=(StreetEdge)e;
      if (!seenEdges.contains(e)) {
        seenEdges.add(e);
        pse.setBicycleSafetyFactor(pse.getBicycleSafetyFactor() / bestBikeSafety);
      }
    }
    for (    Edge e : vertex.getIncoming()) {
      if (!(e instanceof StreetEdge)) {
        continue;
      }
      StreetEdge pse=(StreetEdge)e;
      if (!seenEdges.contains(e)) {
        seenEdges.add(e);
        pse.setBicycleSafetyFactor(pse.getBicycleSafetyFactor() / bestBikeSafety);
      }
    }
  }
}
