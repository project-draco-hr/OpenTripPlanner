{
  if (staticBikeRental) {
    processBikeRentalNodes();
  }
  for (  Area area : Iterables.concat(osmdb.getWalkableAreas(),osmdb.getParkAndRideAreas()))   setWayName(area.parent);
  initIntersectionNodes();
  buildBasicGraph();
  if (skipVisibility) {
    LOG.info("Skipping visibility graph construction for walkable areas.");
  }
 else {
    buildWalkableAreas();
  }
  if (staticParkAndRide) {
    buildParkAndRideAreas();
  }
  buildElevatorEdges(graph);
  unifyTurnRestrictions();
  if (customNamer != null) {
    customNamer.postprocess(graph);
  }
  extra.put(ElevationPoint.class,elevationData);
  applyBikeSafetyFactor(graph);
}
