{
  final double D0=0.8 * GRID_SIZE_METERS;
  final double V0=walkSpeed;
  Coordinate coordinateOrigin=pointSet.getCoordinate(0);
  final double cosLat=FastMath.cos(toRadians(coordinateOrigin.y));
  double dY=Math.toDegrees(GRID_SIZE_METERS / SphericalDistanceLibrary.RADIUS_OF_EARTH_IN_M);
  double dX=dY / cosLat;
  ZSampleGrid grid=new SparseMatrixZSampleGrid<WTWD>(16,times.length,dX,dY,coordinateOrigin);
  AccumulativeGridSampler.AccumulativeMetric<WTWD> metric=new SampleGridRenderer.WTWDAccumulativeMetric(cosLat,D0,V0,GRID_SIZE_METERS);
  AccumulativeGridSampler<WTWD> sampler=new AccumulativeGridSampler<>(grid,metric);
  for (int p=0; p < times.length; p++) {
    int time=times[p];
    WTWD z=new WTWD();
    z.w=1.0;
    z.d=0.0;
    z.wTime=time;
    z.wBoardings=0;
    z.wWalkDist=0;
    sampler.addSamplingPoint(pointSet.getCoordinate(p),z,V0);
  }
  sampler.close();
  return grid;
}
