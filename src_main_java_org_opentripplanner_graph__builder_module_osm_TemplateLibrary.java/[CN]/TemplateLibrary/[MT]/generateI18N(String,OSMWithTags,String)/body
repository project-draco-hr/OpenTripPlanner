{
  if (pattern == null)   return null;
  Map<String,StringBuffer> i18n=new HashMap<String,StringBuffer>();
  i18n.put(defaultLang,new StringBuffer());
  Matcher matcher=patternMatcher.matcher(pattern);
  int lastEnd=0;
  while (matcher.find()) {
    for (    StringBuffer sb : i18n.values())     sb.append(pattern,lastEnd,matcher.start());
    lastEnd=matcher.end();
    String defKey=matcher.group(1);
    Map<String,String> i18nTags=way.getTagsByPrefix(defKey);
    if (i18nTags != null) {
      for (      Map.Entry<String,String> kv : i18nTags.entrySet()) {
        if (!kv.getKey().equals(defKey)) {
          String lang=kv.getKey().substring(defKey.length() + 1);
          if (!i18n.containsKey(lang))           i18n.put(lang,new StringBuffer(i18n.get(defaultLang)));
        }
      }
    }
    String defTag=way.getTag(defKey);
    for (    String lang : i18n.keySet()) {
      String i18nTag=way.getTag(defKey + ":" + lang);
      i18n.get(lang).append(i18nTag != null ? i18nTag : (defTag != null ? defTag : ""));
    }
  }
  for (  StringBuffer sb : i18n.values())   sb.append(pattern,lastEnd,pattern.length());
  Map<String,String> out=new HashMap<String,String>(i18n.size());
  for (  Map.Entry<String,StringBuffer> kv : i18n.entrySet())   out.put(kv.getKey(),kv.getValue().toString());
  return out;
}
