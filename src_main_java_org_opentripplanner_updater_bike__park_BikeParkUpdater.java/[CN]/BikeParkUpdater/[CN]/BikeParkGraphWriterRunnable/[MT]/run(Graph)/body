{
  Set<BikePark> bikeParkSet=new HashSet<BikePark>();
  for (  BikePark bikePark : bikeParks) {
    bikeService.addBikePark(bikePark);
    bikeParkSet.add(bikePark);
    BikeParkVertex bikeParkVertex=verticesByPark.get(bikePark);
    if (bikeParkVertex == null) {
      bikeParkVertex=new BikeParkVertex(graph,bikePark);
      if (!linker.link(bikeParkVertex)) {
        LOG.warn("{} not near any streets; it will not be usable.",bikePark);
      }
      verticesByPark.put(bikePark,bikeParkVertex);
      new BikeParkEdge(bikeParkVertex);
    }
 else {
      bikeParkVertex.setSpacesAvailable(bikePark.spacesAvailable);
    }
  }
  List<BikePark> toRemove=new ArrayList<BikePark>();
  for (  Entry<BikePark,BikeParkVertex> entry : verticesByPark.entrySet()) {
    BikePark bikePark=entry.getKey();
    if (bikeParkSet.contains(bikePark))     continue;
    BikeParkVertex vertex=entry.getValue();
    if (graph.containsVertex(vertex)) {
      graph.removeVertexAndEdges(vertex);
    }
    toRemove.add(bikePark);
    bikeService.removeBikePark(bikePark);
  }
  for (  BikePark bikePark : toRemove) {
    verticesByPark.remove(bikePark);
  }
}
