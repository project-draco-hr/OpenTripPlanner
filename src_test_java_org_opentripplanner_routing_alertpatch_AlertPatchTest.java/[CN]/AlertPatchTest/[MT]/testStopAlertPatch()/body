{
  AlertPatch snp1=new AlertPatch();
  snp1.setTimePeriods(Collections.singletonList(new TimePeriod(0,1000L * 60 * 60* 24* 365* 40)));
  Alert note1=Alert.createSimpleAlerts("The first note");
  snp1.setAlert(note1);
  snp1.setId("id1");
  snp1.setStop(new AgencyAndId("agency","A"));
  snp1.apply(graph);
  Vertex stop_a=graph.getVertex("agency:A");
  Vertex stop_e=graph.getVertex("agency:E_arrive");
  ShortestPathTree spt;
  GraphPath optimizedPath, unoptimizedPath;
  options.dateTime=TestUtils.dateInSeconds("America/New_York",2009,8,7,0,0,0);
  options.setRoutingContext(graph,stop_a,stop_e);
  spt=aStar.getShortestPathTree(options);
  optimizedPath=spt.getPath(stop_e,true);
  unoptimizedPath=spt.getPath(stop_e,false);
  assertNotNull(optimizedPath);
  HashSet<Alert> expectedAlerts=new HashSet<Alert>();
  expectedAlerts.add(note1);
  Edge optimizedEdge=optimizedPath.states.get(1).getBackEdge();
  HashSet<Alert> optimizedAlerts=new HashSet<Alert>();
  for (  AlertPatch alertPatch : graph.getAlertPatches(optimizedEdge)) {
    optimizedAlerts.add(alertPatch.getAlert());
  }
  assertEquals(expectedAlerts,optimizedAlerts);
  Edge unoptimizedEdge=unoptimizedPath.states.get(1).getBackEdge();
  HashSet<Alert> unoptimizedAlerts=new HashSet<Alert>();
  for (  AlertPatch alertPatch : graph.getAlertPatches(unoptimizedEdge)) {
    unoptimizedAlerts.add(alertPatch.getAlert());
  }
  assertEquals(expectedAlerts,unoptimizedAlerts);
}
