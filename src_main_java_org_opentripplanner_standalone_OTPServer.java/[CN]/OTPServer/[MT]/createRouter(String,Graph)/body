{
  Router router=new Router(routerId,graph);
  if (params.longDistance) {
    LongDistancePathService pathService=new LongDistancePathService(graphService,sptServiceFactory);
    pathService.timeout=10;
    router.pathService=pathService;
  }
 else {
    RetryingPathServiceImpl pathService=new RetryingPathServiceImpl(graphService,sptServiceFactory);
    pathService.setFirstPathTimeout(10.0);
    pathService.setMultiPathTimeout(1.0);
    router.pathService=pathService;
  }
  router.planGenerator=new PlanGenerator(graph,router.pathService);
  router.tileRendererManager=new TileRendererManager(graph);
  if (params.analyst) {
    router.tileCache=new TileCache(router.graph);
    router.sptCache=new SPTCache(sptServiceFactory,graph);
    router.renderer=new Renderer(router.tileCache,router.sptCache);
  }
  return router;
}
