{
  transitStopTree=new STRtree();
  intersectionTree=new STRtree();
  for (  GraphVertex gv : graph.getVertices()) {
    Vertex v=gv.vertex;
    for (    StreetEdge e : filter(gv.getOutgoing(),StreetEdge.class)) {
      if (e.getGeometry() == null) {
        continue;
      }
      Envelope env=e.getGeometry().getEnvelopeInternal();
      edgeTree.insert(env,e);
    }
    if (v instanceof TransitStop) {
      TransitStop ts=(TransitStop)v;
      if (!ts.isEntrance()) {
        boolean hasEntrance=false;
        for (        Edge e : gv.getOutgoing()) {
          if (e instanceof PathwayEdge) {
            hasEntrance=true;
            break;
          }
        }
        if (hasEntrance) {
          continue;
        }
      }
      Envelope env=new Envelope(v.getCoordinate());
      transitStopTree.insert(env,v);
    }
    if (v instanceof StreetVertex || v instanceof EndpointVertex) {
      Envelope env=new Envelope(v.getCoordinate());
      intersectionTree.insert(env,v);
    }
  }
  transitStopTree.build();
}
