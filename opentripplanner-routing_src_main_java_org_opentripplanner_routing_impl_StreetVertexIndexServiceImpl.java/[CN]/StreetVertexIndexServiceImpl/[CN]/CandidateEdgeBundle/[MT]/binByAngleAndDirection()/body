{
  Map<P2<Double>,CandidateEdgeBundle> bins=new HashMap<P2<Double>,CandidateEdgeBundle>();
  CANDIDATE:   for (  CandidateEdge ce : this) {
    for (    Entry<P2<Double>,CandidateEdgeBundle> bin : bins.entrySet()) {
      double distance=bin.getKey().getFirst();
      double direction=bin.getKey().getSecond();
      if (Math.abs(direction - ce.directionToEdge) < DIRECTION_ERROR && Math.abs(distance - ce.distance) < DISTANCE_ERROR) {
        bin.getValue().add(ce);
        continue CANDIDATE;
      }
    }
    P2<Double> rTheta=new P2<Double>(ce.distance,ce.directionToEdge);
    CandidateEdgeBundle bundle=new CandidateEdgeBundle();
    bundle.add(ce);
    bins.put(rTheta,bundle);
  }
  return bins.values();
}
