{
  Options options=new Options();
  options.addOption(ARG_TIME,true,"time to plan trip");
  options.addOption(ARG_SAMPLES,true,"number of samples to generate");
  options.addOption(ARG_LAT_NOISE,true,"lat noise");
  options.addOption(ARG_LON_NOISE,true,"lon noise");
  options.addOption(ARG_ENVELOPE,true,"envelope");
  Parser parser=new GnuParser();
  CommandLine cli=parser.parse(options,args);
  args=cli.getArgs();
  if (args.length != 2) {
    System.err.println("usage: input_gtfs output_file");
    System.exit(-1);
  }
  GenerateBenchmarkPlanMain task=new GenerateBenchmarkPlanMain();
  task.setInputPath(new File(args[0]));
  task.setOutputPath(new File(args[1]));
  if (cli.hasOption(ARG_TIME)) {
    Date time=DateLibrary.getIso8601StringAsDate(cli.getOptionValue(ARG_TIME));
    task.setTime(time);
  }
  if (cli.hasOption(ARG_SAMPLES)) {
    int samples=Integer.parseInt(cli.getOptionValue(ARG_SAMPLES));
    task.setSamples(samples);
  }
  if (cli.hasOption(ARG_LAT_NOISE))   task.setLatNoise(Double.parseDouble(cli.getOptionValue(ARG_LAT_NOISE)));
  if (cli.hasOption(ARG_LON_NOISE))   task.setLatNoise(Double.parseDouble(cli.getOptionValue(ARG_LON_NOISE)));
  if (cli.hasOption(ARG_ENVELOPE)) {
    String value=cli.getOptionValue(ARG_ENVELOPE);
    String[] tokens=value.split(",");
    if (tokens.length != 4) {
      System.err.println("usage: -envelope latMin,lonMin,latMax,lonMax");
      System.exit(-1);
    }
    Coordinate c1=new Coordinate(Double.parseDouble(tokens[1]),Double.parseDouble(tokens[0]));
    Coordinate c2=new Coordinate(Double.parseDouble(tokens[3]),Double.parseDouble(tokens[2]));
    task.setEnvelope(new Envelope(c1,c2));
  }
  task.run();
}
