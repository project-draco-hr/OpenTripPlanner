{
  super();
  System.out.printf("Loading targets from raster file %s\n",filename);
  try {
    File rasterFile=new File(filename);
    File csvFile=new File("/home/syncopate/Desktop/coverage.csv");
    PrintWriter csvWriter=new PrintWriter(csvFile);
    AbstractGridFormat format=GridFormatFinder.findFormat(rasterFile);
    AbstractGridCoverage2DReader reader=format.getReader(rasterFile);
    CoordinateReferenceSystem sourceCRS=reader.getCrs();
    GridCoverage2D cov=reader.read(null);
    CoordinateReferenceSystem WGS84=CRS.decode("EPSG:4326",true);
    MathTransform tr=CRS.findMathTransform(sourceCRS,WGS84);
    ReferencedEnvelope wgsEnv=new ReferencedEnvelope(1.86,2.76,48.52,49.1,WGS84);
    ReferencedEnvelope sourceEnv=wgsEnv.transform(sourceCRS,true);
    cov=(GridCoverage2D)Operations.DEFAULT.crop(cov,sourceEnv);
    GridGeometry2D gg=cov.getGridGeometry();
    GridEnvelope2D gridEnv=gg.getGridRange2D();
    GridCoordinates2D coord=new GridCoordinates2D();
    int[] val=new int[1];
    for (int gy=gridEnv.y, ny=0; ny < gridEnv.height; ny++, gy++) {
      for (int gx=gridEnv.x, nx=0; nx < gridEnv.width; gx++, nx++) {
        coord.x=gx;
        coord.y=gy;
        DirectPosition sourcePos=gg.gridToWorld(coord);
        cov.evaluate(sourcePos,val);
        if (val[0] <= 0)         continue;
        DirectPosition targetPos=tr.transform(sourcePos,null);
        csvWriter.printf("%.6f;%.6f;%f\n",targetPos.getOrdinate(0),targetPos.getOrdinate(1),val[0] / 100.0);
        Vertex vertex=new GenericVertex("raster",targetPos.getOrdinate(0),targetPos.getOrdinate(1));
        Individual individual=new Individual(vertex,val[0] / 100);
        elements.add(individual);
      }
    }
  }
 catch (  Exception ex) {
    throw new IllegalStateException("Error loading population from raster file",ex);
  }
  System.out.printf("Done loading raster from file\n");
}
