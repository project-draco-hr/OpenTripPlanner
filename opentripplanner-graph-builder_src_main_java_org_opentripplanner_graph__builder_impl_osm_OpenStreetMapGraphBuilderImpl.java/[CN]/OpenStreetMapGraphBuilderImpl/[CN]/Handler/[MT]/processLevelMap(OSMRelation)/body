{
  ArrayList<String> levels=new ArrayList<String>();
  HashMap<String,String> levelFullNames=new HashMap<String,String>();
  int levelDelta=0;
  Pattern isRange=Pattern.compile("^[0-9]+\\-[0-9]+$");
  Matcher m;
  for (  String level : relation.getTag("levels").split(";")) {
    m=isRange.matcher(level);
    if (m.matches()) {
      String[] range=level.split("-");
      for (int i=Integer.parseInt(range[0]); i <= Integer.parseInt(range[1]); i++) {
        levels.add(Integer.toString(i));
      }
    }
 else {
      levels.add(level);
    }
  }
  for (int i=0; i < levels.size(); i++) {
    String level=levels.get(i);
    Integer numLevel=null;
    try {
      numLevel=Integer.parseInt(level);
    }
 catch (    NumberFormatException e) {
      try {
        numLevel=Integer.parseInt(level.split("=")[0]);
      }
 catch (      NumberFormatException e2) {
        try {
          numLevel=Integer.parseInt(level.split("@")[1]);
        }
 catch (        NumberFormatException e3) {
          continue;
        }
catch (        ArrayIndexOutOfBoundsException e4) {
          continue;
        }
      }
    }
    if (numLevel == 0) {
      levelDelta=-1 * levels.indexOf(level);
    }
    String levelIndex;
    String levelName;
    level=level.split("@")[0];
    levelIndex=level.split("=")[0];
    try {
      levelName=level.split("=")[1];
    }
 catch (    ArrayIndexOutOfBoundsException e) {
      levelName=levelIndex;
    }
    levels.set(i,levelIndex);
    levelFullNames.put(levelIndex,levelName);
  }
  for (  OSMRelationMember member : relation.getMembers()) {
    if ("way".equals(member.getType()) && _ways.containsKey(member.getRef())) {
      OSMWay way=_ways.get(member.getRef());
      if (way != null) {
        String role=member.getRole();
        if (!relation.hasTag("role:" + role)) {
          if (levels.indexOf(role) != -1) {
            way.addTag("otp:numeric_level",Integer.toString(levels.indexOf(role) + levelDelta));
            way.addTag("otp:human_level",levelFullNames.get(role));
          }
 else {
            _log.warn(member.getRef() + " has undefined level " + role);
          }
        }
      }
    }
  }
}
