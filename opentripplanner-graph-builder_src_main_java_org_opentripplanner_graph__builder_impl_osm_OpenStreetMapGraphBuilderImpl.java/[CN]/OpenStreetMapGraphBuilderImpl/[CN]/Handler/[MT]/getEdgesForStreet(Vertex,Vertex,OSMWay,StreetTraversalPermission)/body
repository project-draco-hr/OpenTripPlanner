{
  ArrayList<Street> streets=new ArrayList<Street>();
  double d=from.distance(to);
  Map<String,String> tags=way.getTags();
  if (permissions == StreetTraversalPermission.NONE)   return streets;
  if ("yes".equals(tags.get("oneway")) && ("no".equals(tags.get("oneway:bicycle")) || "opposite_lane".equals(tags.get("cycleway")) || "opposite".equals(tags.get("cycleway")))) {
    streets.add(getEdgeForStreet(from,to,way,d,permissions));
    if (permissions.remove(StreetTraversalPermission.CAR) != StreetTraversalPermission.NONE)     streets.add(getEdgeForStreet(to,from,way,d,permissions.remove(StreetTraversalPermission.CAR)));
  }
 else   if ("yes".equals(tags.get("oneway")) || "roundabout".equals(tags.get("junction"))) {
    streets.add(getEdgeForStreet(from,to,way,d,permissions));
    if (permissions.allows(StreetTraversalPermission.PEDESTRIAN))     streets.add(getEdgeForStreet(to,from,way,d,StreetTraversalPermission.PEDESTRIAN));
  }
 else {
    streets.add(getEdgeForStreet(from,to,way,d,permissions));
    streets.add(getEdgeForStreet(to,from,way,d,permissions));
  }
  return streets;
}
