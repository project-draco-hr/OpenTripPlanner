{
  Map<Long,HashSet<Long>> subgraphs=new HashMap<Long,HashSet<Long>>();
  Map<Long,ArrayList<Long>> neighborsForNode=new HashMap<Long,ArrayList<Long>>();
  for (  OSMWay way : _ways.values()) {
    List<Long> nodes=way.getNodeRefs();
    for (    long node : nodes) {
      ArrayList<Long> nodelist=neighborsForNode.get(node);
      if (nodelist == null) {
        nodelist=new ArrayList<Long>();
        neighborsForNode.put(node,nodelist);
      }
      nodelist.addAll(nodes);
    }
  }
  for (  long node : _nodes.keySet()) {
    if (subgraphs.containsKey(node)) {
      continue;
    }
    HashSet<Long> subgraph=computeConnectedSubgraph(neighborsForNode,node);
    for (    long subnode : subgraph) {
      subgraphs.put(subnode,subgraph);
    }
  }
  for (  HashSet<Long> subgraph : subgraphs.values()) {
    if (subgraph.size() < 20) {
      _nodes.keySet().removeAll(subgraph);
    }
  }
}
