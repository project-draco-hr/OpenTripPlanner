{
  this.graph=graph;
  processRelations();
  _nodes.keySet().retainAll(_nodesWithNeighbors);
  initIntersectionNodes();
  buildBasicGraph();
  buildAreas();
  buildElevatorEdges(graph);
  Map<Edge,TurnRestriction> turnRestrictions=new HashMap<Edge,TurnRestriction>();
  for (  TurnRestriction restriction : turnRestrictionsByTag.values()) {
    turnRestrictions.put(restriction.from,restriction);
  }
  if (customNamer != null) {
    customNamer.postprocess(graph);
  }
  generateElevationProfiles(graph);
  applyBikeSafetyFactor(graph);
  StreetUtils.makeEdgeBased(graph,endpoints,turnRestrictions);
}
