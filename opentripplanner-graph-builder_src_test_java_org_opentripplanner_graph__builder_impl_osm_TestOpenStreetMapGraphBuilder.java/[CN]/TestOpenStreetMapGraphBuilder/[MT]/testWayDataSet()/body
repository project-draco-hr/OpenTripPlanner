{
  OSMWay way=new OSMWay();
  way.addTag("highway","footway");
  way.addTag("surface","gravel");
  way.addTag("access","no");
  WayPropertySet wayPropertySet=new WayPropertySet();
  assertEquals(wayPropertySet.getDataForWay(way),wayPropertySet.defaultProperties);
  OSMSpecifier gravel_only=new OSMSpecifier();
  gravel_only.addTag("surface","gravel");
  WayProperties gravel_is_safer=new WayProperties();
  gravel_is_safer.setSafetyFeatures(new P2<Double>(1.5,1.5));
  wayPropertySet.addProperties(gravel_only,gravel_is_safer);
  OSMSpecifier footway_only=new OSMSpecifier();
  footway_only.addTag("highway","footway");
  WayProperties footways_allow_peds=new WayProperties();
  footways_allow_peds.setPermission(StreetTraversalPermission.PEDESTRIAN);
  wayPropertySet.addProperties(footway_only,footways_allow_peds);
  WayProperties dataForWay=wayPropertySet.getDataForWay(way);
  assertEquals(dataForWay,gravel_is_safer);
  OSMSpecifier gravel_and_footway=new OSMSpecifier();
  gravel_and_footway.addTag("surface","gravel");
  gravel_and_footway.addTag("highway","footway");
  WayProperties safer_and_peds=new WayProperties();
  safer_and_peds.setSafetyFeatures(new P2<Double>(1.5,1.5));
  safer_and_peds.setPermission(StreetTraversalPermission.PEDESTRIAN);
  wayPropertySet.addProperties(gravel_and_footway,safer_and_peds);
  dataForWay=wayPropertySet.getDataForWay(way);
  assertEquals(dataForWay,safer_and_peds);
}
