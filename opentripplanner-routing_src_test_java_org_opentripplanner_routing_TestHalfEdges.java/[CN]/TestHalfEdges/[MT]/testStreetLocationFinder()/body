{
  StreetVertexIndexServiceImpl finder=new StreetVertexIndexServiceImpl(graph);
  finder.setup();
  assertTrue(finder.getLocalTransitStops(new Coordinate(-74.005000001,40.01),100).size() > 0);
  StreetLocation some=(StreetLocation)finder.getClosestVertex(new Coordinate(-74.00,40.00),null);
  assertNotNull(some);
  assertTrue("wheelchair accessibility is correctly set (vertices)",some.isWheelchairAccessible());
  StreetLocation start=(StreetLocation)finder.getClosestVertex(new Coordinate(-74.01,40.004),null);
  assertNotNull(start);
  assertTrue("wheelchair accessibility is correctly set (splitting)",start.isWheelchairAccessible());
  List<DirectEdge> extras=start.getExtra();
  assertEquals(10,extras.size());
  TraverseOptions biking=new TraverseOptions(new TraverseModeSet(TraverseMode.BICYCLE));
  StreetLocation end=(StreetLocation)finder.getClosestVertex(new Coordinate(-74.0,40.008),biking);
  assertNotNull(end);
  extras=end.getExtra();
  assertEquals(10,extras.size());
  StreetLocation location=(StreetLocation)finder.getClosestVertex(new Coordinate(-74.004999,40.01),new TraverseOptions());
  assertTrue(location.isWheelchairAccessible());
  boolean found=false;
  for (  Edge extra : location.getExtra()) {
    if (extra instanceof FreeEdge && ((FreeEdge)extra).getToVertex().equals(station1)) {
      found=true;
    }
  }
  assertTrue(found);
}
