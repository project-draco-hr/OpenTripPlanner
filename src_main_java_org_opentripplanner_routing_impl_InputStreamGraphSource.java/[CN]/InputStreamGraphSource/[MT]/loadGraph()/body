{
  final Graph newGraph;
  try (InputStream is=streams.getGraphInputStream()){
    LOG.info("Loading graph...");
    try {
      newGraph=Graph.load(new ObjectInputStream(is),loadLevel,streetVertexIndexFactory);
    }
 catch (    Exception ex) {
      LOG.error("Exception while loading graph '{}'.",routerId,ex);
      return null;
    }
    newGraph.routerId=(routerId);
  }
 catch (  IOException e) {
    LOG.warn("Graph file not found or not openable for routerId '{}': {}",routerId,e);
    return null;
  }
  try (InputStream is=streams.getConfigInputStream()){
    JsonNode config=MissingNode.getInstance();
    if (is != null) {
      ObjectMapper mapper=new ObjectMapper();
      mapper.configure(JsonParser.Feature.ALLOW_COMMENTS,true);
      mapper.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES,true);
      config=mapper.readTree(is);
    }
    Router newRouter=new Router(routerId,newGraph);
    newRouter.startup(config);
    return newRouter;
  }
 catch (  IOException e) {
    LOG.error("Can't read config file.");
    LOG.error(e.getMessage());
    return null;
  }
}
