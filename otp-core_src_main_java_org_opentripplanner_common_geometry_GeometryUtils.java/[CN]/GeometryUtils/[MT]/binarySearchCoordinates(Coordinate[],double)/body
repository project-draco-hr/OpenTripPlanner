{
  if (coordinates.length < 2)   return 0;
  int low=0;
  int high=coordinates.length - 1;
  int middle;
  if (requestedDistance <= computePartialLength(coordinates,low))   return low;
  if (requestedDistance >= computePartialLength(coordinates,high))   return high;
  while (low < high - 1) {
    middle=(low + high) >>> 1;
    double middleDistance=computePartialLength(coordinates,middle);
    if (requestedDistance > middleDistance) {
      low=middle;
    }
 else     if (requestedDistance < middleDistance) {
      high=middle;
    }
 else {
      return middle;
    }
  }
  double lowDistance=computePartialLength(coordinates,low);
  double highDistance=computePartialLength(coordinates,high);
  double differenceHighLow=highDistance - lowDistance;
  double differenceRequestedLow=requestedDistance - lowDistance;
  return low + (differenceRequestedLow / differenceHighLow);
}
