{
  double[] result=new double[max_gindex];
  Arrays.fill(result,Double.POSITIVE_INFINITY);
  IntBinHeap q=new IntBinHeap(max_gindex / 2);
  for (  Edge de : origin.getExtra()) {
    Vertex toVertex=de.getToVertex();
    int toGroup=toVertex.getGroupIndex();
    if (toVertex == origin)     continue;
    if (toGroup >= max_gindex || toGroup < 0)     continue;
    result[toGroup]=0;
    q.insert(toGroup,0);
  }
  double walkScale=-1 / options.getRoadSpeedUpperBound() * options.walkReluctance;
  LOG.info("Performing SSSP");
  long t0=System.currentTimeMillis();
  while (!q.empty()) {
    double uw=q.peek_min_key();
    int ui=q.p_extract_min();
    int[] vs=vertex[ui];
    double[] ws=weight[ui];
    LOG.trace("extract {}",uw);
    if (vs == null)     continue;
    int ne=vs.length;
    for (int ei=0; ei < ne; ei++) {
      int vi=vs[ei];
      double weight=ws[ei];
      if (weight < 0)       weight=weight * walkScale;
      double vw=uw + weight;
      if (result[vi] > vw) {
        result[vi]=vw;
        q.insert(vi,vw);
      }
    }
  }
  LOG.info("End SSSP ({} msec)",System.currentTimeMillis() - t0);
  return result;
}
