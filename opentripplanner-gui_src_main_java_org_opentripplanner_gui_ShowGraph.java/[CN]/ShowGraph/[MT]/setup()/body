{
  screenBounds=new Envelope(0,700,0,700);
  background(0);
  size(700,700,P2D);
  vertexIndex=new STRtree();
  edgeIndex=new STRtree();
  for (  Vertex v : graph.getVertices()) {
    Envelope env=new Envelope(v.getCoordinate());
    if (v.getType() == TransitStop.class) {
      modelBounds.expandToInclude(env);
      vertexIndex.insert(env,v);
    }
 else     if (v.getType() == Intersection.class) {
      vertexIndex.insert(env,v);
    }
 else {
    }
    for (    Edge e : v.getOutgoing()) {
      if (e instanceof Street || e instanceof StreetTransitLink) {
        env=new Envelope(e.getFromVertex().getCoordinate());
        env.expandToInclude(e.getToVertex().getCoordinate());
        edgeIndex.insert(env,e);
      }
    }
  }
  modelBounds.expandBy(0.02);
  modelOuterBounds=new Envelope(modelBounds);
  vertexIndex.build();
  edgeIndex.build();
  addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseMoved(    MouseEvent e){
      super.mouseMoved(e);
      Point p=e.getLocationOnScreen();
      mouseModelX=toModelX(p.x);
      mouseModelY=toModelY(p.y);
    }
  }
);
  String[] fonts=PFont.list();
  String[] preferredFonts={"Courier","Mono"};
  PFont font=null;
  for (  String preferredFontName : preferredFonts) {
    for (    String fontName : fonts) {
      if (fontName.contains(preferredFontName)) {
        font=createFont(fontName,16);
        break;
      }
    }
    if (font != null) {
      break;
    }
  }
  textFont(font);
}
