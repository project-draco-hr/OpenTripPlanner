{
  size(getSize().width,getSize().height,P2D);
  buildSpatialIndex();
  modelBounds=(Envelope)(vertexIndex.getRoot().getBounds());
  modelBounds.expandBy(0.02);
  matchAspect();
  modelOuterBounds=new Envelope(modelBounds);
  String[] fonts=PFont.list();
  String[] preferredFonts={"Mono","Courier"};
  PFont font=null;
  for (  String preferredFontName : preferredFonts) {
    for (    String fontName : fonts) {
      if (fontName.contains(preferredFontName)) {
        font=createFont(fontName,16);
        break;
      }
    }
    if (font != null) {
      break;
    }
  }
  textFont(font);
  textMode(SCREEN);
  addMouseWheelListener(this);
  addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseMoved(    MouseEvent e){
      super.mouseMoved(e);
      Point p=e.getPoint();
      mouseModelX=toModelX(p.x);
      mouseModelY=toModelY(p.y);
    }
  }
);
  addComponentListener(new ComponentAdapter(){
    public void componentResized(    ComponentEvent e){
      matchAspect();
      drawLevel=DRAW_PARTIAL;
    }
  }
);
  frameRate(FRAME_RATE);
}
