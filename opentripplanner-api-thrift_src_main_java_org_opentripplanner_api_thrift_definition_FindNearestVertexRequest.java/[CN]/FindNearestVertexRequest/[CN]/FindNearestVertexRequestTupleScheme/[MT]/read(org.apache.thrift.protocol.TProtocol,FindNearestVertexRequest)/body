{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.location=new org.opentripplanner.api.thrift.definition.Location();
  struct.location.read(iprot);
  struct.setLocationIsSet(true);
  BitSet incoming=iprot.readBitSet(1);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TSet _set21=new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32,iprot.readI32());
      struct.allowed_modes=new HashSet<org.opentripplanner.api.thrift.definition.TravelMode>(2 * _set21.size);
      for (int _i22=0; _i22 < _set21.size; ++_i22) {
        org.opentripplanner.api.thrift.definition.TravelMode _elem23;
        _elem23=org.opentripplanner.api.thrift.definition.TravelMode.findByValue(iprot.readI32());
        struct.allowed_modes.add(_elem23);
      }
    }
    struct.setAllowed_modesIsSet(true);
  }
}
