{
  if (elevationProfile == null) {
    return null;
  }
  List<Coordinate> coordList=new LinkedList<Coordinate>();
  if (start < 0)   start=0;
  Coordinate[] coordinateArray=elevationProfile.toCoordinateArray();
  double length=coordinateArray[coordinateArray.length - 1].x;
  if (end > length)   end=length;
  boolean started=false;
  boolean finished=false;
  Coordinate lastCoord=null;
  for (  Coordinate coord : coordinateArray) {
    if (coord.x >= start && coord.x <= end) {
      coordList.add(new Coordinate(coord.x - start,coord.y));
      if (!started) {
        started=true;
        if (lastCoord == null) {
          continue;
        }
        double run=coord.x - lastCoord.x;
        if (run < 1) {
          continue;
        }
        double p=(coord.x - start) / run;
        double rise=coord.y - lastCoord.y;
        Coordinate interpolatedStartCoordinate=new Coordinate(0,lastCoord.y + p * rise);
        coordList.add(0,interpolatedStartCoordinate);
      }
    }
 else     if (coord.x > end && !finished && started) {
      finished=true;
      double run=coord.x - lastCoord.x;
      if (run < 1) {
        continue;
      }
      double p=(end - lastCoord.x) / run;
      double rise=coord.y - lastCoord.y;
      Coordinate interpolatedEndCoordinate=new Coordinate(end,lastCoord.y + p * rise);
      coordList.add(interpolatedEndCoordinate);
    }
    lastCoord=coord;
  }
  Coordinate coordArr[]=new Coordinate[coordList.size()];
  return new PackedCoordinateSequence.Float(coordList.toArray(coordArr),2);
}
