{
  Graph graph=_graphService.getGraph();
  boolean foundAlternatePaths=false;
  Vertex start=edge.getFromVertex();
  GraphVertex gv=graph.getGraphVertex(start);
  if (gv == null) {
    return false;
  }
  TraverseMode requestedMode=state.getOptions().getModes().getNonTransitMode();
  for (  Edge out : gv.getOutgoing()) {
    if (out == edge) {
      continue;
    }
    if (!(out instanceof TurnEdge || out instanceof OutEdge || out instanceof PlainStreetEdge)) {
      continue;
    }
    if (state != null) {
      State outState=out.traverse(state);
      if (outState == null) {
        continue;
      }
      if (!outState.getBackEdgeNarrative().getMode().equals(requestedMode)) {
        continue;
      }
      Vertex tov=outState.getVertex();
      boolean found=false;
      for (      Edge out2 : graph.getOutgoing(tov)) {
        State outState2=out2.traverse(outState);
        if (outState2 != null && !outState2.getBackEdgeNarrative().getMode().equals(requestedMode)) {
          continue;
        }
        found=true;
        break;
      }
      if (!found) {
        continue;
      }
    }
    foundAlternatePaths=true;
    break;
  }
  return foundAlternatePaths;
}
