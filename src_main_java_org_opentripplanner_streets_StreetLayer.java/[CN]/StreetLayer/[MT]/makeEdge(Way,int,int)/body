{
  long beginOsmNodeId=way.nodes[beginIdx];
  long endOsmNodeId=way.nodes[endIdx];
  int beginVertexIndex=getVertexIndexForOsmNode(beginOsmNodeId);
  int endVertexIndex=getVertexIndexForOsmNode(endOsmNodeId);
  Node prevNode=osm.nodes.get(beginOsmNodeId);
  double lengthMeters=0;
  for (int n=beginIdx; n <= endIdx; n++) {
    long nodeId=way.nodes[n];
    Node node=osm.nodes.get(nodeId);
    lengthMeters+=SphericalDistanceLibrary.fastDistance(prevNode.getLat(),prevNode.getLon(),node.getLat(),node.getLon());
    prevNode=node;
  }
  pointsPerEdgeHistogram.add(endIdx - beginIdx + 1);
  if (lengthMeters * 1000 > Integer.MAX_VALUE) {
    LOG.warn("Street segment was too long, skipping.");
    return;
  }
  edgeStore.addStreetPair(beginVertexIndex,endVertexIndex,lengthMeters);
}
