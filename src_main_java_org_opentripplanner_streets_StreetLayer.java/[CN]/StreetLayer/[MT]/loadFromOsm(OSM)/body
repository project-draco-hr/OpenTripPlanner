{
  countAndAllocate(osm);
  copyIntersectionCoordiantes(osm);
  LOG.info("Making street edges from OSM ways...");
  for (  Map.Entry<Long,Way> entry : osm.ways.entrySet()) {
    Way way=entry.getValue();
    if (!way.hasTag("highway")) {
      continue;
    }
    int nEdgesCreated=0;
    int beginIdx=0;
    for (int n=1; n < way.nodes.length; n++) {
      if (osm.intersectionNodes.contains(way.nodes[n]) || n == (way.nodes.length - 1)) {
        makeEdge(osm,way,beginIdx,n);
        nEdgesCreated+=1;
        beginIdx=n;
      }
    }
    edgesPerWayHistogram.add(nEdgesCreated);
  }
  LOG.info("Done making street edges.");
  LOG.info("Made {} edges and {} vertices.",nEdges,nVertices);
  edgesPerWayHistogram.display();
  pointsPerEdgeHistogram.display();
  vertexIndexForOsmNode=null;
}
