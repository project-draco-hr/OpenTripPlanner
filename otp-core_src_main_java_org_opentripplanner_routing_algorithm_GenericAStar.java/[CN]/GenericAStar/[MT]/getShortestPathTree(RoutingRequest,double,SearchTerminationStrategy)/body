{
  long abortTime=DateUtils.absoluteTimeout(relTimeout);
  startSearch(options,terminationStrategy);
  while (!runState.pq.empty()) {
    if (abortTime < Long.MAX_VALUE && System.currentTimeMillis() > abortTime) {
      LOG.warn("Search timeout. origin={} target={}",runState.rctx.origin,runState.rctx.target);
      options.rctx.aborted=true;
      options.rctx.debug.timedOut=true;
      storeMemory();
      return runState.spt;
    }
    if (!iterate()) {
      continue;
    }
    if (runState.terminationStrategy != null) {
      if (!runState.terminationStrategy.shouldSearchContinue(runState.rctx.origin,runState.rctx.target,runState.u,runState.spt,runState.options))       break;
    }
 else     if (!runState.options.batch && runState.u_vertex == runState.rctx.target && runState.u.isFinal() && runState.u.allPathParsersAccept()) {
      runState.targetAcceptedStates.add(runState.u);
      runState.options.rctx.debug.foundPath();
      if (runState.targetAcceptedStates.size() >= nPaths) {
        LOG.debug("total vertices visited {}",runState.nVisited);
        break;
      }
    }
  }
  storeMemory();
  return runState.spt;
}
