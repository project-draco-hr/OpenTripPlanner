{
  GtfsContext context=GtfsLibrary.readGtfs(new File(ConstantsForTests.FAKE_GTFS));
  options=new TraverseOptions();
  options.setGtfsContext(context);
  graph=new Graph();
  GTFSPatternHopFactory factory=new GTFSPatternHopFactory(context);
  factory.run(graph);
  TransitIndexService index=new TransitIndexService(){
    @Override public Edge getPrealightEdge(    AgencyAndId stop){
      return graph.getOutgoing("agency_A_arrive").iterator().next();
    }
    @Override public Edge getPreboardEdge(    AgencyAndId stop){
      return graph.getIncoming("agency_A_depart").iterator().next();
    }
    @Override public RouteVariant getVariantForTrip(    AgencyAndId trip){
      return null;
    }
    @Override public List<RouteVariant> getVariantsForRoute(    AgencyAndId route){
      return null;
    }
  }
;
  graph.putService(TransitIndexService.class,index);
}
