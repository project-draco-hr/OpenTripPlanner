{
  for (  Long fromWay : osmdb.getTurnRestrictionWayIds()) {
    for (    TurnRestrictionTag restrictionTag : osmdb.getFromWayTurnRestrictions(fromWay)) {
      if (restrictionTag.possibleFrom.isEmpty()) {
        LOG.debug("No from edge found for " + restrictionTag);
        continue;
      }
      if (restrictionTag.possibleTo.isEmpty()) {
        LOG.debug("No to edge found for " + restrictionTag);
        continue;
      }
      for (      StreetEdge from : restrictionTag.possibleFrom) {
        if (from == null) {
          LOG.warn("from-edge is null in turn " + restrictionTag);
          continue;
        }
        for (        StreetEdge to : restrictionTag.possibleTo) {
          if (from == null || to == null) {
            continue;
          }
          int angleDiff=from.getOutAngle() - to.getInAngle();
          if (angleDiff < 0) {
            angleDiff+=360;
          }
switch (restrictionTag.direction) {
case LEFT:
            if (angleDiff >= 160) {
              continue;
            }
          break;
case RIGHT:
        if (angleDiff <= 200)         continue;
      break;
case U:
    if ((angleDiff <= 150 || angleDiff > 210))     continue;
  break;
case STRAIGHT:
if (angleDiff >= 30 && angleDiff < 330) continue;
break;
}
TurnRestriction restriction=new TurnRestriction();
restriction.from=from;
restriction.to=to;
restriction.type=restrictionTag.type;
restriction.modes=restrictionTag.modes;
restriction.time=restrictionTag.time;
graph.addTurnRestriction(from,restriction);
}
}
}
}
}
