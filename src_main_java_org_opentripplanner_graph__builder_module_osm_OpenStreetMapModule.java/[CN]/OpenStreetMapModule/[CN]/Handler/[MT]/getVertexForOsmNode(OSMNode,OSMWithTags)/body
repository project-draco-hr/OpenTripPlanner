{
  OsmVertex iv=null;
  if (node.isMultiLevel()) {
    return recordLevel(node,way);
  }
  long nid=node.getId();
  iv=intersectionNodes.get(nid);
  if (iv == null) {
    Coordinate coordinate=getCoordinate(node);
    String label=getNodeLabel(node);
    String highway=node.getTag("highway");
    if ("motorway_junction".equals(highway)) {
      String ref=node.getTag("ref");
      if (ref != null) {
        ExitVertex ev=new ExitVertex(graph,label,coordinate.x,coordinate.y);
        ev.setExitName(ref);
        iv=ev;
      }
    }
    if (node.isStop()) {
      String ref=node.getTag("ref");
      String name=node.getTag("name");
      if (ref != null) {
        TransitStopStreetVertex tsv=new TransitStopStreetVertex(graph,label,coordinate.x,coordinate.y,name,ref);
        iv=tsv;
      }
    }
    if (node.isBollard()) {
      BarrierVertex bv=new BarrierVertex(graph,label,coordinate.x,coordinate.y);
      bv.setBarrierPermissions(OSMFilter.getPermissionsForEntity(node,BarrierVertex.defaultBarrierPermissions));
      iv=bv;
    }
    if (iv == null) {
      iv=new OsmVertex(graph,label,coordinate.x,coordinate.y,new NonLocalizedString(label));
      if (node.hasTrafficLight()) {
        iv.trafficLight=(true);
      }
    }
    intersectionNodes.put(nid,iv);
    endpoints.add(iv);
  }
  return iv;
}
