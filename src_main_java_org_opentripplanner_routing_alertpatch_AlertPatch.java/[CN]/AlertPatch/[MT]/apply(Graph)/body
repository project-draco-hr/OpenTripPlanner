{
  Agency agency=null;
  if (feedId != null) {
    Map<String,Agency> agencies=graph.index.agenciesForFeedId.get(feedId);
    agency=this.agency != null ? agencies.get(this.agency) : null;
  }
  Route route=this.route != null ? graph.index.routeForId.get(this.route) : null;
  Stop stop=this.stop != null ? graph.index.stopForId.get(this.stop) : null;
  Trip trip=this.trip != null ? graph.index.tripForId.get(this.trip) : null;
  if (route != null || trip != null || agency != null) {
    Collection<TripPattern> tripPatterns=null;
    if (trip != null) {
      tripPatterns=new LinkedList<>();
      TripPattern tripPattern=graph.index.patternForTrip.get(trip);
      if (tripPattern != null) {
        tripPatterns.add(tripPattern);
      }
    }
 else     if (route != null) {
      tripPatterns=graph.index.patternsForRoute.get(route);
    }
 else {
      Multimap<Agency,TripPattern> patternsForAgency=graph.index.agencyPatternsForFeedId.get(feedId);
      if (patternsForAgency != null) {
        tripPatterns=patternsForAgency.get(agency);
      }
    }
    if (tripPatterns != null) {
      for (      TripPattern tripPattern : tripPatterns) {
        if (direction != null && !direction.equals(tripPattern.getDirection())) {
          continue;
        }
        if (directionId != -1 && directionId == tripPattern.directionId) {
          continue;
        }
        for (int i=0; i < tripPattern.stopPattern.stops.length; i++) {
          if (stop == null || stop.equals(tripPattern.stopPattern.stops[i])) {
            graph.addAlertPatch(tripPattern.boardEdges[i],this);
            graph.addAlertPatch(tripPattern.alightEdges[i],this);
          }
        }
      }
    }
  }
 else   if (stop != null) {
    TransitStop transitStop=graph.index.stopVertexForStop.get(stop);
    for (    Edge edge : transitStop.getOutgoing()) {
      if (edge instanceof PreBoardEdge) {
        graph.addAlertPatch(edge,this);
        break;
      }
    }
    for (    Edge edge : transitStop.getIncoming()) {
      if (edge instanceof PreAlightEdge) {
        graph.addAlertPatch(edge,this);
        break;
      }
    }
  }
}
