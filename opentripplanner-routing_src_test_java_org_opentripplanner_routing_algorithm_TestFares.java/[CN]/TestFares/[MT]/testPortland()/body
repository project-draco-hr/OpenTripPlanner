{
  GtfsContext context=GtfsLibrary.readGtfs(new File(ConstantsForTests.PORTLAND_GTFS));
  TraverseOptions options=new TraverseOptions();
  options.setGtfsContext(context);
  Graph gg=new Graph();
  GTFSPatternHopFactory factory=new GTFSPatternHopFactory(context);
  factory.run(gg);
  ShortestPathTree spt;
  GraphPath path=null;
  long startTime=new GregorianCalendar(2009,11,1,12,0,0).getTimeInMillis();
  spt=AStar.getShortestPathTree(gg,"TriMet_10579","TriMet_8346",new State(startTime),options);
  path=spt.getPath(gg.getVertex("TriMet_8346"));
  assertNotNull(path);
  Fare cost=path.getCost();
  assertEquals(cost.getFare(FareType.regular),new Money(new WrappedCurrency("USD"),200));
  System.out.println("long trip");
  startTime=new GregorianCalendar(2009,11,1,14,0,0).getTimeInMillis();
  spt=AStar.getShortestPathTree(gg,"TriMet_8389","TriMet_1252",new State(startTime),options);
  path=spt.getPath(gg.getVertex("TriMet_1252"));
  assertNotNull(path);
  cost=path.getCost();
  startTime=new GregorianCalendar(2009,11,1,14,0,0).getTimeInMillis();
  spt=AStar.getShortestPathTree(gg,"TriMet_10428","TriMet_4231",new State(startTime),options);
  path=spt.getPath(gg.getVertex("TriMet_4231"));
  assertNotNull(path);
  cost=path.getCost();
}
