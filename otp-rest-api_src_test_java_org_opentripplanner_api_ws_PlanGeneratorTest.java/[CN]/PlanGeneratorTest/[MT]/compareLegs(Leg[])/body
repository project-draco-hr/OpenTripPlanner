{
  assertEquals(9,legs.length);
  assertNull(legs[0].agencyId);
  assertNull(legs[0].agencyName);
  assertNull(legs[0].agencyUrl);
  assertEquals(2,legs[0].agencyTimeZoneOffset);
  assertNull(legs[0].notes);
  assertNull(legs[0].alerts);
  assertEquals("",legs[0].route);
  assertNull(legs[0].routeId);
  assertNull(legs[0].routeShortName);
  assertNull(legs[0].routeLongName);
  assertNull(legs[0].routeType);
  assertNull(legs[0].routeColor);
  assertNull(legs[0].routeTextColor);
  assertNull(legs[0].tripId);
  assertNull(legs[0].tripShortName);
  assertNull(legs[0].tripBlockId);
  assertNull(legs[0].headsign);
  assertFalse(legs[0].rentedBike);
  assertFalse(legs[0].isTransitLeg());
  assertFalse(legs[0].interlineWithPreviousLeg);
  assertNull(legs[0].boardRule);
  assertNull(legs[0].alightRule);
  assertEquals("WALK",legs[0].mode);
  assertEquals(0L,legs[0].startTime.getTimeInMillis());
  assertEquals(3000L,legs[0].endTime.getTimeInMillis());
  assertEquals(3000L,legs[0].getDuration());
  assertEquals(0,legs[0].departureDelay);
  assertEquals(0,legs[0].arrivalDelay);
  assertFalse(legs[0].realTime);
  assertEquals(DISTANCES[0],legs[0].distance,0.0);
  assertEquals("Train",legs[1].agencyId);
  assertEquals("John Train",legs[1].agencyName);
  assertEquals("http://www.train.org/",legs[1].agencyUrl);
  assertEquals(2,legs[1].agencyTimeZoneOffset);
  assertNull(legs[1].notes);
  assertNull(legs[1].alerts);
  assertEquals("A",legs[1].route);
  assertEquals("A",legs[1].routeId);
  assertEquals("A",legs[1].routeShortName);
  assertEquals("'A' Train",legs[1].routeLongName);
  assertEquals(2,legs[1].routeType.intValue());
  assertEquals("White",legs[1].routeColor);
  assertEquals("Black",legs[1].routeTextColor);
  assertEquals("A",legs[1].tripId);
  assertEquals("A",legs[1].tripShortName);
  assertEquals("Alock",legs[1].tripBlockId);
  assertEquals("Street Fighting Man",legs[1].headsign);
  assertFalse(legs[1].rentedBike);
  assertTrue(legs[1].isTransitLeg());
  assertFalse(legs[1].interlineWithPreviousLeg);
  assertEquals("coordinateWithDriver",legs[1].boardRule);
  assertNull(legs[1].alightRule);
  assertEquals("RAIL",legs[1].mode);
  assertEquals(4000L,legs[1].startTime.getTimeInMillis());
  assertEquals(16000L,legs[1].endTime.getTimeInMillis());
  assertEquals(12000L,legs[1].getDuration());
  assertEquals(0,legs[1].departureDelay);
  assertEquals(0,legs[1].arrivalDelay);
  assertFalse(legs[1].realTime);
  assertEquals(DISTANCES[1],legs[1].distance,EPSILON);
  assertEquals("Train",legs[2].agencyId);
  assertEquals("John Train",legs[2].agencyName);
  assertEquals("http://www.train.org/",legs[2].agencyUrl);
  assertEquals(2,legs[2].agencyTimeZoneOffset);
  assertNull(legs[2].notes);
  assertNull(legs[2].alerts);
  assertEquals("B",legs[2].route);
  assertEquals("B",legs[2].routeId);
  assertEquals("B",legs[2].routeShortName);
  assertEquals("Another Train",legs[2].routeLongName);
  assertEquals(2,legs[2].routeType.intValue());
  assertEquals("Cyan",legs[2].routeColor);
  assertEquals("Yellow",legs[2].routeTextColor);
  assertEquals("B",legs[2].tripId);
  assertEquals("B",legs[2].tripShortName);
  assertEquals("Block",legs[2].tripBlockId);
  assertEquals("No Expectations",legs[2].headsign);
  assertFalse(legs[2].rentedBike);
  assertTrue(legs[2].isTransitLeg());
  assertTrue(legs[2].interlineWithPreviousLeg);
  assertNull(legs[2].boardRule);
  assertEquals("mustPhone",legs[2].alightRule);
  assertEquals("RAIL",legs[2].mode);
  assertEquals(20000L,legs[2].startTime.getTimeInMillis());
  assertEquals(24000L,legs[2].endTime.getTimeInMillis());
  assertEquals(4000L,legs[2].getDuration());
  assertEquals(0,legs[2].departureDelay);
  assertEquals(0,legs[2].arrivalDelay);
  assertFalse(legs[2].realTime);
  assertEquals(DISTANCES[2],legs[2].distance,EPSILON);
  assertNull(legs[3].agencyId);
  assertNull(legs[3].agencyName);
  assertNull(legs[3].agencyUrl);
  assertEquals(2,legs[3].agencyTimeZoneOffset);
  assertNull(legs[3].notes);
  assertNull(legs[3].alerts);
  assertEquals("",legs[3].route);
  assertNull(legs[3].routeId);
  assertNull(legs[3].routeShortName);
  assertNull(legs[3].routeLongName);
  assertNull(legs[3].routeType);
  assertNull(legs[3].routeColor);
  assertNull(legs[3].routeTextColor);
  assertNull(legs[3].tripId);
  assertNull(legs[3].tripShortName);
  assertNull(legs[3].tripBlockId);
  assertNull(legs[3].headsign);
  assertFalse(legs[3].rentedBike);
  assertFalse(legs[3].isTransitLeg());
  assertFalse(legs[3].interlineWithPreviousLeg);
  assertNull(legs[3].boardRule);
  assertNull(legs[3].alightRule);
  assertEquals("WALK",legs[3].mode);
  assertEquals(24000L,legs[3].startTime.getTimeInMillis());
  assertEquals(32000L,legs[3].endTime.getTimeInMillis());
  assertEquals(8000L,legs[3].getDuration());
  assertEquals(0,legs[3].departureDelay);
  assertEquals(0,legs[3].arrivalDelay);
  assertFalse(legs[3].realTime);
  assertEquals(DISTANCES[3],legs[3].distance,0.0);
  assertEquals("Ferry",legs[4].agencyId);
  assertEquals("Brian Ferry",legs[4].agencyName);
  assertEquals("http://www.ferry.org/",legs[4].agencyUrl);
  assertEquals(2,legs[4].agencyTimeZoneOffset);
  assertNull(legs[4].notes);
  assertNull(legs[4].alerts);
  assertEquals("C",legs[4].route);
  assertEquals("C",legs[4].routeId);
  assertEquals("C",legs[4].routeShortName);
  assertEquals("Ferry Cross the Mersey",legs[4].routeLongName);
  assertEquals(4,legs[4].routeType.intValue());
  assertEquals("Black",legs[4].routeColor);
  assertEquals("White",legs[4].routeTextColor);
  assertEquals("C",legs[4].tripId);
  assertEquals("C",legs[4].tripShortName);
  assertEquals("Clock",legs[4].tripBlockId);
  assertEquals("Handsome Molly",legs[4].headsign);
  assertFalse(legs[4].rentedBike);
  assertTrue(legs[4].isTransitLeg());
  assertFalse(legs[4].interlineWithPreviousLeg);
  assertEquals("mustPhone",legs[4].boardRule);
  assertEquals("coordinateWithDriver",legs[4].alightRule);
  assertEquals("FERRY",legs[4].mode);
  assertEquals(40000L,legs[4].startTime.getTimeInMillis());
  assertEquals(43000L,legs[4].endTime.getTimeInMillis());
  assertEquals(3000L,legs[4].getDuration());
  assertEquals(8,legs[4].departureDelay);
  assertEquals(7,legs[4].arrivalDelay);
  assertTrue(legs[4].realTime);
  assertEquals(DISTANCES[4],legs[4].distance,EPSILON);
  assertNull(legs[5].agencyId);
  assertNull(legs[5].agencyName);
  assertNull(legs[5].agencyUrl);
  assertEquals(2,legs[5].agencyTimeZoneOffset);
  assertNull(legs[5].notes);
  assertNull(legs[5].alerts);
  assertEquals("",legs[5].route);
  assertNull(legs[5].routeId);
  assertNull(legs[5].routeShortName);
  assertNull(legs[5].routeLongName);
  assertNull(legs[5].routeType);
  assertNull(legs[5].routeColor);
  assertNull(legs[5].routeTextColor);
  assertNull(legs[5].tripId);
  assertNull(legs[5].tripShortName);
  assertNull(legs[5].tripBlockId);
  assertNull(legs[5].headsign);
  assertFalse(legs[5].rentedBike);
  assertFalse(legs[5].isTransitLeg());
  assertFalse(legs[5].interlineWithPreviousLeg);
  assertNull(legs[5].boardRule);
  assertNull(legs[5].alightRule);
  assertEquals("WALK",legs[5].mode);
  assertEquals(44000L,legs[5].startTime.getTimeInMillis());
  assertEquals(53000L,legs[5].endTime.getTimeInMillis());
  assertEquals(9000L,legs[5].getDuration());
  assertEquals(0,legs[5].departureDelay);
  assertEquals(0,legs[5].arrivalDelay);
  assertFalse(legs[5].realTime);
  assertEquals(DISTANCES[5],legs[5].distance,0.0);
  assertNull(legs[6].agencyId);
  assertNull(legs[6].agencyName);
  assertNull(legs[6].agencyUrl);
  assertEquals(2,legs[6].agencyTimeZoneOffset);
  assertNull(legs[6].notes);
  assertNull(legs[6].alerts);
  assertEquals("",legs[6].route);
  assertNull(legs[6].routeId);
  assertNull(legs[6].routeShortName);
  assertNull(legs[6].routeLongName);
  assertNull(legs[6].routeType);
  assertNull(legs[6].routeColor);
  assertNull(legs[6].routeTextColor);
  assertNull(legs[6].tripId);
  assertNull(legs[6].tripShortName);
  assertNull(legs[6].tripBlockId);
  assertNull(legs[6].headsign);
  assertTrue(legs[6].rentedBike);
  assertFalse(legs[6].isTransitLeg());
  assertFalse(legs[6].interlineWithPreviousLeg);
  assertNull(legs[6].boardRule);
  assertNull(legs[6].alightRule);
  assertEquals("BICYCLE",legs[6].mode);
  assertEquals(53000L,legs[6].startTime.getTimeInMillis());
  assertEquals(55000L,legs[6].endTime.getTimeInMillis());
  assertEquals(2000L,legs[6].getDuration());
  assertEquals(0,legs[6].departureDelay);
  assertEquals(0,legs[6].arrivalDelay);
  assertFalse(legs[6].realTime);
  assertEquals(DISTANCES[6],legs[6].distance,0.0);
  assertNull(legs[7].agencyId);
  assertNull(legs[7].agencyName);
  assertNull(legs[7].agencyUrl);
  assertEquals(2,legs[7].agencyTimeZoneOffset);
  assertEquals(1,legs[7].notes.size());
  assertEquals(alertsExample,legs[7].notes.get(0).text);
  assertEquals(1,legs[7].alerts.size());
  assertEquals(Alert.createSimpleAlerts(alertsExample),legs[7].alerts.get(0));
  assertEquals("",legs[7].route);
  assertNull(legs[7].routeId);
  assertNull(legs[7].routeShortName);
  assertNull(legs[7].routeLongName);
  assertNull(legs[7].routeType);
  assertNull(legs[7].routeColor);
  assertNull(legs[7].routeTextColor);
  assertNull(legs[7].tripId);
  assertNull(legs[7].tripShortName);
  assertNull(legs[7].tripBlockId);
  assertNull(legs[7].headsign);
  assertTrue(legs[7].rentedBike);
  assertFalse(legs[7].isTransitLeg());
  assertFalse(legs[7].interlineWithPreviousLeg);
  assertNull(legs[7].boardRule);
  assertNull(legs[7].alightRule);
  assertEquals("BICYCLE",legs[7].mode);
  assertEquals(55000L,legs[7].startTime.getTimeInMillis());
  assertEquals(57000L,legs[7].endTime.getTimeInMillis());
  assertEquals(2000L,legs[7].getDuration());
  assertEquals(0,legs[7].departureDelay);
  assertEquals(0,legs[7].arrivalDelay);
  assertFalse(legs[7].realTime);
  assertEquals(DISTANCES[7],legs[7].distance,0.0);
  assertNull(legs[8].agencyId);
  assertNull(legs[8].agencyName);
  assertNull(legs[8].agencyUrl);
  assertEquals(2,legs[8].agencyTimeZoneOffset);
  assertNull(legs[8].notes);
  assertNull(legs[8].alerts);
  assertEquals("",legs[8].route);
  assertNull(legs[8].routeId);
  assertNull(legs[8].routeShortName);
  assertNull(legs[8].routeLongName);
  assertNull(legs[8].routeType);
  assertNull(legs[8].routeColor);
  assertNull(legs[8].routeTextColor);
  assertNull(legs[8].tripId);
  assertNull(legs[8].tripShortName);
  assertNull(legs[8].tripBlockId);
  assertNull(legs[8].headsign);
  assertFalse(legs[8].rentedBike);
  assertFalse(legs[8].isTransitLeg());
  assertFalse(legs[8].interlineWithPreviousLeg);
  assertNull(legs[8].boardRule);
  assertNull(legs[8].alightRule);
  assertEquals("WALK",legs[8].mode);
  assertEquals(57000L,legs[8].startTime.getTimeInMillis());
  assertEquals(60000L,legs[8].endTime.getTimeInMillis());
  assertEquals(3000L,legs[8].getDuration());
  assertEquals(0,legs[8].departureDelay);
  assertEquals(0,legs[8].arrivalDelay);
  assertFalse(legs[8].realTime);
  assertEquals(DISTANCES[8],legs[8].distance,0.0);
}
