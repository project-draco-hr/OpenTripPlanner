{
  for (  Stop stop : _dao.getAllStops()) {
    Vertex vertex=_graph.addVertex(new SpatialVertex(id(stop.getId()),stop.getLon(),stop.getLat()));
    vertex.type=TransitStop.class;
  }
  if (verbose) {
    System.out.println("Loading hops");
  }
  GTFSHopFactory hf=new GTFSHopFactory(_context);
  ArrayList<Hop> hops=hf.run(verbose);
  for (  Hop hop : hops) {
    if (drawHandler != null) {
      drawHandler.handle(hop);
    }
    StopTime startStopTime=hop.getStartStopTime();
    StopTime endStopTime=hop.getEndStopTime();
    Vertex startStation=_graph.getVertex(id(startStopTime.getStop().getId()));
    Vertex endStation=_graph.getVertex(id(endStopTime.getStop().getId()));
    Vertex startJourney=_graph.addVertex(id(startStopTime.getStop().getId()) + "_" + id(startStopTime.getTrip().getId()));
    Vertex endJourney=_graph.addVertex(id(endStopTime.getStop().getId()) + "_" + id(endStopTime.getTrip().getId()));
    Board boarding=new Board(hop);
    _graph.addEdge(startStation,startJourney,boarding);
    _graph.addEdge(endJourney,endStation,new Alight());
    _graph.addEdge(startJourney,endJourney,hop);
  }
}
