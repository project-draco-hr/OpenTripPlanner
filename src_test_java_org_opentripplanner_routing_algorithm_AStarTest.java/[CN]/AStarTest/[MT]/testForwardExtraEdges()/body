{
  RoutingRequest options=new RoutingRequest();
  options.setWalkSpeed(1.0);
  StreetLocation fromLocation=new StreetLocation(_graph,"near_shilshole_22nd",new Coordinate(-122.385050,47.666620),"near_shilshole_22nd");
  fromLocation.getExtra().add(new SimpleConcreteEdge(fromLocation,_graph.getVertex("shilshole_22nd")));
  StreetLocation toLocation=new StreetLocation(_graph,"near_56th_20th",new Coordinate(-122.382347,47.669518),"near_56th_20th");
  toLocation.getExtra().add(new SimpleConcreteEdge(_graph.getVertex("56th_20th"),toLocation));
  options.setRoutingContext(_graph,fromLocation,toLocation);
  ShortestPathTree tree=new GenericAStar().getShortestPathTree(options);
  GraphPath path=tree.getPath(toLocation,false);
  List<State> states=path.states;
  assertEquals(9,states.size());
  assertEquals("near_shilshole_22nd",states.get(0).getVertex().getLabel());
  assertEquals("shilshole_22nd",states.get(1).getVertex().getLabel());
  assertEquals("ballard_22nd",states.get(2).getVertex().getLabel());
  assertEquals("market_22nd",states.get(3).getVertex().getLabel());
  assertEquals("market_leary",states.get(4).getVertex().getLabel());
  assertEquals("market_russell",states.get(5).getVertex().getLabel());
  assertEquals("market_20th",states.get(6).getVertex().getLabel());
  assertEquals("56th_20th",states.get(7).getVertex().getLabel());
  assertEquals("near_56th_20th",states.get(8).getVertex().getLabel());
}
