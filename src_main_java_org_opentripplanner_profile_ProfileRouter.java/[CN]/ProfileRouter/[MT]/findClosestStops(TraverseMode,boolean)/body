{
  RoutingRequest rr=new RoutingRequest(mode);
  if (mode == TraverseMode.CAR) {
    rr.kissAndRide=true;
  }
  rr.from=(new GenericLocation(request.from.lat,request.from.lon));
  rr.to=new GenericLocation(request.to.lat,request.to.lon);
  rr.setArriveBy(dest);
  rr.setRoutingContext(graph);
  rr.batch=(true);
  rr.walkSpeed=request.walkSpeed;
  long worstElapsedTime=request.accessTime * 60;
  if (dest)   worstElapsedTime*=-1;
  rr.worstTime=(rr.dateTime + worstElapsedTime);
  GenericAStar astar=new GenericAStar();
  rr.setNumItineraries(1);
  StopFinderTraverseVisitor visitor=new StopFinderTraverseVisitor(mode);
  astar.setTraverseVisitor(visitor);
  ShortestPathTree spt=astar.getShortestPathTree(rr,5);
  routingContexts.add(rr.rctx);
  return visitor.stopClustersFound.values();
}
