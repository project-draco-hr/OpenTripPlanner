{
  State orig=this;
  State unoptimized=orig;
  State ret=orig.reversedClone();
  Edge edge=null;
  try {
    while (orig.getBackState() != null) {
      edge=orig.getBackEdge();
      ret=edge.traverse(ret);
      if (ret == null) {
        LOG.warn("Returned state is null for edge " + edge + "; OTP will crash momentarily");
      }
      EdgeNarrative origNarrative=orig.getBackEdgeNarrative();
      EdgeNarrative retNarrative=ret.getBackEdgeNarrative();
      copyExistingNarrativeToNewNarrativeAsAppropriate(origNarrative,retNarrative);
      orig=orig.getBackState();
    }
  }
 catch (  NullPointerException e) {
    LOG.warn("Cannot reverse path at edge: " + edge + ", returning unoptimized path. If edge is a PatternInterlineDwell,"+ " this is not totally unexpected; otherwise, you might want to"+ " look into it");
    if (forward)     return this;
 else     return unoptimized.reverse();
  }
  if (forward) {
    if (Math.abs(walkDistance - ret.walkDistance) > 0.5)     LOG.warn("On the fly reverse-optimization of path yielded a path with a different" + " walk distance, " + walkDistance + "m unoptimized vs. "+ ret.walkDistance+ "m optimized");
    return ret.reverse();
  }
 else   return ret;
}
