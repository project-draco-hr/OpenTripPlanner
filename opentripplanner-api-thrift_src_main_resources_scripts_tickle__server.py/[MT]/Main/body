def Main():
    usage = 'usage: python lt_pings.py -p port'
    parser = OptionParser(usage=usage)
    parser.add_option('-H', '--host', dest='host', default='localhost', help='host where server lives')
    parser.add_option('-p', '--port', dest='port', type='int', default=30303, help='port at which server lives')
    (options, unused_args) = parser.parse_args()
    assert options.port
    client = Connect(options.host, options.port)
    assert client, 'Failed to connect'
    req = OTPService.GraphVerticesRequest()
    start_t = time.time()
    res = client.GetVertices(req)
    total_t = (time.time() - start_t)
    vertices = res.vertices
    print ('GraphVerticesRequest took %.6f seconds' % total_t)
    print ('\tReturned %d vertices' % len(vertices))
    random.seed(12345)
    (origin, dest) = random.sample(vertices, 2)
    origin_loc = origin.location
    dest_loc = dest.location
    trip_params = OTPService.TripParameters(origin=origin_loc, destination=dest_loc, allowed_modes=set([OTPService.TravelMode.WALK]))
    req = OTPService.TripDurationRequest(trip=trip_params)
    try:
        start_t = time.time()
        res = client.GetTripDuration(req)
        total_t = (time.time() - start_t)
        print ('TripDurationRequest took %.6f seconds' % total_t)
        print ('Trip expected to take %d seconds' % res.expected_trip_duration)
    except OTPService.NoPathFoundError as e:
        print e
    random.seed(12345)
    origins = random.sample(vertices, 100)
    dests = random.sample(vertices, 100)
    trip_params = []
    for (origin, dest) in zip(origins, dests):
        origin_loc = origin.location
        dest_loc = dest.location
        trip_params.append(OTPService.TripParameters(origin=origin_loc, destination=dest_loc, allowed_modes=set([OTPService.TravelMode.WALK])))
    req = OTPService.BulkTripDurationRequest(trips=trip_params)
    try:
        start_t = time.time()
        res = client.GetManyTripDurations(req)
        total_t = (time.time() - start_t)
        print ('BulkTripDurationRequest took %.6f seconds for %d trips ' % (total_t, len(origins)))
    except OTPService.NoPathFoundError as e:
        print e
