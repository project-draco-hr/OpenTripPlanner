{
  try {
    readGtfs();
    CalendarServiceDataFactoryImpl factory=new CalendarServiceDataFactoryImpl();
    factory.setGtfsDao(_dao);
    CalendarServiceData data=factory.createData();
    CalendarServiceImpl service=new CalendarServiceImpl();
    service.setData(data);
    GtfsContext context=GtfsLibrary.createContext(_dao,service);
    for (    Stop stop : _dao.getAllStops()) {
      String id=GtfsLibrary.convertIdToString(stop.getId());
      graph.addVertex(new TransitStop(id,stop.getLon(),stop.getLat(),stop.getName(),stop.getId().getId(),stop));
    }
    GTFSPatternHopFactory hf=new GTFSPatternHopFactory(context);
    hf.run(graph);
    graph.putService(CalendarServiceData.class,data);
  }
 catch (  Exception ex) {
    throw new IllegalStateException("error building graph from gtfs",ex);
  }
}
