{
  final int N=5000;
  final int ITER=2;
  List<Double> keys;
  List<Integer> vals;
  keys=new ArrayList<Double>(N);
  vals=new ArrayList<Integer>(N);
  BinHeap<Integer> bh=new BinHeap<Integer>(20);
  for (int iter=0; iter < ITER; iter++) {
    bh.reset();
    for (int i=0; i < N; i++) {
      keys.add(i,(Math.random() * 10000));
      vals.add(i,(N - i) * 3);
    }
    for (int i=0; i < N; i++) {
      bh.insert(vals.get(i),keys.get(i));
    }
    for (int i=0; i < N; i++) {
      bh.rekey(vals.get(i),i * 2.0D + 10);
    }
    for (int i=0; i < N; i++) {
      Double qp=bh.peek_min_key();
      Integer qi=bh.extract_min();
      assertEquals(qi,vals.get(i));
    }
    assertTrue(bh.empty());
  }
}
