{
  boolean endOfLeg=(edge == null);
  Place place=new Place(vertex.getX(),vertex.getY(),vertex.getName(this.requestedLocale),makeCalendar(state),makeCalendar(state));
  if (endOfLeg)   edge=state.getBackEdge();
  if (vertex instanceof TransitVertex && edge instanceof OnboardEdge) {
    place.stopId=stop.getId();
    place.stopCode=stop.getCode();
    place.platformCode=stop.getPlatformCode();
    place.zoneId=stop.getZoneId();
    place.stopIndex=((OnboardEdge)edge).getStopIndex();
    if (endOfLeg)     place.stopIndex++;
    if (tripTimes != null) {
      place.stopSequence=tripTimes.getStopSequence(place.stopIndex);
    }
    place.vertexType=VertexType.TRANSIT;
  }
 else   if (vertex instanceof BikeRentalStationVertex) {
    place.vertexType=VertexType.BIKESHARE;
  }
 else   if (vertex instanceof BikeParkVertex) {
    place.vertexType=VertexType.BIKEPARK;
  }
 else {
    place.vertexType=VertexType.NORMAL;
  }
  return place;
}
