{
  boolean pickup=false;
  boolean wheelchairAccessible=options.wheelchairAccessible;
  boolean bikesAllowed=options.modes.getBicycle();
  int mask=pickup ? MASK_PICKUP : MASK_DROPOFF;
  int shift=pickup ? SHIFT_PICKUP : SHIFT_DROPOFF;
  if ((perStopFlags[stopIndex + 1] & mask) >> shift == NO_PICKUP) {
    return -1;
  }
  if (wheelchairAccessible && (perStopFlags[stopIndex + 1] & FLAG_WHEELCHAIR_ACCESSIBLE) == 0) {
    return -1;
  }
  TripTimes bestTrip=null;
  int bestTime=Integer.MIN_VALUE;
  int bestIndex=-1;
  int flags=(bikesAllowed ? FLAG_BIKES_ALLOWED : 0) | (wheelchairAccessible ? FLAG_WHEELCHAIR_ACCESSIBLE : 0);
  for (int i=0; i < trips.length; i++) {
    TripTimes currTrip=tripTimes[i];
    int currTime=currTrip.getDepartureTime(stopIndex);
    boolean acceptableTrip=flags == 0 ? true : (perTripFlags[i] & flags) != 0;
    if (currTime < beforeTime && currTime > bestTime && acceptableTrip && !options.bannedTrips.contains(trips[i].getId())) {
      bestTrip=currTrip;
      bestTime=currTime;
      bestIndex=i;
    }
  }
  return bestIndex;
}
