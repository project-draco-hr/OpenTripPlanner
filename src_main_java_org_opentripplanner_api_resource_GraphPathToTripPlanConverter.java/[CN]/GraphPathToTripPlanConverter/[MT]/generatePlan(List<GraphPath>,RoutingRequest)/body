{
  Locale requestedLocale=request.locale;
  GraphPath exemplar=paths.get(0);
  Vertex tripStartVertex=exemplar.getStartVertex();
  Vertex tripEndVertex=exemplar.getEndVertex();
  String startName=tripStartVertex.getName(requestedLocale);
  String endName=tripEndVertex.getName(requestedLocale);
  if (startName == null) {
    startName=tripStartVertex.getLabel();
  }
  if (endName == null) {
    endName=tripEndVertex.getLabel();
  }
  Place from=new Place(tripStartVertex.getX(),tripStartVertex.getY(),startName);
  Place to=new Place(tripEndVertex.getX(),tripEndVertex.getY(),endName);
  from.orig=request.from.name;
  to.orig=request.to.name;
  TripPlan plan=new TripPlan(from,to,request.getDateTime());
  for (  GraphPath path : paths) {
    Itinerary itinerary=generateItinerary(path,request.showIntermediateStops,requestedLocale);
    itinerary=adjustItinerary(request,itinerary);
    plan.addItinerary(itinerary);
  }
  if (plan != null) {
    for (    Itinerary i : plan.itinerary) {
      i.tooSloped=request.rctx.slopeRestrictionRemoved;
      if (i.legs.size() == 0) {
        LOG.warn("itinerary has no legs");
        continue;
      }
      Leg firstLeg=i.legs.get(0);
      firstLeg.from.orig=plan.from.orig;
      Leg lastLeg=i.legs.get(i.legs.size() - 1);
      lastLeg.to.orig=plan.to.orig;
    }
  }
  request.rctx.debugOutput.finishedRendering();
  return plan;
}
