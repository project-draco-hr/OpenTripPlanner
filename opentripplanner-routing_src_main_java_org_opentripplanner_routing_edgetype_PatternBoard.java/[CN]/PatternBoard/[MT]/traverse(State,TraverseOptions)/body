{
  if (!options.modes.get(modeMask)) {
    return null;
  }
  long currentTime=state0.getTime();
  ServiceDate serviceDate=getServiceDate(currentTime,options.calendar);
  ServiceDate serviceDateYesterday=getServiceDate(currentTime - MILLI_IN_DAY,options.calendar);
  int secondsSinceMidnight=(int)((currentTime - serviceDate.getAsDate().getTime()) / 1000);
  int wait=-1;
  int patternIndex=-1;
  AgencyAndId service=getPattern().getExemplar().getServiceId();
  if (options.serviceOn(service,serviceDate)) {
    patternIndex=getPattern().getNextTrip(stopIndex,secondsSinceMidnight,options.wheelchairAccessible,true);
    if (patternIndex >= 0) {
      wait=getPattern().getDepartureTime(stopIndex,patternIndex) - secondsSinceMidnight;
    }
  }
  if (options.serviceOn(service,serviceDateYesterday)) {
    int yesterdayPatternIndex=getPattern().getNextTrip(stopIndex,secondsSinceMidnight + SEC_IN_DAY,options.wheelchairAccessible,true);
    if (yesterdayPatternIndex >= 0) {
      int waitYesterday=getPattern().getDepartureTime(stopIndex,yesterdayPatternIndex) - secondsSinceMidnight - SEC_IN_DAY;
      if (wait < 0 || waitYesterday < wait) {
        wait=waitYesterday;
        patternIndex=yesterdayPatternIndex;
      }
    }
  }
  if (wait < 0) {
    return null;
  }
  State state1=state0.clone();
  state1.setPattern(patternIndex);
  state1.incrementTimeInSeconds(wait);
  state1.numBoardings+=1;
  Trip trip=getPattern().getTrip(patternIndex);
  if (options.bannedRoutes != null) {
    Route route=trip.getRoute();
    RouteSpec spec=new RouteSpec(route.getId().getAgencyId(),GtfsLibrary.getRouteName(route));
    if (options.bannedRoutes.contains(spec)) {
      return null;
    }
  }
  state1.tripId=trip.getId();
  state1.setZoneAndRoute(getPattern().getZone(stopIndex),getPattern().getExemplar().getRoute().getId(),getPattern().getFareContext());
  long transfer_penalty=0;
  if (options.optimizeFor == OptimizeType.TRANSFERS && state0.getTrip() != -1) {
    transfer_penalty=options.optimizeTransferPenalty;
  }
  return new TraverseResult(wait + options.boardCost + transfer_penalty,state1);
}
