{
  int nx=7;
  int ny=10;
  int kx=2;
  int ky=2;
  double h[]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0};
  double hh[]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0};
  double w_x[]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0};
  double w_y[]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0};
  int i, j, li, lj, lx, ky1, nky1, ly, i1, j1, l2;
  double f, temp;
  int kx1=kx + 1;
  int nkx1=nx - kx1;
  int l=kx1;
  int l1=l + 1;
  while ((altitude >= tx[l1 - 1]) && (l != nkx1)) {
    l=l1;
    l1=l + 1;
  }
  h[0]=1.0;
  for (j=1; j < kx + 1; j++) {
    for (i=0; i < j; i++) {
      hh[i]=h[i];
    }
    h[0]=0.0;
    for (i=0; i < j; i++) {
      li=l + i;
      lj=li - j;
      if (tx[li] != tx[lj]) {
        f=hh[i] / (tx[li] - tx[lj]);
        h[i]=h[i] + f * (tx[li] - altitude);
        h[i + 1]=f * (altitude - tx[lj]);
      }
 else {
        h[i + 1 - 1]=0.0;
      }
    }
  }
  lx=l - kx1;
  for (j=0; j < kx1; j++) {
    w_x[j]=h[j];
  }
  ky1=ky + 1;
  nky1=ny - ky1;
  l=ky1;
  l1=l + 1;
  while ((slope >= ty[l1 - 1]) && (l != nky1)) {
    l=l1;
    l1=l + 1;
  }
  h[0]=1.0;
  for (j=1; j < ky + 1; j++) {
    for (i=0; i < j; i++) {
      hh[i]=h[i];
    }
    h[0]=0.0;
    for (i=0; i < j; i++) {
      li=l + i;
      lj=li - j;
      if (ty[li] != ty[lj]) {
        f=hh[i] / (ty[li] - ty[lj]);
        h[i]=h[i] + f * (ty[li] - slope);
        h[i + 1]=f * (slope - ty[lj]);
      }
 else {
        h[i + 1 - 1]=0.0;
      }
    }
  }
  ly=l - ky1;
  for (j=0; j < ky1; j++) {
    w_y[j]=h[j];
  }
  l=lx * nky1;
  for (i1=0; i1 < kx1; i1++) {
    h[i1]=w_x[i1];
  }
  l1=l + ly;
  temp=0.0;
  for (i1=0; i1 < kx1; i1++) {
    l2=l1;
    for (j1=0; j1 < ky1; j1++) {
      l2=l2 + 1;
      temp=temp + coeff[l2 - 1] * h[i1] * w_y[j1];
    }
    l1=l1 + nky1;
  }
  return temp;
}
