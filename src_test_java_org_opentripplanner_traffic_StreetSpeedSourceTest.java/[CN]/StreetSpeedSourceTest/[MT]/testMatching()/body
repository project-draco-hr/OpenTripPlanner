{
  Graph g=new Graph();
  OsmVertex v1=new OsmVertex(g,"v1",0,0,5l);
  OsmVertex v2=new OsmVertex(g,"v2",0,0.01,6l);
  StreetEdge se=new StreetEdge(v1,v2,null,"test",1000,StreetTraversalPermission.CAR,false);
  se.wayId=10;
  SegmentSpeedSample s=getSpeedSample();
  Map<Segment,SegmentSpeedSample> speeds=Maps.newHashMap();
  Segment seg=new Segment(10l,5l,6l);
  speeds.put(seg,s);
  g.streetSpeedSource=new StreetSpeedSnapshotSource();
  g.streetSpeedSource.setSnapshot(new StreetSpeedSnapshot(speeds));
  OffsetDateTime odt=OffsetDateTime.of(2015,6,1,8,5,0,0,ZoneOffset.UTC);
  StreetSpeedSnapshot snap=g.streetSpeedSource.getSnapshot();
  double monday8am=snap.getSpeed(se,TraverseMode.CAR,odt.toInstant().toEpochMilli());
  assertEquals(1.33,monday8am,0.1);
  odt=odt.plusHours(1);
  double monday9am=snap.getSpeed(se,TraverseMode.CAR,odt.toInstant().toEpochMilli());
  assertEquals(6.1,monday9am,0.1);
  odt=odt.plusHours(1);
  double monday10am=snap.getSpeed(se,TraverseMode.CAR,odt.toInstant().toEpochMilli());
  assertEquals(33.3,monday10am,0.1);
  se.wayId=102;
  double wrongStreet=snap.getSpeed(se,TraverseMode.CAR,odt.toInstant().toEpochMilli());
  assertTrue(Double.isNaN(wrongStreet));
}
