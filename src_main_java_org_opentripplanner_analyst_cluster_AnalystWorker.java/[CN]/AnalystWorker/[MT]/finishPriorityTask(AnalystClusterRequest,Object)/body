{
  String url=BROKER_BASE_URL + String.format("/complete/priority/%s",clusterRequest.taskId);
  HttpPost httpPost=new HttpPost(url);
  try {
    byte[] serializedResult=objectMapper.writeValueAsBytes(result);
    httpPost.setEntity(new ByteArrayEntity(serializedResult));
    HttpResponse response=httpClient.execute(httpPost);
    EntityUtils.consumeQuietly(response.getEntity());
    if (response.getStatusLine().getStatusCode() == 200) {
      LOG.info("Successfully marked task {} as completed.",clusterRequest.taskId);
    }
 else     if (response.getStatusLine().getStatusCode() == 404) {
      LOG.info("Task {} was not marked as completed because it doesn't exist.",clusterRequest.taskId);
    }
 else {
      LOG.info("Failed to mark task {} as completed, ({}).",clusterRequest.taskId,response.getStatusLine());
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    LOG.info("Failed to mark task {} as completed.",clusterRequest.taskId);
  }
}
