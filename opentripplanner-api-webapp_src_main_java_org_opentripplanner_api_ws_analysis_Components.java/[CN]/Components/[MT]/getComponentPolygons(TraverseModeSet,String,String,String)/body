{
  RoutingRequest options=new RoutingRequest(modes);
  options.bannedRoutes=new HashSet<RouteSpec>();
  if (bannedRoutes.length() > 0) {
    for (    String element : bannedRoutes.split(",")) {
      String[] routeSpec=element.split("_",2);
      if (routeSpec.length != 2) {
        throw new IllegalArgumentException("AgencyId or routeId not set in bannedRoutes list");
      }
      options.bannedRoutes.add(new RouteSpec(routeSpec[0],routeSpec[1]));
    }
  }
  long dateTime=DateUtils.toDate(date,time).getTime();
  if (cachedPolygons == null || dateTime != cachedDateTime || !options.equals(cachedOptions)) {
    cachedOptions=options;
    cachedDateTime=dateTime;
    Graph graph=graphService.getGraph();
    options.setRoutingContext(graph);
    cachedPolygons=AnalysisUtils.getComponentPolygons(graph,options,dateTime);
  }
  GraphComponentPolygons out=new GraphComponentPolygons();
  out.components=new ArrayList<GraphComponent>();
  for (  Geometry geometry : cachedPolygons) {
    GraphComponent component=new GraphComponent();
    component.polygon=geometry;
    out.components.add(component);
  }
  return out;
}
