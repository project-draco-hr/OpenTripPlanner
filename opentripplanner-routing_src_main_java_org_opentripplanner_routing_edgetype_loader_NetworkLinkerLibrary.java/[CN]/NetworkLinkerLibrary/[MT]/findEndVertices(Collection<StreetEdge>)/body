{
  HashMap<TurnVertex,Set<Edge>> edgesStartingAt=new HashMap<TurnVertex,Set<Edge>>();
  for (  Edge edge : edges) {
    Set<Edge> starting=edgesStartingAt.get(edge.getFromVertex());
    if (starting == null) {
      starting=new HashSet<Edge>();
      if (edge.getFromVertex() instanceof TurnVertex) {
        edgesStartingAt.put((TurnVertex)edge.getFromVertex(),starting);
      }
    }
    starting.add(edge);
  }
  int maxStarting=0;
  int maxEnding=0;
  Entry<TurnVertex,Set<Edge>> startingVertex=null;
  Entry<TurnVertex,Set<Edge>> endingVertex=null;
  for (  Entry<TurnVertex,Set<Edge>> entry : edgesStartingAt.entrySet()) {
    int numEdges=entry.getValue().size();
    if (numEdges >= maxStarting) {
      endingVertex=startingVertex;
      maxEnding=maxStarting;
      maxStarting=numEdges;
      startingVertex=entry;
    }
 else     if (numEdges > maxEnding) {
      endingVertex=entry;
      maxEnding=numEdges;
    }
  }
  return new P2<Entry<TurnVertex,Set<Edge>>>(startingVertex,endingVertex);
}
