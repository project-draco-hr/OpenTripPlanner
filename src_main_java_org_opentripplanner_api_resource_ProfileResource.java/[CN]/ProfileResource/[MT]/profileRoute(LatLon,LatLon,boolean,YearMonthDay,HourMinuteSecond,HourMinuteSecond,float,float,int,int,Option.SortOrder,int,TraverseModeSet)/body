{
  QueryParameter.checkRangeInclusive(limit,0,Integer.MAX_VALUE);
  QueryParameter.checkRangeInclusive(walkSpeed,0,7);
  QueryParameter.checkRangeInclusive(bikeSpeed,0,21);
  QueryParameter.checkRangeInclusive(streetTime,1,480);
  QueryParameter.checkRangeInclusive(accessTime,1,480);
  ProfileRequest req=new ProfileRequest();
  req.from=from;
  req.to=to;
  req.fromTime=fromTime.toSeconds();
  req.toTime=toTime.toSeconds();
  req.walkSpeed=walkSpeed;
  req.bikeSpeed=bikeSpeed;
  req.streetTime=streetTime;
  req.accessTime=accessTime;
  req.date=date.toJoda();
  req.orderBy=orderBy;
  req.limit=limit;
  req.modes=modes;
  req.analyst=analyst;
  ProfileRouter router=new ProfileRouter(graph,req);
  try {
    ProfileResponse response=router.route();
    if (req.analyst) {
      surfaceCache.add(router.minSurface);
      surfaceCache.add(router.maxSurface);
      List<TimeSurfaceShort> surfaceShorts=Lists.newArrayList();
      surfaceShorts.add(new TimeSurfaceShort(router.minSurface));
      surfaceShorts.add(new TimeSurfaceShort(router.maxSurface));
      return Response.status(Status.OK).entity(surfaceShorts).build();
    }
 else {
      return Response.status(Status.OK).entity(response).build();
    }
  }
  finally {
    router.cleanup();
  }
}
