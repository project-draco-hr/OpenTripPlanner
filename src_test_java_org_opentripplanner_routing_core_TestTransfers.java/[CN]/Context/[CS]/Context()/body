{
  aStar=new AStar();
  GtfsContext context=GtfsLibrary.readGtfs(new File(ConstantsForTests.FAKE_GTFS));
  graph=spy(new Graph());
  GTFSPatternHopFactory factory=new GTFSPatternHopFactory(context);
  factory.run(graph);
  graph.index(new DefaultStreetVertexIndexFactory());
  graph.putService(CalendarServiceData.class,GtfsLibrary.createCalendarServiceData(context.getDao()));
  feedId=context.getFeedId().getId();
  createSimpleTransfer(feedId + ":K",feedId + ":F",100);
  createSimpleTransfer(feedId + ":P",feedId + ":U",100);
  createSimpleTransfer(feedId + ":V",feedId + ":I",100);
  TimetableSnapshot snapshot=new TimetableSnapshot();
  TimetableSnapshotSource timetableSnapshotSource=mock(TimetableSnapshotSource.class);
  when(timetableSnapshotSource.getTimetableSnapshot()).thenReturn(snapshot);
  graph.timetableSnapshotSource=(timetableSnapshotSource);
}
