{
  ServiceDate serviceDate=new ServiceDate(2009,10,01);
  TestPlanner planner=new TestPlanner("portland","45.5264892578125,-122.60479259490967","45.511622,-122.645564");
  TransferTable table=new TransferTable();
  Graph graph=Context.getInstance().graph;
  when(graph.getTransferTable()).thenReturn(table);
  Response response=planner.getItineraries();
  Itinerary itinerary=response.getPlan().itinerary.get(0);
  assertEquals("190W1280",itinerary.legs.get(1).tripId);
  assertEquals("751W1330",itinerary.legs.get(3).tripId);
  addTripToTripTransferTimeToTable(table,"2111","7452","19","75","190W1280","751W1330",126);
  response=planner.getItineraries();
  itinerary=response.getPlan().itinerary.get(0);
  assertEquals("190W1280",itinerary.legs.get(1).tripId);
  assertFalse("751W1330".equals(itinerary.legs.get(3).tripId));
  @SuppressWarnings("deprecation") TripPattern pattern=((PatternStopVertex)graph.getVertex("TriMet_7452_TriMet_751W1090_79_A")).getTripPattern();
  applyUpdateToTripPattern(pattern,"751W1330","7452",79,41228,41228,ScheduleRelationship.SCHEDULED,0,serviceDate);
  response=planner.getItineraries();
  itinerary=response.getPlan().itinerary.get(0);
  assertEquals("190W1280",itinerary.legs.get(1).tripId);
  assertEquals("751W1330",itinerary.legs.get(3).tripId);
  applyUpdateToTripPattern(pattern,"751W1330","7452",79,41225,41225,ScheduleRelationship.SCHEDULED,0,serviceDate);
  reset(graph);
}
