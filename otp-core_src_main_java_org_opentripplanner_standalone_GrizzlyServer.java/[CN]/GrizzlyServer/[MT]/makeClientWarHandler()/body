{
  File clientDir=Files.createTempDir();
  File clientWar=new File(clientDir,CLIENT_WAR_FILENAME);
  try {
    Files.copy(new ClientWarSupplier(),clientWar);
    ZipFile zip=new ZipFile(clientWar);
    zip.extractAll(clientDir.toString());
  }
 catch (  Exception e) {
    LOG.error("Error copying or expanding client WAR: {}",e.getMessage());
    List<String> allStaticDirs=new ArrayList<String>();
    allStaticDirs.add(params.staticDirectory);
    allStaticDirs.addAll(Arrays.asList(FALLBACK_CLIENT_DIRS));
    for (    String fallbackClientDir : allStaticDirs) {
      File f=new File(fallbackClientDir);
      if (f.isDirectory() && f.canRead()) {
        clientDir=f;
        LOG.info("Found fallback client files at {}",f);
        break;
      }
    }
  }
  LOG.info("Serving static client files from {}",clientDir);
  StaticHttpHandler handler=new StaticHttpHandler(clientDir.toString());
  handler.setFileCacheEnabled(false);
  return handler;
}
