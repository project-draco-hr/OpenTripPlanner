{
  SPTVertex first=vertices.get(0);
  startTime=first.state.getTime();
  SPTVertex last=vertices.get(vertices.size() - 1);
  endTime=last.state.getTime();
  items=new Vector<NarrativeItem>();
  Edge graphEdge=edges.firstElement().payload;
  mode=graphEdge.getMode();
  geometry=graphEdge.getGeometry();
  for (  SPTEdge edge : edges.subList(1,edges.size())) {
    geometry=joinGeometries(geometry,edge.payload.getGeometry());
  }
  if (graphEdge instanceof HoppableEdge) {
    name=graphEdge.getName();
    direction=graphEdge.getDirection();
    BasicNarrativeItem item=new BasicNarrativeItem();
    item.setDirection(graphEdge.getDirection());
    item.setName(graphEdge.getName());
    item.setStart(((HoppableEdge)graphEdge).getStartStop().getName());
    item.setEnd(((HoppableEdge)edges.lastElement().payload).getEndStop().getName());
    Geometry geom=graphEdge.getGeometry();
    double totalDistance=graphEdge.getDistance();
    for (    SPTEdge edge : edges.subList(1,edges.size())) {
      graphEdge=edge.payload;
      totalDistance+=graphEdge.getDistance();
      geom=joinGeometries(geom,graphEdge.getGeometry());
    }
    item.setGeometry(geom);
    item.setDistance(totalDistance);
    items.add(item);
  }
 else   if (graphEdge instanceof WalkableEdge) {
    name="walk";
    WalkableEdge street1=(WalkableEdge)edges.firstElement().payload;
    WalkableEdge street2=(WalkableEdge)edges.lastElement().payload;
    direction=Street.computeDirection(street1.getGeometry().getStartPoint(),street2.getGeometry().getEndPoint());
    double totalDistance=0;
    String lastStreet=null;
    BasicNarrativeItem item=null;
    for (    SPTEdge edge : edges) {
      graphEdge=edge.payload;
      String streetName=graphEdge.getName();
      if (streetName == lastStreet) {
        totalDistance+=graphEdge.getDistance();
        item.setDistance(totalDistance);
        item.setGeometry(item.getGeometry().union(graphEdge.getGeometry()));
        item.setEnd(graphEdge.getToVertex().getLabel());
        continue;
      }
      item=new BasicNarrativeItem();
      item.setName(streetName);
      item.setDirection(graphEdge.getDirection());
      item.setGeometry(graphEdge.getGeometry());
      item.setStart(graphEdge.getFromVertex().getLabel());
      item.setEnd(graphEdge.getToVertex().getLabel());
      items.add(item);
    }
  }
}
