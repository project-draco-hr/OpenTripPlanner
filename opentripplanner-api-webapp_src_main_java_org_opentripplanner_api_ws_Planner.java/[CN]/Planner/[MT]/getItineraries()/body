{
  Request request;
  try {
    request=buildRequestFromQueryParamFields();
  }
 catch (  ParameterException pe) {
    Response response=new Response();
    PlannerError error=new PlannerError(pe.message);
    response.setError(error);
    return response;
  }
  Response response=new Response(request);
  try {
    PlanGenerator generator=new PlanGenerator(request,pathServiceFactory);
    TripPlan plan=generator.generate();
    response.setPlan(plan);
  }
 catch (  VertexNotFoundException e) {
    PlannerError error=new PlannerError(Message.OUTSIDE_BOUNDS);
    error.setMissing(e.getMissing());
    response.setError(error);
  }
catch (  PathNotFoundException e) {
    PlannerError error=new PlannerError(Message.PATH_NOT_FOUND);
    response.setError(error);
  }
catch (  LocationNotAccessible e) {
    PlannerError error=new PlannerError(Message.LOCATION_NOT_ACCESSIBLE);
    response.setError(error);
  }
catch (  TransitTimesException e) {
    PlannerError error=new PlannerError(Message.NO_TRANSIT_TIMES);
    response.setError(error);
  }
catch (  TrivialPathException e) {
    PlannerError error=new PlannerError(Message.TOO_CLOSE);
    response.setError(error);
  }
catch (  Exception e) {
    LOG.error("exception planning trip: ",e);
    PlannerError error=new PlannerError(Message.SYSTEM_ERROR);
    response.setError(error);
  }
  return response;
}
