{
  Request request=new Request();
  request.setFrom(fromPlace);
  request.setTo(toPlace);
  request.setDateTime(date,time);
  if (max != null)   request.setNumItineraries(max);
  if (walk != null)   request.setWalk(walk);
  if (arriveBy != null && arriveBy)   request.setArriveBy();
 else   if (departAfter != null && departAfter)   request.setDepartAfter();
  if (optList != null && optList.size() > 0)   request.addOptimize(optList);
  if (modeList != null && modeList.size() > 0)   request.addMode(modeList);
  request.setOutputFormat(MediaType.valueOf(of));
  List<Narrative> narratives=_narrativeService.plan(request.getFrom(),request.getTo(),request.getDateTime(),request.isArriveBy());
  TripPlan plan=new TripPlan();
  for (  Narrative narrative : narratives) {
    Itinerary itinerary=new Itinerary();
    plan.addItinerary(itinerary);
    for (    NarrativeSection section : narrative.getSections()) {
      Leg leg=new Leg();
      leg.mode=getTransportationModeForSection(section);
      leg.legGeometry=PolylineEncoder.createEncodings(section.getGeometry());
      leg.from=getPlaceForSection(section,true);
      leg.to=getPlaceForSection(section,false);
      itinerary.addLeg(leg);
    }
  }
  Response response=new Response(request);
  response.plan=plan;
  return response;
}
