{
  HashMap<Class<? extends DirectEdge>,Class<? extends DirectEdge>> classMapping=new HashMap<Class<? extends DirectEdge>,Class<? extends DirectEdge>>();
  HashSet<DirectEdge> edgesToRemove=new HashSet<DirectEdge>();
  HashSet<DirectEdge> edgesToAdd=new HashSet<DirectEdge>();
  for (  Vertex vertex : graph.getVertices()) {
    for (    Edge e : vertex.getOutgoing()) {
      if (e instanceof StreetEdge) {
        StreetEdge se=((StreetEdge)e);
        edgesToRemove.add(se);
        edgesToAdd.add(reachifyEdge(graph,classMapping,se));
      }
    }
    for (    Edge e : vertex.getIncoming()) {
      if (edgesToRemove.contains(e)) {
        continue;
      }
      if (e instanceof StreetEdge) {
        StreetEdge se=((StreetEdge)e);
        edgesToRemove.add(se);
        edgesToAdd.add(reachifyEdge(graph,classMapping,se));
      }
    }
  }
  for (  DirectEdge e : edgesToRemove) {
    graph.removeEdge(e);
  }
  for (  DirectEdge e : edgesToAdd) {
    graph.addEdge(e);
  }
}
