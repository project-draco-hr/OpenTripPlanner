{
  this.timeCutoffMinutes=timeCutoffMinutes;
  LOG.info("Caching distances from each street intersection to nearby transit stops . . .");
  for (  TransitStop tstop : graph.index.stopVertexForStop.values()) {
    RoutingRequest rr=new RoutingRequest(TraverseMode.WALK);
    rr.batch=(true);
    rr.setRoutingContext(graph,tstop,tstop);
    rr.worstTime=(rr.dateTime + timeCutoffMinutes * 60);
    AStar astar=new AStar();
    rr.longDistance=true;
    rr.dominanceFunction=new DominanceFunction.EarliestArrival();
    rr.setNumItineraries(1);
    ShortestPathTree spt=astar.getShortestPathTree(rr,5);
    for (    Vertex vertex : spt.getVertices()) {
      State state=spt.getState(vertex);
      TIntIntMap distances;
      int vidx=vertex.getIndex();
      if (!distancesForVertex.containsKey(vidx)) {
        distances=new TIntIntHashMap();
        distancesForVertex.put(vidx,distances);
      }
 else {
        distances=distancesForVertex.get(vidx);
      }
      distances.put(tstop.getIndex(),(int)state.getWalkDistance());
    }
    rr.cleanup();
  }
  LOG.info("Done caching distances to nearby street intersections from each transit stop.");
}
