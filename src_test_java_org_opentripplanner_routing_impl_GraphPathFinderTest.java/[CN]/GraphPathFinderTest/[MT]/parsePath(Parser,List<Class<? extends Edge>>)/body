{
  boolean accepted=false;
  int currentState=AutomatonState.START;
  for (int i=0; i < path.size(); i++) {
    Class<? extends Edge> edgeClass=path.get(i);
    State state=mock(State.class);
    Edge edge=mock(edgeClass);
    when(state.getBackEdge()).thenReturn(edge);
    if (i == 0) {
      when(state.getVertex()).thenReturn(mock(TransitStop.class));
    }
 else     if (i == path.size() - 1) {
      when(state.getVertex()).thenReturn(mock(TransitStation.class));
    }
    int terminal=parser.terminalFor(state);
    currentState=parser.transition(currentState,terminal);
    if (currentState == AutomatonState.REJECT) {
      return false;
    }
  }
  if (parser.accepts(currentState)) {
    accepted=true;
  }
  return accepted;
}
