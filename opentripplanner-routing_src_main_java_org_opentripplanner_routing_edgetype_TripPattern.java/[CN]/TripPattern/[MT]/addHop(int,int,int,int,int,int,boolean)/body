{
  Vector<Integer> stopRunningTimes=runningTimes[stopIndex];
  Vector<Integer> stopDepartureTimes=departureTimes[stopIndex];
  Vector<Integer> stopArrivalTimes=arrivalTimes[stopIndex];
  Vector<Integer> stopDwellTimes=dwellTimes[stopIndex];
  Vector<Boolean> stopWheelchairAccessibles=wheelchairAccessibles[stopIndex];
  if (insertionPoint > 0) {
    if (stopDepartureTimes.elementAt(insertionPoint - 1) > departureTime) {
      throw new TripOvertakingException();
    }
  }
  if (insertionPoint < stopDepartureTimes.size()) {
    if (stopDepartureTimes.elementAt(insertionPoint) < departureTime) {
      throw new TripOvertakingException();
    }
  }
  stopDepartureTimes.insertElementAt(departureTime,insertionPoint);
  stopRunningTimes.insertElementAt(runningTime,insertionPoint);
  stopArrivalTimes.insertElementAt(arrivalTime,insertionPoint);
  stopDwellTimes.insertElementAt(dwellTime,insertionPoint);
  stopWheelchairAccessibles.insertElementAt(wheelchairAccessible,insertionPoint);
}
