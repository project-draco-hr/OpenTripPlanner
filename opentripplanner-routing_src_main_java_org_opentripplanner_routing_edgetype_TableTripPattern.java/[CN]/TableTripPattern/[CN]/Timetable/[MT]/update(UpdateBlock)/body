{
  int tripIndex=getTripIndex(block.tripId);
  if (tripIndex == -1) {
    LOG.info("tripId {} not found in pattern.",block.tripId);
    return false;
  }
 else {
    LOG.trace("tripId {} found at index {} (in scheduled timetable)",block.tripId,tripIndex);
  }
  int stopIndex=block.findUpdateStopIndex(TableTripPattern.this);
  if (stopIndex == UpdateBlock.MATCH_FAILED) {
    LOG.warn("Unable to match update block to stopIds.");
    return false;
  }
  TripTimes existingTimes=getTripTimes(tripIndex);
  ScheduledTripTimes scheduledTimes=existingTimes.getScheduledTripTimes();
  UpdatedTripTimes newTimes=new UpdatedTripTimes(scheduledTimes,block,stopIndex);
  if (TripTimesUtil.timesIncreasing(newTimes)) {
    this.tripTimes.set(tripIndex,newTimes);
    return true;
  }
  LOG.error("Resulting UpdatedTripTimes has non-increasing times.");
  LOG.error(block.toString());
  LOG.error(newTimes.toString());
  return false;
}
