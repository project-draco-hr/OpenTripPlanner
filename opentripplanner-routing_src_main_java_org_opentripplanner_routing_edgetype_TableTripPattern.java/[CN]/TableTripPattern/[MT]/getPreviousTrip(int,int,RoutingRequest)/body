{
  boolean pickup=false;
  int mask=pickup ? MASK_PICKUP : MASK_DROPOFF;
  int shift=pickup ? SHIFT_PICKUP : SHIFT_DROPOFF;
  if ((perStopFlags[stopIndex + 1] & mask) >> shift == NO_PICKUP) {
    return null;
  }
  boolean wheelchair=options.wheelchairAccessible;
  boolean bicycle=options.modes.getBicycle();
  if (wheelchair && (perStopFlags[stopIndex + 1] & FLAG_WHEELCHAIR_ACCESSIBLE) == 0) {
    return null;
  }
  TripTimes bestTrip=null;
  int bestTime=Integer.MIN_VALUE;
  for (int i=0; i < trips.size(); i++) {
    TripTimes currTrip=tripTimes.get(i);
    int currTime=currTrip.getArrivalTime(stopIndex);
    if (currTime <= beforeTime && currTime > bestTime && tripAcceptable(currTrip.trip,bicycle,wheelchair) && !options.bannedTrips.contains(trips.get(i).getId())) {
      bestTrip=currTrip;
      bestTime=currTime;
    }
  }
  return bestTrip;
}
