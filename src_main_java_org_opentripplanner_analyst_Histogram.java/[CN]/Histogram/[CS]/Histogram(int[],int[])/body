{
  int size=weightingFunctions.length;
  double[] tmpCounts=new double[size];
  double[] tmpSums=new double[size];
  for (int i=0; i < times.length; i++) {
    for (int j=0; j < weightingFunctions.length; j++) {
      double w=weightingFunctions[j].getWeight(times[i]);
      if (w < 1e-10)       continue;
      if (w < 1 - 1e-10) {
        tmpCounts[j]+=w;
        tmpSums[j]+=w * weights[i];
      }
 else {
        tmpCounts[j]+=1;
        tmpSums[j]+=weights[i];
      }
    }
  }
  counts=new int[size];
  sums=new int[size];
  for (int i=0; i < weightingFunctions.length; i++) {
    counts[i]=(int)Math.round(tmpCounts[i]);
    sums[i]=(int)Math.round(tmpSums[i]);
  }
  for (int i=weightingFunctions.length - 1; i > 0; i--) {
    counts[i]-=counts[i - 1];
    sums[i]-=sums[i - 1];
  }
}
