{
  double distance=0.0;
  GraphPath graphPath=new GraphPath(state,false);
  CoordinateArrayListSequence coordinates=new CoordinateArrayListSequence();
  for (  Edge edge : graphPath.edges) {
    if (edge instanceof StreetEdge) {
      LineString geometry=edge.getGeometry();
      if (geometry != null) {
        if (coordinates.size() == 0) {
          coordinates.extend(geometry.getCoordinates());
        }
 else {
          coordinates.extend(geometry.getCoordinates(),1);
        }
      }
      distance+=edge.getDistance();
    }
  }
  if (coordinates.size() < 2) {
    ArrayList<Coordinate> coordinateList=new ArrayList<Coordinate>(2);
    coordinateList.add(graphPath.states.get(1).getVertex().getCoordinate());
    State lastState=graphPath.states.getLast().getBackState();
    coordinateList.add(lastState.getVertex().getCoordinate());
    coordinates=new CoordinateArrayListSequence(coordinateList);
  }
  StopAtDistance sd=new StopAtDistance((TransitStop)state.getVertex(),distance);
  sd.geom=geometryFactory.createLineString(new PackedCoordinateSequence.Double(coordinates.toCoordinateArray()));
  return sd;
}
