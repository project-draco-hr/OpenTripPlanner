{
  boolean foundAlternatePaths=false;
  TraverseMode requestedMode=getNonTransitMode();
  for (  Edge out : backState.vertex.getOutgoing()) {
    if (out == backEdge) {
      continue;
    }
    if (!(out instanceof StreetEdge)) {
      continue;
    }
    State outState=out.traverse(backState);
    if (outState == null) {
      continue;
    }
    if (!outState.getBackMode().equals(requestedMode)) {
      continue;
    }
    Vertex tov=outState.getVertex();
    boolean found=false;
    for (    Edge out2 : tov.getOutgoing()) {
      State outState2=out2.traverse(outState);
      if (outState2 != null && !outState2.getBackMode().equals(requestedMode)) {
        continue;
      }
      found=true;
      break;
    }
    if (!found) {
      continue;
    }
    foundAlternatePaths=true;
    break;
  }
  return foundAlternatePaths;
}
