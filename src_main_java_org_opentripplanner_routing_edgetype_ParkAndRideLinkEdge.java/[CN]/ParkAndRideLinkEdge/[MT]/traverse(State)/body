{
  if (!s0.getOptions().parkAndRide) {
    return null;
  }
  Edge backEdge=s0.getBackEdge();
  boolean back=s0.getOptions().arriveBy;
  if ((back != exit) && !(backEdge instanceof ParkAndRideEdge))   return null;
  StateEditor s1=s0.edit(this);
  TraverseMode mode=s0.getNonTransitMode();
  if (mode == TraverseMode.WALK) {
    double walkTime=linkDistance * WALK_OBSTRUCTION_FACTOR / s0.getOptions().walkSpeed;
    s1.incrementTimeInSeconds((int)Math.round(walkTime));
    s1.incrementWeight(walkTime);
    s1.incrementWalkDistance(linkDistance);
    s1.setBackMode(TraverseMode.WALK);
  }
 else   if (mode == TraverseMode.CAR) {
    double driveTime=linkDistance * DRIVE_OBSTRUCTION_FACTOR / DRIVE_SPEED_MS;
    s1.incrementTimeInSeconds((int)Math.round(driveTime));
    s1.incrementWeight(driveTime);
    s1.setBackMode(TraverseMode.CAR);
  }
 else {
    return null;
  }
  return s1.makeState();
}
