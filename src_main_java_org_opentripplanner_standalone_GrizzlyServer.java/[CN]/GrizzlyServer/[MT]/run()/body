{
  LOG.info("Starting OTP Grizzly server on port {} using graphs at {}",params.port,params.graphDirectory);
  HttpServer httpServer=new HttpServer();
  NetworkListener networkListener=new NetworkListener("otp_listener","0.0.0.0",params.port);
  ThreadPoolConfig threadPoolConfig=ThreadPoolConfig.defaultConfig().setCorePoolSize(1).setMaxPoolSize(Runtime.getRuntime().availableProcessors());
  networkListener.getTransport().setWorkerThreadPoolConfig(threadPoolConfig);
  httpServer.addListener(networkListener);
  Application app=new OTPApplication();
  HttpHandler dynamicHandler=ContainerFactory.createContainer(HttpHandler.class,app);
  httpServer.getServerConfiguration().addHttpHandler(dynamicHandler,"/otp");
  HttpHandler staticHandler=new CLStaticHttpHandler(GrizzlyServer.class.getClassLoader());
  httpServer.getServerConfiguration().addHttpHandler(staticHandler,"/");
  try {
    httpServer.start();
    LOG.info("Grizzly server running.");
    Thread.currentThread().join();
  }
 catch (  BindException be) {
    LOG.error("Cannot bind to port {}. Is it already in use?",params.port);
  }
catch (  IOException ioe) {
    LOG.error("IO exception while starting server.");
  }
catch (  InterruptedException ie) {
    LOG.info("Interrupted, shutting down.");
  }
  httpServer.shutdown();
}
