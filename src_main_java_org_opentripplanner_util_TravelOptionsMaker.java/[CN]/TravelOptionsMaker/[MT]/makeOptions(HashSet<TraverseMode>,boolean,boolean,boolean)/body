{
  List<TravelOption> travelOptions=new ArrayList<>(16);
  if (!transitModes.isEmpty()) {
    travelOptions.add(new TravelOption(String.join(",",TraverseMode.TRANSIT.toString(),TraverseMode.WALK.toString()),TraverseMode.TRANSIT.toString()));
    for (    TraverseMode transitMode : transitModes) {
      travelOptions.add(new TravelOption(String.join(",",transitMode.toString(),TraverseMode.WALK.toString()),transitMode.toString()));
    }
  }
  travelOptions.addAll(staticTravelOptions);
  if (hasBikeSharing) {
    travelOptions.add(new TravelOption(String.join(",",TraverseMode.WALK.toString(),"BICYCLE_RENT"),"BICYCLERENT"));
  }
  if (!transitModes.isEmpty()) {
    travelOptions.add(new TravelOption(String.join(",",TraverseMode.TRANSIT.toString(),TraverseMode.BICYCLE.toString()),String.join("_",TraverseMode.TRANSIT.toString(),TraverseMode.BICYCLE.toString())));
    if (hasBikeSharing) {
      travelOptions.add(new TravelOption(String.join(",",TraverseMode.TRANSIT.toString(),TraverseMode.WALK.toString(),"BICYCLE_RENT"),"TRANSIT_BICYCLERENT"));
    }
    if (hasParkRide) {
      travelOptions.add(new TravelOption(String.join(",","CAR_PARK",TraverseMode.WALK.toString(),TraverseMode.TRANSIT.toString()),"PARKRIDE"));
    }
    if (hasBikeRide) {
      travelOptions.add(new TravelOption(String.join(",","BICYCLE_PARK",TraverseMode.WALK.toString(),TraverseMode.TRANSIT.toString()),"BIKERIDE"));
    }
    travelOptions.add(new TravelOption(String.join(",",TraverseMode.CAR.toString(),TraverseMode.WALK.toString(),TraverseMode.TRANSIT.toString()),"KISSRIDE"));
  }
  return travelOptions;
}
