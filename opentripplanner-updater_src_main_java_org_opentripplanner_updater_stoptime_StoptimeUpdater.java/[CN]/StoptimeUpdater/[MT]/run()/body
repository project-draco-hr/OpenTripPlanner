{
  int appliedBlockCount=0;
  while (true) {
    List<Update> updates=updateStreamer.getUpdates();
    if (updates == null) {
      LOG.debug("updates is null");
      continue;
    }
    List<UpdateBlock> blocks=UpdateBlock.splitByTrip(updates);
    LOG.debug("message contains {} trip update blocks",blocks.size());
    int uIndex=0;
    for (    UpdateBlock block : blocks) {
      uIndex+=1;
      LOG.debug("update block #{} ({} updates) :",uIndex,block.updates.size());
      LOG.trace("{}",block.toString());
      block.filter(true,true,true);
      if (!block.isCoherent()) {
        LOG.warn("Incoherent UpdateBlock, skipping.");
        continue;
      }
      if (block.updates.size() < 1) {
        LOG.debug("UpdateBlock contains no updates after filtering, skipping.");
        continue;
      }
      TableTripPattern pattern=patternIndex.get(block.tripId);
      if (pattern == null) {
        LOG.warn("No pattern found for tripId {}, skipping UpdateBlock.",block.tripId);
        continue;
      }
      boolean applied=false;
synchronized (buffer) {
        Timetable tt=buffer.modify(pattern);
        applied=tt.update(block);
      }
      if (applied) {
        appliedBlockCount+=1;
        if (appliedBlockCount % 100 == 0) {
          LOG.info("applied {} stoptime update blocks.",appliedBlockCount);
        }
      }
    }
    LOG.debug("end of update message",uIndex);
  }
}
