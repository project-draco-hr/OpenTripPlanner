{
  while (true) {
    List<Update> updates=updateStreamer.getUpdates();
    if (updates == null) {
      LOG.debug("updates is null");
      continue;
    }
    List<UpdateList> lul=UpdateList.splitByTrip(updates);
    LOG.debug("updates contains {} trip updates",lul.size());
    for (    UpdateList ul : lul) {
      LOG.trace("{}",ul.toString());
      ul.filter(true,true,true);
      if (!ul.isSane()) {
        LOG.debug("incoherent stoptime UpdateList");
        continue;
      }
      TableTripPattern pattern=patternIndex.get(ul.tripId);
      if (pattern == null) {
        LOG.debug("pattern not found {}",ul.tripId);
        continue;
      }
synchronized (buffer) {
        Timetable tt=buffer.modify(pattern);
        tt.update(ul);
      }
    }
  }
}
