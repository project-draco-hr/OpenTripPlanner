{
  int appliedBlockCount=0;
  while (true) {
    List<TripUpdate> tripUpdates=updateStreamer.getUpdates();
    if (tripUpdates == null) {
      LOG.debug("tripUpdates is null");
      continue;
    }
    LOG.debug("message contains {} trip update blocks",tripUpdates.size());
    int uIndex=0;
    for (    TripUpdate tripUpdate : tripUpdates) {
      uIndex+=1;
      LOG.debug("trip update block #{} ({} updates) :",uIndex,tripUpdate.getUpdates().size());
      LOG.trace("{}",tripUpdate.toString());
      boolean applied=false;
switch (tripUpdate.getStatus()) {
case ADDED:
        applied=handleAddedTrip(tripUpdate);
      break;
case CANCELED:
    applied=handleCanceledTrip(tripUpdate);
  break;
case MODIFIED:
applied=handleModifiedTrip(tripUpdate);
break;
case REMOVED:
applied=handleRemovedTrip(tripUpdate);
break;
}
if (applied) {
appliedBlockCount++;
}
 else {
LOG.warn("Failed to apply Tripupdate: " + tripUpdate);
}
if (appliedBlockCount % logFrequency == 0) {
LOG.info("Applied {} stoptime update blocks.",appliedBlockCount);
}
}
LOG.debug("end of update message");
if (purgeExpiredData) {
boolean modified=purgeExpiredData();
getSnapshot(modified);
}
 else {
getSnapshot();
}
}
}
