{
  int appliedBlockCount=0;
  while (true) {
    List<TripUpdate> tripUpdates=updateStreamer.getUpdates();
    if (tripUpdates == null) {
      LOG.debug("tripUpdates is null");
      continue;
    }
    LOG.debug("message contains {} trip update blocks",tripUpdates.size());
    int uIndex=0;
    for (    TripUpdate tripUpdate : tripUpdates) {
      uIndex+=1;
      LOG.debug("trip update block #{} ({} updates) :",uIndex,tripUpdate.getUpdates().size());
      LOG.trace("{}",tripUpdate.toString());
      tripUpdate.filter(true,true,true);
      if (!tripUpdate.isCoherent()) {
        LOG.warn("Incoherent TripUpdate, skipping.");
        continue;
      }
      if (tripUpdate.getUpdates().size() < 1) {
        LOG.debug("trip update contains no updates after filtering, skipping.");
        continue;
      }
      TableTripPattern pattern=transitIndexService.getTripPatternForTrip(tripUpdate.getTripId());
      if (pattern == null) {
        LOG.debug("No pattern found for tripId {}, skipping trip update.",tripUpdate.getTripId());
        continue;
      }
      boolean applied=buffer.update(pattern,tripUpdate);
      if (applied) {
        appliedBlockCount+=1;
        if (appliedBlockCount % logFrequency == 0) {
          LOG.info("applied {} stoptime update blocks.",appliedBlockCount);
        }
        getSnapshot();
      }
    }
    LOG.debug("end of update message");
  }
}
