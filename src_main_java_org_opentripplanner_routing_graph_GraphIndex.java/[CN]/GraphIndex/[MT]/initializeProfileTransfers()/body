{
  transfersFromStopCluster=HashMultimap.create();
  final double TRANSFER_RADIUS=500.0;
  SimpleIsochrone.MinMap<P2<TripPattern>,ProfileTransfer> bestTransfers=new SimpleIsochrone.MinMap<P2<TripPattern>,ProfileTransfer>();
  LOG.info("Finding transfers...");
  for (  StopCluster sc0 : stopClusterForId.values()) {
    Set<TripPattern> tripPatterns0=patternsForStopCluster(sc0);
    Map<StopCluster,Double> nearbyStopClusters=findNearbyStopClusters(sc0,TRANSFER_RADIUS);
    for (    StopCluster sc1 : nearbyStopClusters.keySet()) {
      double distance=nearbyStopClusters.get(sc1);
      Set<TripPattern> tripPatterns1=patternsForStopCluster(sc1);
      for (      TripPattern tp0 : tripPatterns0) {
        for (        TripPattern tp1 : tripPatterns1) {
          if (tp0 == tp1)           continue;
          bestTransfers.putMin(new P2<TripPattern>(tp0,tp1),new ProfileTransfer(tp0,tp1,sc0,sc1,(int)distance));
        }
      }
    }
  }
  for (  ProfileTransfer tr : bestTransfers.values()) {
    transfersFromStopCluster.put(tr.sc1,tr);
  }
  LOG.info("Done finding transfers.");
}
