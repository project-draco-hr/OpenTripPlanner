{
  log.info("Downloading NED elevation data.");
  List<URL> urls=getDownloadURLsCached();
  List<File> files=new ArrayList<File>();
  int tileCount=0;
  TILE:   for (  URL url : urls) {
    String tileProgress=String.format("Tile %d/%d",++tileCount,urls.size());
    String key=getKey(url);
    File tile=getPathToNEDTile(key);
    if (tile.exists()) {
      files.add(tile);
      log.debug("{} found in NED cache, not downloading: {}",tileProgress,tile);
      continue;
    }
    REQUEST:     for (int req_attempt=0; req_attempt < 5; ++req_attempt) {
      log.info("{} not in NED cache, requesting download: {}",tileProgress,tile);
      try {
        sleep(3000);
        String token=initiateDownload(url);
        DOWNLOAD:         for (int dl_attempt=0; dl_attempt < 20; ++dl_attempt) {
          log.info("Waiting to check if tile is ready for download (try {}).",dl_attempt + 1);
          sleep(30000);
          if (downloadReady(token)) {
            downloadFile(url,token);
            try {
              files.add(unzipFile(url));
              continue TILE;
            }
 catch (            NotAZipFileException e) {
              log.error("Received corrupted zip file. Retrying with same token.");
              continue DOWNLOAD;
            }
          }
        }
        log.info("Giving up on slow download attempt {} and retrying.",req_attempt);
      }
 catch (      NoDownloadIDException e) {
        log.debug("Download ID unrecognized by server, retrying.");
        continue REQUEST;
      }
catch (      Exception e) {
        throw new RuntimeException("Error getting data from USGS Download Server while downloading",e);
      }
    }
    log.error("Unable to download a NED tile after 5 requests.");
  }
  return files;
}
