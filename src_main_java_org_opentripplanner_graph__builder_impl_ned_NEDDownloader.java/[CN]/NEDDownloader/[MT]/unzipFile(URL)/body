{
  String key=getKey(url);
  File path=getPathToNEDArchive(key);
  try {
    FileInputStream inputStream=new FileInputStream(path);
    byte[] header=new byte[2];
    int bytesRead=inputStream.read(header,0,2);
    inputStream.close();
    if (bytesRead != 2 || header[0] != 'P' || header[1] != 'K') {
      log.warn("not a zip file.");
      if (!path.delete()) {
        log.error("Failed to delete incomplete file " + path);
      }
      throw new NotAZipFileException();
    }
    ZipFile zipFile=new ZipFile(path);
    for (Enumeration<? extends ZipEntry> e=zipFile.entries(); e.hasMoreElements(); ) {
      ZipEntry entry=e.nextElement();
      if (entry.getName().endsWith(".tif")) {
        InputStream istream=zipFile.getInputStream(entry);
        File tile=getPathToNEDTile(key);
        FileOutputStream ostream=new FileOutputStream(tile);
        byte[] buffer=new byte[4096];
        while (true) {
          bytesRead=istream.read(buffer);
          if (bytesRead == -1) {
            break;
          }
          ostream.write(buffer,0,bytesRead);
        }
        ostream.close();
        return tile;
      }
    }
  }
 catch (  NotAZipFileException e) {
    throw e;
  }
catch (  Exception e) {
    throw new RuntimeException("Error extracting geotiff from zip " + path,e);
  }
  throw new RuntimeException("Error extracting geotiff from zip: nothing ends in .tif " + path);
}
