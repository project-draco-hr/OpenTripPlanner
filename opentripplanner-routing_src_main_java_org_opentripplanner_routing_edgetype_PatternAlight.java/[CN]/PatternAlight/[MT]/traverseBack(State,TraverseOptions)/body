{
  if (!options.modes.get(modeMask)) {
    return null;
  }
  long currentTime=state0.getTime();
  Date serviceDate=getServiceDate(currentTime,options.calendar);
  Date serviceDateYesterday=getServiceDate(currentTime - MILLI_IN_DAY,options.calendar);
  int secondsSinceMidnight=(int)((currentTime - serviceDate.getTime()) / 1000);
  int wait=1;
  int patternIndex=-1;
  AgencyAndId service=pattern.exemplar.getServiceId();
  if (options.serviceOn(service,serviceDate)) {
    patternIndex=pattern.getPreviousPattern(stopIndex,secondsSinceMidnight,options.wheelchairAccessible,false);
    if (patternIndex >= 0) {
      wait=pattern.getArrivalTime(stopIndex,patternIndex) - secondsSinceMidnight;
    }
  }
  if (options.serviceOn(service,serviceDateYesterday)) {
    int yesterdayPatternIndex=pattern.getPreviousPattern(stopIndex,secondsSinceMidnight + SEC_IN_DAY,options.wheelchairAccessible,false);
    if (yesterdayPatternIndex >= 0) {
      int waitYesterday=pattern.getArrivalTime(stopIndex,yesterdayPatternIndex) - secondsSinceMidnight - SEC_IN_DAY;
      if (wait > 0 || waitYesterday > wait) {
        wait=waitYesterday;
        patternIndex=yesterdayPatternIndex;
      }
    }
  }
  if (wait > 0) {
    return null;
  }
  State state1=state0.clone();
  state1.setPattern(patternIndex);
  state1.incrementTimeInSeconds(wait);
  state1.tripId=pattern.getTrip(patternIndex).getId();
  state1.justTransferred=true;
  return new TraverseResult(-wait + BOARD_COST,state1);
}
