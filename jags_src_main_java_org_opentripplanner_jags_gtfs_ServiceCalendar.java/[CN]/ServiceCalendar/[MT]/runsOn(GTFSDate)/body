{
  if (date.before(this.start_date)) {
    throw new DateOutOfBoundsException(date + " is before period start " + this.start_date);
  }
  if (date.after(this.end_date)) {
    throw new DateOutOfBoundsException(date + " is after period end " + this.end_date);
  }
  ServiceCalendarDate exception=this.getServiceCalendarDate(date);
  if (exception != null) {
    if (exception.exception_type.intValue() == ServiceCalendarDateExceptionType.ADDED) {
      return true;
    }
 else     if (exception.exception_type.intValue() == ServiceCalendarDateExceptionType.REMOVED) {
      return false;
    }
  }
  GregorianCalendar cal=new GregorianCalendar(date.year,date.month - 1,date.day);
  int dow=cal.get(GregorianCalendar.DAY_OF_WEEK);
  if ((dow == GregorianCalendar.MONDAY && this.monday.val) || (dow == GregorianCalendar.TUESDAY && this.tuesday.val) || (dow == GregorianCalendar.WEDNESDAY && this.wednesday.val)|| (dow == GregorianCalendar.THURSDAY && this.thursday.val)|| (dow == GregorianCalendar.FRIDAY && this.friday.val)|| (dow == GregorianCalendar.SATURDAY && this.saturday.val)|| (dow == GregorianCalendar.SUNDAY && this.sunday.val)) {
    return true;
  }
 else {
    return false;
  }
}
