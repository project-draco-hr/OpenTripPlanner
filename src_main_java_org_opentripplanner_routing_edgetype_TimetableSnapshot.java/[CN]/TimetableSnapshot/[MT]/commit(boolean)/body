{
  if (readOnly) {
    throw new ConcurrentModificationException("This TimetableSnapshot is read-only.");
  }
  TimetableSnapshot ret=new TimetableSnapshot();
  if (!force && !this.isDirty())   return null;
  for (  Timetable tt : dirtyTimetables) {
    tt.finish();
  }
  ret.timetables=(HashMap<TripPattern,SortedSet<Timetable>>)this.timetables.clone();
  ret.lastAddedTripPattern=(HashMap<TripIdAndServiceDate,TripPattern>)this.lastAddedTripPattern.clone();
  this.dirtyTimetables.clear();
  this.dirty=false;
  ret.readOnly=true;
  return ret;
}
