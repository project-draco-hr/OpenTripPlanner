{
  Graph gg=load_graph("map.csv");
  Vector<String[]> pairs=read_pairs("nodepairs.csv");
  int TESTSIZE=100;
  if (pairs.size() < TESTSIZE)   TESTSIZE=pairs.size();
  int total=0;
  for (int i=0; i < TESTSIZE; i++) {
    String[] pair=(String[])pairs.elementAt(i);
    System.out.print((i + 1) + "\t" + pair[0]+ "\t"+ pair[1]);
    long t0=System.currentTimeMillis();
    ShortestPathTree spt=AStar.getShortestPathTree(gg,pair[0],pair[1],new State(),new TraverseOptions());
    @SuppressWarnings("unused") GraphPath gp=spt.getPath(gg.getVertex(pair[1]));
    long t1=System.currentTimeMillis();
    total+=(t1 - t0);
    System.out.println("\t" + (t1 - t0) + "ms");
  }
  System.out.println("total: " + total);
}
