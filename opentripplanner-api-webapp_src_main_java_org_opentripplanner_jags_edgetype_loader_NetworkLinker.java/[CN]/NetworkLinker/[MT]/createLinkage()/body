{
  STRtree index=new STRtree();
  for (  Vertex v : graph.getVertices()) {
    if (v instanceof SpatialVertex) {
      SpatialVertex sv=(SpatialVertex)v;
      index.insert(new Envelope(sv.getCoordinate()),v);
    }
  }
  for (  Vertex v : graph.getVertices()) {
    if (v.isTransitStop && v instanceof SpatialVertex) {
      SpatialVertex sv=(SpatialVertex)v;
      Envelope env=new Envelope(sv.getCoordinate());
      env.expandBy(0.0018);
      List<SpatialVertex> nearby=(List<SpatialVertex>)index.query(env);
      SpatialVertex nearestNonTransitVertex=null;
      double minDistance=0;
      for (      SpatialVertex nv : nearby) {
        if (nv == sv) {
          continue;
        }
        double distance=nv.getCoordinate().distance(sv.getCoordinate());
        if (nv.isTransitStop) {
          graph.addEdge(sv,nv,new Transfer(distance));
          graph.addEdge(nv,sv,new Transfer(distance));
        }
 else {
          if (distance < minDistance) {
            minDistance=distance;
            nearestNonTransitVertex=nv;
          }
        }
      }
      if (nearestNonTransitVertex != null) {
        graph.addEdge(nearestNonTransitVertex,sv,new Board());
        graph.addEdge(sv,nearestNonTransitVertex,new Alight());
      }
    }
  }
}
