{
  Alert alertText=new Alert();
  alertText.alertDescriptionText=deBuffer(alert.getDescriptionText());
  alertText.alertHeaderText=deBuffer(alert.getHeaderText());
  alertText.alertUrl=deBuffer(alert.getUrl());
  ArrayList<TimePeriod> periods=new ArrayList<TimePeriod>();
  if (alert.getActivePeriodCount() > 0) {
    long bestStartTime=Long.MAX_VALUE;
    long lastEndTime=Long.MIN_VALUE;
    for (    TimeRange activePeriod : alert.getActivePeriodList()) {
      final long realStart=activePeriod.hasStart() ? activePeriod.getStart() : 0;
      final long start=activePeriod.hasStart() ? realStart - earlyStart : 0;
      if (realStart > 0 && realStart < bestStartTime) {
        bestStartTime=realStart;
      }
      final long end=activePeriod.hasEnd() ? activePeriod.getEnd() : Long.MAX_VALUE;
      if (end > lastEndTime) {
        lastEndTime=end;
      }
      periods.add(new TimePeriod(start,end));
    }
    if (bestStartTime != Long.MAX_VALUE) {
      alertText.effectiveStartDate=new Date(bestStartTime * 1000);
    }
    if (lastEndTime != Long.MIN_VALUE) {
      alertText.effectiveEndDate=new Date(lastEndTime * 1000);
    }
  }
 else {
    periods.add(new TimePeriod(0,Long.MAX_VALUE));
  }
  for (  EntitySelector informed : alert.getInformedEntityList()) {
    if (fuzzyTripMatcher != null && informed.hasTrip()) {
      TripDescriptor trip=fuzzyTripMatcher.match(feedId,informed.getTrip());
      informed=informed.toBuilder().setTrip(trip).build();
    }
    String patchId=createId(id,informed);
    String routeId=null;
    if (informed.hasRouteId()) {
      routeId=informed.getRouteId();
    }
    int direction;
    if (informed.hasTrip() && informed.getTrip().hasDirectionId()) {
      direction=informed.getTrip().getDirectionId();
    }
 else {
      direction=-1;
    }
    String tripId=null;
    if (informed.hasTrip() && informed.getTrip().hasTripId()) {
      tripId=informed.getTrip().getTripId();
    }
    String stopId=null;
    if (informed.hasStopId()) {
      stopId=informed.getStopId();
    }
    String agencyId=informed.getAgencyId();
    if (informed.hasAgencyId()) {
      agencyId=informed.getAgencyId().intern();
    }
    AlertPatch patch=new AlertPatch();
    patch.setFeedId(feedId);
    if (routeId != null) {
      patch.setRoute(new AgencyAndId(feedId,routeId));
      if (direction != -1) {
        patch.setDirectionId(direction);
      }
    }
    if (tripId != null) {
      patch.setTrip(new AgencyAndId(feedId,tripId));
    }
    if (stopId != null) {
      patch.setStop(new AgencyAndId(feedId,stopId));
    }
    if (agencyId != null && routeId == null && tripId == null && stopId == null) {
      patch.setAgencyId(agencyId);
    }
    patch.setTimePeriods(periods);
    patch.setAlert(alertText);
    patch.setId(patchId);
    patchIds.add(patchId);
    alertPatchService.apply(patch);
  }
}
