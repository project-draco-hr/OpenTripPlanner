{
  opt=traverseOptions;
  graph=graphService.getGraph();
  fromVertex=graph.streetIndex.getVertexForPlace(opt.getFromPlace(),opt);
  toVertex=graph.streetIndex.getVertexForPlace(opt.getToPlace(),opt,fromVertex);
  origin=opt.arriveBy ? toVertex : fromVertex;
  target=opt.arriveBy ? fromVertex : toVertex;
  initialState=new State(this);
  checkEndpointVertices();
  findIntermediateVertices();
  calendarService=graphService.getCalendarService();
  transferTable=graph.getTransferTable();
  if (useServiceDays)   setServiceDays();
  remainingWeightHeuristic=heuristicFactory.getInstanceForSearch(opt);
  this.worstTime=opt.arriveBy ? 0 : Long.MAX_VALUE;
  if (opt.getModes().isTransit() && !graph.transitFeedCovers(opt.dateTime)) {
    throw new TransitTimesException();
  }
}
