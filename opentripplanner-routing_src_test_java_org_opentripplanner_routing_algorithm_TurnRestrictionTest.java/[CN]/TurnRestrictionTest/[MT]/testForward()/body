{
  Vertex origin=_graph.getVertex("maple_1st");
  Vertex destination=_graph.getVertex("broad_3rd");
  assertNotNull(origin);
  assertNotNull(destination);
  RoutingRequest options=new RoutingRequest();
  options.setWalkSpeed(1.0);
  options.setRoutingContext(_graph,origin,destination);
  ShortestPathTree tree=new GenericAStar().getShortestPathTree(options);
  GraphPath path=tree.getPath(destination,false);
  assertNotNull(path);
  List<State> states=path.states;
  assertEquals(5,states.size());
  assertEquals("maple_1st",states.get(0).getVertex().getLabel());
  assertEquals("main_1st",states.get(1).getVertex().getLabel());
  assertEquals("broad_1st",states.get(2).getVertex().getLabel());
  assertEquals("broad_2nd",states.get(3).getVertex().getLabel());
  assertEquals("broad_3rd",states.get(4).getVertex().getLabel());
}
