{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  oprot.writeFieldBegin(DURATION_FIELD_DESC);
  oprot.writeI32(struct.duration);
  oprot.writeFieldEnd();
  oprot.writeFieldBegin(START_TIME_FIELD_DESC);
  oprot.writeI64(struct.start_time);
  oprot.writeFieldEnd();
  oprot.writeFieldBegin(END_TIME_FIELD_DESC);
  oprot.writeI64(struct.end_time);
  oprot.writeFieldEnd();
  if (struct.states != null) {
    if (struct.isSetStates()) {
      oprot.writeFieldBegin(STATES_FIELD_DESC);
{
        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.states.size()));
        for (        TravelState _iter6 : struct.states) {
          _iter6.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.edges != null) {
    if (struct.isSetEdges()) {
      oprot.writeFieldBegin(EDGES_FIELD_DESC);
{
        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.edges.size()));
        for (        org.opentripplanner.api.thrift.definition.GraphEdge _iter7 : struct.edges) {
          _iter7.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
