{
  List<Ride> rides=createRides(path);
  if (rides.size() == 0) {
    return null;
  }
  Currency currency=null;
  WrappedCurrency wrappedCurrency=null;
  if (fareRules.size() > 0) {
    currency=Currency.getInstance(fareRules.iterator().next().getFareAttribute().getCurrencyType());
    wrappedCurrency=new WrappedCurrency(currency);
  }
  float lowestCost=getLowestCost(rides);
  if (lowestCost != Float.POSITIVE_INFINITY) {
    int fractionDigits=2;
    if (currency != null)     fractionDigits=currency.getDefaultFractionDigits();
    int cents=(int)Math.round(lowestCost * Math.pow(10,fractionDigits));
    Fare fare=new Fare();
    fare.addFare(FareType.regular,wrappedCurrency,cents);
    return fare;
  }
 else {
    return null;
  }
}
