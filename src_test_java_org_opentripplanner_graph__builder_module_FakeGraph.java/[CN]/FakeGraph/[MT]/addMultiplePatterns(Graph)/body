{
  GTFSFeed feed=new GTFSFeed();
  Agency a=new Agency();
  a.agency_id="agency";
  a.agency_name="Agency";
  a.agency_timezone="America/New_York";
  a.agency_url=new URL("http://www.example.com");
  feed.agency.put("agency",a);
  Route r=new Route();
  r.route_short_name="1";
  r.route_long_name="High Street";
  r.route_type=3;
  r.agency=a;
  r.route_id="route";
  feed.routes.put(r.route_id,r);
  Service s=new Service("service");
  s.calendar=new Calendar();
  s.calendar.service=s;
  s.calendar.monday=s.calendar.tuesday=s.calendar.wednesday=s.calendar.thursday=s.calendar.friday=s.calendar.saturday=s.calendar.sunday=1;
  s.calendar.start_date=19991231;
  s.calendar.end_date=21001231;
  feed.services.put(s.service_id,s);
  com.conveyal.gtfs.model.Stop s1=new com.conveyal.gtfs.model.Stop();
  s1.stop_id=s1.stop_name="s1";
  s1.stop_lat=40.2182;
  s1.stop_lon=-83.0889;
  feed.stops.put(s1.stop_id,s1);
  com.conveyal.gtfs.model.Stop s2=new com.conveyal.gtfs.model.Stop();
  s2.stop_id=s2.stop_name="s2";
  s2.stop_lat=39.9621;
  s2.stop_lon=-83.0007;
  feed.stops.put(s2.stop_id,s2);
  com.conveyal.gtfs.model.Stop s3=new com.conveyal.gtfs.model.Stop();
  s3.stop_id=s3.stop_name="s3";
  s3.stop_lat=39.9510;
  s3.stop_lon=-83.0007;
  feed.stops.put(s3.stop_id,s3);
  for (int departure=7 * 3600, dcount=0; departure < 20 * 3600; departure+=FREQUENCY) {
    Trip t=new Trip();
    t.trip_id="trip" + departure;
    t.service=s;
    t.route=r;
    feed.trips.put(t.trip_id,t);
    StopTime st1=new StopTime();
    st1.trip_id=t.trip_id;
    st1.arrival_time=departure;
    st1.departure_time=departure;
    st1.stop_id=s1.stop_id;
    st1.stop_sequence=1;
    feed.stop_times.put(new Fun.Tuple2(st1.trip_id,st1.stop_sequence),st1);
    boolean secondStop=dcount++ % 10 != 0;
    if (secondStop) {
      StopTime st2=new StopTime();
      st2.trip_id=t.trip_id;
      st2.arrival_time=departure + TRAVEL_TIME;
      st2.departure_time=departure + TRAVEL_TIME;
      st2.stop_sequence=2;
      st2.stop_id=s2.stop_id;
      feed.stop_times.put(new Fun.Tuple2(st2.trip_id,st2.stop_sequence),st2);
    }
    StopTime st3=new StopTime();
    st3.trip_id=t.trip_id;
    st3.arrival_time=departure + (secondStop ? 2 : 1) * TRAVEL_TIME;
    st3.departure_time=departure + (secondStop ? 2 : 1) * TRAVEL_TIME;
    st3.stop_sequence=3;
    st3.stop_id=s3.stop_id;
    feed.stop_times.put(new Fun.Tuple2(st3.trip_id,st3.stop_sequence),st3);
  }
  File tempFile=File.createTempFile("gtfs",".zip");
  feed.toFile(tempFile.getAbsolutePath());
  GtfsModule gtfs=new GtfsModule(Arrays.asList(new GtfsBundle(tempFile)));
  gtfs.buildGraph(gg,new HashMap<>());
}
