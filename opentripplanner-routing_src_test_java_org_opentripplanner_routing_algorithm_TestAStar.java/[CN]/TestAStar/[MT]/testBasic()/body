{
  GtfsContext context=GtfsLibrary.readGtfs(new File(ConstantsForTests.CALTRAIN_GTFS));
  TraverseOptions options=new TraverseOptions();
  options.setGtfsContext(context);
  Graph gg=new Graph();
  GTFSPatternHopFactory factory=new GTFSPatternHopFactory(context);
  factory.run(gg);
  ShortestPathTree spt;
  GraphPath path=null;
  long startTime=TestUtils.dateInSeconds(2009,8,7,12,0,0);
  spt=AStar.getShortestPathTree(gg,"Caltrain_Millbrae Caltrain","Caltrain_Mountain View Caltrain",startTime,options);
  path=spt.getPath(gg.getVertex("Caltrain_Mountain View Caltrain"),true);
  long endTime=TestUtils.dateInSeconds(2009,8,7,13,29,0);
  assertEquals(path.getEndTime(),endTime);
  options.setArriveBy(true);
  spt=AStar.getShortestPathTree(gg,"Caltrain_Millbrae Caltrain","Caltrain_Mountain View Caltrain",endTime,options);
  path=spt.getPath(gg.getVertex("Caltrain_Millbrae Caltrain"),true);
  long expectedStartTime=TestUtils.toSeconds(new GregorianCalendar(2009,8,7,12,39));
  assertTrue(path.getStartTime() - expectedStartTime <= 1);
}
