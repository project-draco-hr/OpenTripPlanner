{
  while (!runState.pq.empty()) {
    if (abortTime < Long.MAX_VALUE && System.currentTimeMillis() > abortTime) {
      LOG.warn("Search timeout. origin={} target={}",runState.rctx.origin,runState.rctx.target);
      runState.options.rctx.aborted=true;
      runState.options.rctx.debugOutput.timedOut=true;
      break;
    }
    if (!iterate()) {
      continue;
    }
    if (runState.foundPathWeight != null && runState.u.getWeight() > runState.foundPathWeight * OVERSEARCH_MULTIPLIER) {
      break;
    }
    if (runState.terminationStrategy != null) {
      if (runState.terminationStrategy.shouldSearchTerminate(runState.rctx.origin,runState.rctx.target,runState.u,runState.spt,runState.options)) {
        break;
      }
    }
 else     if (!runState.options.batch && runState.u_vertex == runState.rctx.target && runState.u.isFinal() && runState.u.allPathParsersAccept()) {
      if (runState.options.onlyTransitTrips && !runState.u.isEverBoarded()) {
        continue;
      }
      runState.targetAcceptedStates.add(runState.u);
      runState.foundPathWeight=runState.u.getWeight();
      runState.options.rctx.debugOutput.foundPath();
      if (runState.options.longDistance) {
        break;
      }
      if (runState.targetAcceptedStates.size() >= runState.options.getNumItineraries()) {
        LOG.debug("total vertices visited {}",runState.nVisited);
        break;
      }
    }
  }
}
