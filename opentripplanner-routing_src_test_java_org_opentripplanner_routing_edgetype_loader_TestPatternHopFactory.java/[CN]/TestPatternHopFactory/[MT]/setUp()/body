{
  context=GtfsLibrary.readGtfs(new File(ConstantsForTests.FAKE_GTFS));
  graph=new Graph();
  GTFSPatternHopFactory factory=new GTFSPatternHopFactory(context);
  factory.run(graph);
  Vertex stop_a=graph.getVertex("agency_A");
  Vertex stop_b=graph.getVertex("agency_B");
  Vertex stop_c=graph.getVertex("agency_C");
  Vertex stop_d=graph.getVertex("agency_D");
  StreetVertex near_a=(StreetVertex)graph.addVertex(new StreetVertex("near_a",GeometryUtils.makeLineString(stop_a.getX() + 0.00001,stop_a.getY() + 0.00001,stop_a.getX() - 0.00001,stop_a.getY() - 0.00001),"near a",100,false));
  StreetVertex near_b=(StreetVertex)graph.addVertex(new StreetVertex("near_b",GeometryUtils.makeLineString(stop_b.getX() + 0.00001,stop_b.getY() + 0.00001,stop_b.getX() - 0.00001,stop_b.getY() - 0.00001),"near b",100,false));
  StreetVertex near_c=(StreetVertex)graph.addVertex(new StreetVertex("near_c",GeometryUtils.makeLineString(stop_c.getX() + 0.00001,stop_c.getY() + 0.00001,stop_c.getX() - 0.00001,stop_c.getY() - 0.00001),"near c",100,false));
  StreetVertex near_d=(StreetVertex)graph.addVertex(new StreetVertex("near_d",GeometryUtils.makeLineString(stop_d.getX() + 0.00001,stop_d.getY() + 0.00001,stop_d.getX() - 0.00001,stop_d.getY() - 0.00001),"near d",100,false));
  StreetVertex[] nearPoints={near_a,near_b,near_c,near_d};
  StreetVertex nowhere=(StreetVertex)graph.addVertex(new StreetVertex("nowhere",GeometryUtils.makeLineString(0,0,0.0001,0.0001),"nowhere",100,false));
  for (int i=0; i < nearPoints.length; ++i) {
    StreetVertex a=nearPoints[i];
    TurnEdge street=new TurnEdge(a,nowhere);
    graph.addEdge(a,nowhere,street);
  }
  NetworkLinker nl=new NetworkLinker(graph);
  nl.createLinkage();
}
