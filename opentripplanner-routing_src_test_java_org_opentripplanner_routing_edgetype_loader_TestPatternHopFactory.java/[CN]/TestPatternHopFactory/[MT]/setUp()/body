{
  context=GtfsLibrary.readGtfs(new File(ConstantsForTests.FAKE_GTFS));
  graph=new Graph();
  GTFSPatternHopFactory factory=new GTFSPatternHopFactory(context);
  factory.run(graph);
  String[] stops={"agency_A","agency_B","agency_C","agency_D","agency_E"};
  for (int i=0; i < stops.length; ++i) {
    TransitStop stop=(TransitStop)(graph.getVertex(stops[i]));
    TurnVertex front=new TurnVertex(graph,"near_" + stop.getStopId(),GeometryUtils.makeLineString(stop.getX() + 0.0001,stop.getY() + 0.0001,stop.getX() - 0.0001,stop.getY() - 0.0001),"near " + stop.getStopId(),100,false,null);
    TurnVertex back=new TurnVertex(graph,"near_" + stop.getStopId(),GeometryUtils.makeLineString(stop.getX() - 0.0001,stop.getY() - 0.0001,stop.getX() + 0.0001,stop.getY() + 0.0001),"near " + stop.getStopId(),100,true,null);
    TurnEdge street1=new TurnEdge(front,back);
    TurnEdge street2=new TurnEdge(back,front);
  }
  NetworkLinker nl=new NetworkLinker(graph);
  nl.createLinkage();
}
