{
  Vertex stop_a=graph.getVertex("agency_A");
  Vertex stop_b=graph.getVertex("agency_B");
  Vertex stop_c=graph.getVertex("agency_C");
  Vertex stop_d=graph.getVertex("agency_D");
  Vertex stop_e=graph.getVertex("agency_E");
  RoutingRequest options=new RoutingRequest();
  options.minTransferTime=0;
  long startTime=TestUtils.dateInSeconds("America/New_York",2009,8,7,0,0,0);
  options.dateTime=startTime;
  ShortestPathTree spt;
  GraphPath path;
  options.setRoutingContext(graph,stop_a,stop_b);
  spt=aStar.getShortestPathTree(options);
  path=spt.getPath(stop_b,false);
  assertNotNull(path);
  assertEquals(6,path.states.size());
  options.setRoutingContext(graph,stop_a,stop_c);
  spt=aStar.getShortestPathTree(options);
  path=spt.getPath(stop_c,false);
  assertNotNull(path);
  assertEquals(8,path.states.size());
  options.setRoutingContext(graph,stop_a,stop_d);
  spt=aStar.getShortestPathTree(options);
  path=spt.getPath(stop_d,false);
  assertNotNull(path);
  long endTime=startTime + 40 * 60;
  assertEquals(endTime,path.getEndTime());
  options.setRoutingContext(graph,stop_a,stop_e);
  spt=aStar.getShortestPathTree(options);
  path=spt.getPath(stop_e,false);
  assertNotNull(path);
  assertTrue(path.states.size() == 14);
  endTime=startTime + 70 * 60;
  assertEquals(endTime,path.getEndTime());
}
