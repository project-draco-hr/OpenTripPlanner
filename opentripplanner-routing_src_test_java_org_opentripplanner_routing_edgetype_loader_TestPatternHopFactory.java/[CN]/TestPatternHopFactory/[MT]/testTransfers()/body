{
  TransferTable transferTable=graph.getTransferTable();
  assertTrue(transferTable.hasPreferredTransfers());
  assertTrue(transferTable.getTransferTime(graph.getVertex("agency_K_arrive"),graph.getVertex("agency_N_depart")) == TransferTable.PREFERRED_TRANSFER);
  Vertex e_arrive=graph.getVertex("agency_E_arrive");
  Vertex f_depart=graph.getVertex("agency_F_depart");
  Edge edge=new SimpleEdge(e_arrive,f_depart,10000,10000);
  long startTime=TestUtils.dateInSeconds("America/New_York",2009,8,18,0,50,0);
  Vertex stop_b=graph.getVertex("agency_B_depart");
  Vertex stop_g=graph.getVertex("agency_G_arrive");
  RoutingRequest options=new RoutingRequest();
  options.dateTime=startTime;
  options.setRoutingContext(graph,stop_b,stop_g);
  ShortestPathTree spt=aStar.getShortestPathTree(options);
  GraphPath path=spt.getPath(stop_g,false);
  assertNotNull(path);
  assertTrue("expected to use much later trip due to min transfer time",path.getEndTime() - startTime > 4.5 * 60 * 60);
  e_arrive.removeOutgoing(edge);
  f_depart.removeIncoming(edge);
}
