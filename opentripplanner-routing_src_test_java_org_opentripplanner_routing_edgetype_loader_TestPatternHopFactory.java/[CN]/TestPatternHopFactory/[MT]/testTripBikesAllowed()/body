{
  Vertex stop_a=graph.getVertex("agency_A");
  Vertex stop_b=graph.getVertex("agency_B");
  Vertex stop_c=graph.getVertex("agency_C");
  Vertex stop_d=graph.getVertex("agency_D");
  TraverseOptions options=new TraverseOptions(context);
  options.getModes().setBicycle(true);
  options.getModes().setTransit(true);
  ShortestPathTree spt;
  GraphPath path;
  spt=AStar.getShortestPathTree(graph,stop_a,stop_b,new State(new GregorianCalendar(2009,8,18,0,0,0).getTimeInMillis()),options);
  path=spt.getPath(stop_b);
  assertNotNull(path);
  spt=AStar.getShortestPathTree(graph,stop_d,stop_c,new State(new GregorianCalendar(2009,8,18,0,0,0).getTimeInMillis()),options);
  path=spt.getPath(stop_c);
  assertNull(path);
  spt=AStar.getShortestPathTree(graph,stop_c,stop_d,new State(new GregorianCalendar(2009,8,18,0,0,0).getTimeInMillis()),options);
  path=spt.getPath(stop_d);
  assertNotNull(path);
}
