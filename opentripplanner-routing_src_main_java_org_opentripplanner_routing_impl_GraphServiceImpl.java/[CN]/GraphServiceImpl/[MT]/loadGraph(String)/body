{
  if (!routerIdLegal(routerId)) {
    LOG.error("routerId '{}' contains characters other than alphanumeric, underscore, and dash.",routerId);
    return null;
  }
  LOG.debug("loading serialized graph for routerId {}",routerId);
  StringBuilder sb=new StringBuilder(resourceBase);
  if (!(resourceBase.endsWith("/") || resourceBase.endsWith(File.pathSeparator))) {
    sb.append("/");
  }
  if (routerId.length() > 0) {
    sb.append(routerId);
    sb.append("/");
  }
  sb.append("Graph.obj");
  String resourceLocation=sb.toString();
  LOG.debug("graph file for routerId '{}' is at {}",routerId,resourceLocation);
  InputStream is;
  try {
    if (resourceLocation.startsWith("file:")) {
      is=new FileInputStream(new File(resourceLocation.substring(5)));
    }
 else     if (resourceLocation.startsWith("classpath:")) {
      throw new UnsupportedOperationException();
    }
 else {
      is=new FileInputStream(new File(resourceLocation));
    }
  }
 catch (  FileNotFoundException e) {
    LOG.error("File not found at {}.",resourceLocation);
    return null;
  }
  LOG.debug("graph input stream successfully opened.");
  LOG.info("Loading graph...");
  try {
    return Graph.load(new ObjectInputStream(is),loadLevel,indexFactory);
  }
 catch (  Exception ex) {
    LOG.error("Exception while loading graph from {}.",resourceLocation);
    ex.printStackTrace();
    return null;
  }
}
