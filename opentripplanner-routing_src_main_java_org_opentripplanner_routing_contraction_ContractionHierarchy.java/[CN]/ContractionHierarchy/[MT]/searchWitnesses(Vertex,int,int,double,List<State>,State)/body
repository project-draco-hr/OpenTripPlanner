{
  Dijkstra dijkstra=new Dijkstra(v.getVertex(),fwdOptions,u,hopLimit);
  dijkstra.setTargets(ws);
  dijkstra.setRouteOn(corev);
  BasicShortestPathTree spt=dijkstra.getShortestPathTree(weightLimit,nodeLimit);
  ArrayList<PotentialShortcut> shortcuts=new ArrayList<PotentialShortcut>();
  for (  State w : ws) {
    if (v.getVertex() == w.getVertex()) {
      continue;
    }
    double weightThroughU=v.getWeight() + w.getWeight();
    State pathAroundU=spt.getState(w.getVertex());
    if (pathAroundU == null || pathAroundU.exceedsWeightLimit(weightThroughU + .01)) {
      int timeThroughU=(int)(w.getAbsTimeDeltaSec() + v.getAbsTimeDeltaSec());
      double walkDistance=v.getWalkDistance() + w.getWalkDistance();
      shortcuts.add(new PotentialShortcut(v.getBackEdge(),w.getBackEdge(),timeThroughU,weightThroughU,walkDistance));
    }
  }
  return new WitnessSearchResult(shortcuts,spt,v.getVertex(),spt.getVertexCount());
}
