{
  Dijkstra dijkstra=new Dijkstra(graph,v.vertex,options,u,hopLimit);
  dijkstra.setTargets(wSet);
  BasicShortestPathTree spt=dijkstra.getShortestPathTree(weightLimit,nodeLimit);
  ArrayList<Shortcut> shortcuts=new ArrayList<Shortcut>();
  for (  VertexIngress w : ws) {
    if (v.vertex == w.vertex) {
      continue;
    }
    double weightThroughU=v.weight + w.weight;
    State pathAroundU=spt.getState(w.vertex);
    if (pathAroundU == null || pathAroundU.exceedsWeightLimit(weightThroughU + .01)) {
      int timeThroughU=(int)((w.time + v.time) / 1000);
      double walkDistance=v.walkDistance + w.walkDistance;
      Shortcut vuw=new Shortcut(v.edge,w.edge,timeThroughU,weightThroughU,walkDistance,mode);
      shortcuts.add(vuw);
    }
  }
  return new WitnessSearchResult(shortcuts,spt,v.vertex,spt.getVertexCount());
}
