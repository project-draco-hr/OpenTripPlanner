{
  List<StopCluster> clusters=Lists.newArrayList();
  int psIdx=0;
  LOG.info("Clustering stops by geographic and name proximity...");
  Map<String,String> descriptionForStationId=Maps.newHashMap();
  for (  Stop s0 : gidx.stopForId.values()) {
    if (s0.getParentStation() != null)     continue;
    String s0normalizedName=StopNameNormalizer.normalize(s0.getName());
    StopCluster cluster=new StopCluster(String.format("C%03d",psIdx++),s0normalizedName);
    for (    TransitStop ts1 : gidx.stopSpatialIndex.query(s0.getLon(),s0.getLat(),CLUSTER_RADIUS)) {
      Stop s1=ts1.getStop();
      double geoDistance=SphericalDistanceLibrary.getInstance().fastDistance(s0.getLat(),s0.getLon(),s1.getLat(),s1.getLon());
      if (geoDistance < CLUSTER_RADIUS) {
        String s1normalizedName=StopNameNormalizer.normalize(s1.getName());
        if (s1normalizedName.equals(s0normalizedName)) {
          cluster.children.add(s1);
          s1.setParentStation(cluster.id);
        }
      }
    }
    cluster.computeCenter();
    clusters.add(cluster);
  }
  return clusters;
}
