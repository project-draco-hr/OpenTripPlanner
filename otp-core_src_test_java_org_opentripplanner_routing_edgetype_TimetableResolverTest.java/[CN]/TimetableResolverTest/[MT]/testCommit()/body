{
  ServiceDate today=new ServiceDate();
  ServiceDate yesterday=today.previous();
  TableTripPattern pattern=patternIndex.get(new AgencyAndId("agency","1.1"));
  TimetableResolver resolver=new TimetableResolver();
  TimetableResolver snapshot=resolver.commit();
  assertNull(snapshot);
  TripDescriptor.Builder tripDescriptorBuilder=TripDescriptor.newBuilder();
  tripDescriptorBuilder.setTripId("1.1");
  tripDescriptorBuilder.setScheduleRelationship(ScheduleRelationship.CANCELED);
  TripUpdate.Builder tripUpdateBuilder=TripUpdate.newBuilder();
  tripUpdateBuilder.setTrip(tripDescriptorBuilder);
  TripUpdate tripUpdate=tripUpdateBuilder.build();
  assertTrue(resolver.update(pattern,tripUpdate,"agency",timeZone,today));
  snapshot=resolver.commit();
  assertEquals(snapshot.resolve(pattern,today),resolver.resolve(pattern,today));
  assertEquals(snapshot.resolve(pattern,yesterday),resolver.resolve(pattern,yesterday));
  assertTrue(resolver.update(pattern,tripUpdate,"agency",timeZone,today));
  assertNotSame(snapshot.resolve(pattern,today),resolver.resolve(pattern,today));
  assertEquals(snapshot.resolve(pattern,yesterday),resolver.resolve(pattern,yesterday));
  assertTrue(resolver.update(pattern,tripUpdate,"agency",timeZone,yesterday));
  assertNotSame(snapshot.resolve(pattern,yesterday),resolver.resolve(pattern,yesterday));
  snapshot=resolver.commit();
  assertEquals(snapshot.resolve(pattern,today),resolver.resolve(pattern,today));
  assertEquals(snapshot.resolve(pattern,yesterday),resolver.resolve(pattern,yesterday));
  snapshot.commit();
}
