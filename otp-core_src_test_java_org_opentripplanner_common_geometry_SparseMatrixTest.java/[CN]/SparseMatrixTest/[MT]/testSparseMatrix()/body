{
  SparseMatrix<String> m=new SparseMatrix<String>(8,300);
  assertNull(m.get(0,0));
  assertNull(m.get(10,10));
  assertNull(m.get(-10,-10));
  assertEquals(0,m.size());
  m.put(0,0,"A");
  assertEquals(1,m.size());
  assertEquals("A",m.get(0,0));
  m.put(0,0,"A2");
  assertEquals("A2",m.get(0,0));
  assertEquals(1,m.size());
  m.put(-1000,-8978,"B");
  assertEquals("B",m.get(-1000,-8978));
  m.put(223980,-898978,"C");
  assertEquals("C",m.get(223980,-898978));
  assertEquals(3,m.size());
  for (int i=-10; i < 10; i++) {
    for (int j=-10; j < 10; j++) {
      m.put(i,j,i + ":" + j);
    }
  }
  for (int i=-10; i < 10; i++) {
    for (int j=-10; j < 10; j++) {
      String s=m.get(i,j);
      assertEquals(i + ":" + j,s);
    }
  }
  final List<String> elements=new ArrayList<String>();
  m.iterate(new Visitor<String>(){
    @Override public void visit(    String s){
      elements.add(s);
    }
  }
);
  assertEquals(402,elements.size());
}
