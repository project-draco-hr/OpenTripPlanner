{
  _log.debug("converting to edge-based graph");
  for (  IntersectionVertex v : endpoints) {
    for (    Edge e_in : v.getIncoming()) {
      PlainStreetEdge pse_in=(PlainStreetEdge)e_in;
      TurnVertex tv_in=getTurnVertexForEdge(graph,pse_in);
      TurnRestriction restriction=null;
      if (restrictions != null) {
        restriction=restrictions.get(pse_in);
      }
      for (      Edge e_out : v.getOutgoing()) {
        if (e_in == e_out)         continue;
        if (e_in.getFromVertex() == ((DirectEdge)e_out).getToVertex() && v.getOutgoing().size() > 1)         continue;
        TurnVertex tv_out=getTurnVertexForEdge(graph,(PlainStreetEdge)e_out);
        TurnEdge turn=new TurnEdge(tv_in,tv_out);
        if (restriction != null) {
          if (restriction.type == TurnRestrictionType.NO_TURN && restriction.to == e_out) {
            turn.setRestrictedModes(restriction.modes);
          }
 else           if (restriction.type == TurnRestrictionType.ONLY_TURN && restriction.to != e_in) {
            turn.setRestrictedModes(restriction.modes);
          }
        }
      }
    }
  }
  for (  Vertex v : endpoints) {
    graph.removeVertex(v);
  }
}
