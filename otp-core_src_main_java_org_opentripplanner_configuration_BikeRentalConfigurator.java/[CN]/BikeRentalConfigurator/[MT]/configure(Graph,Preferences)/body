{
  String sourceType=preferences.get("sourceType",null);
  Class<? extends BikeRentalDataSource> clazz=bikeRentalSources.get(sourceType);
  if (clazz == null) {
    LOG.error("Unknown bike rental source type: " + sourceType);
    return;
  }
  BikeRentalDataSource source=clazz.newInstance();
  if (source instanceof PreferencesConfigurable) {
    ((PreferencesConfigurable)source).configure(graph,preferences);
  }
  BikeRentalUpdater2 updater=new BikeRentalUpdater2(graph,source);
  updater.setNetwork(preferences.get("networks",DEFAULT_NETWORK_LIST));
  long frequencySec=preferences.getLong("frequencySec",DEFAULT_UPDATE_FREQ_SEC);
  LOG.info("Creating bike-rental updater running every {} seconds : {}",frequencySec,source);
  GraphUpdaterManager updaterManager=graph.getUpdaterManager();
  updaterManager.addUpdater(updater,frequencySec * 1000);
}
