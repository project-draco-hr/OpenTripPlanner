{
  Stop fromStop=new Stop();
  fromStop.setId(new AgencyAndId("A1","S1"));
  Stop toStop=new Stop();
  toStop.setId(new AgencyAndId("A1","S2"));
  Stop toStopParent=new Stop();
  toStopParent.setId(new AgencyAndId("A1","S3"));
  toStop.setParentStation("S3");
  Route fromRoute=new Route();
  fromRoute.setId(new AgencyAndId("A1","R1"));
  Trip fromTrip=new Trip();
  fromTrip.setId(new AgencyAndId("A1","T1"));
  fromTrip.setRoute(fromRoute);
  Route toRoute=new Route();
  toRoute.setId(new AgencyAndId("A1","R2"));
  Trip toTrip=new Trip();
  toTrip.setId(new AgencyAndId("A1","T2"));
  toTrip.setRoute(toRoute);
  Route toRoute2=new Route();
  toRoute2.setId(new AgencyAndId("A1","R3"));
  Trip toTrip2=new Trip();
  toTrip2.setId(new AgencyAndId("A1","T3"));
  toTrip2.setRoute(toRoute2);
  TransferTable table=new TransferTable();
  assertEquals(StopTransfer.UNKNOWN_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip,true));
  assertEquals(StopTransfer.UNKNOWN_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip2,true));
  assertEquals(StopTransfer.UNKNOWN_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip,true));
  assertEquals(StopTransfer.UNKNOWN_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip2,true));
  table.addTransferTime(fromStop,toStopParent,null,null,null,null,StopTransfer.PREFERRED_TRANSFER);
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip2,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip2,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip,true));
  assertEquals(StopTransfer.UNKNOWN_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip,false));
  assertEquals(StopTransfer.UNKNOWN_TRANSFER,table.getTransferTime(toStop,fromStop,toTrip,fromTrip,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(toStop,fromStop,toTrip,fromTrip,false));
  table.addTransferTime(fromStop,toStop,null,toRoute,null,null,StopTransfer.FORBIDDEN_TRANSFER);
  assertEquals(StopTransfer.FORBIDDEN_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip2,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip2,true));
  table.addTransferTime(fromStop,toStopParent,null,toRoute2,null,null,StopTransfer.TIMED_TRANSFER);
  assertEquals(StopTransfer.FORBIDDEN_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip,true));
  assertEquals(StopTransfer.TIMED_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip2,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip,true));
  assertEquals(StopTransfer.TIMED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip2,true));
  table.addTransferTime(fromStop,toStop,null,toRoute2,null,toTrip2,4);
  assertEquals(StopTransfer.FORBIDDEN_TRANSFER,table.getTransferTime(fromStop,toStop,fromTrip,toTrip,true));
  assertEquals(4,table.getTransferTime(fromStop,toStop,fromTrip,toTrip2,true));
  assertEquals(StopTransfer.PREFERRED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip,true));
  assertEquals(StopTransfer.TIMED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip2,true));
  table.addTransferTime(fromStop,toStop,fromRoute,null,null,toTrip,StopTransfer.UNKNOWN_TRANSFER);
  table.addTransferTime(fromStop,toStopParent,fromRoute,null,null,toTrip,5);
  assertEquals(5,table.getTransferTime(fromStop,toStop,fromTrip,toTrip,true));
  assertEquals(4,table.getTransferTime(fromStop,toStop,fromTrip,toTrip2,true));
  assertEquals(5,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip,true));
  assertEquals(StopTransfer.TIMED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip2,true));
  table.addTransferTime(fromStop,toStop,null,null,fromTrip,toTrip2,6);
  assertEquals(5,table.getTransferTime(fromStop,toStop,fromTrip,toTrip,true));
  assertEquals(6,table.getTransferTime(fromStop,toStop,fromTrip,toTrip2,true));
  assertEquals(5,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip,true));
  assertEquals(StopTransfer.TIMED_TRANSFER,table.getTransferTime(fromStop,toStopParent,fromTrip,toTrip2,true));
}
