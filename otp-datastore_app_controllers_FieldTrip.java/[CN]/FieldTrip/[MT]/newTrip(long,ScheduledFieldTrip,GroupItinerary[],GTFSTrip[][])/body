{
  TrinetUser user=checkLogin();
  checkAccess(user);
  FieldTripRequest ftRequest=FieldTripRequest.findById(requestId);
  for (int i=0; i < itins.length; i++) {
    GroupItinerary itin=itins[i];
    for (    GTFSTrip gtrip : gtfsTrips[i]) {
      List<GTFSTrip> tripsInUse=GTFSTrip.find("agencyAndId = ?",gtrip.agencyAndId).fetch();
      if (!tripsInUse.isEmpty()) {
        int capacityInUse=0;
        for (        GTFSTrip tripInUse : tripsInUse) {
          if (!tripInUse.groupItinerary.fieldTrip.request.travelDate.equals(ftRequest.travelDate))           continue;
          if (gtrip.fromStopIndex > tripInUse.toStopIndex || gtrip.toStopIndex < tripInUse.fromStopIndex)           continue;
          capacityInUse+=tripInUse.groupItinerary.passengers;
        }
        int remainingCapacity=gtrip.capacity - capacityInUse;
        if (itin.passengers > remainingCapacity) {
          renderJSON(-1);
        }
      }
    }
  }
  Set<ScheduledFieldTrip> tripsToDelete=new HashSet<ScheduledFieldTrip>();
  for (  ScheduledFieldTrip reqTrip : ftRequest.trips) {
    if (reqTrip.requestOrder == trip.requestOrder)     tripsToDelete.add(reqTrip);
  }
  for (  ScheduledFieldTrip delTrip : tripsToDelete) {
    delTrip.delete();
  }
  trip.id=null;
  trip.request=ftRequest;
  trip.serviceDay=trip.departure;
  trip.createdBy=user.username;
  trip.save();
  ftRequest.trips.add(trip);
  System.out.println("saved ScheduledFieldTrip, id=" + trip.id);
  trip.groupItineraries=new ArrayList<GroupItinerary>();
  for (int i=0; i < itins.length; i++) {
    GroupItinerary itinerary=itins[i];
    itinerary.fieldTrip=trip;
    trip.groupItineraries.add(itinerary);
    itinerary.save();
    itinerary.trips=new ArrayList<GTFSTrip>();
    for (    GTFSTrip gtrip : gtfsTrips[i]) {
      gtrip.groupItinerary=itinerary;
      itinerary.trips.add(gtrip);
      gtrip.save();
    }
  }
  Long id=trip.id;
  renderJSON(id);
}
