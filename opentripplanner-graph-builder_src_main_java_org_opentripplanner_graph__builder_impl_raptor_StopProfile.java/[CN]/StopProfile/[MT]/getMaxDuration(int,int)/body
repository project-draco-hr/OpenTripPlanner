{
  int worstDuration=0;
  int lastTime=0;
  for (  CostsAtTime costs : profile) {
    if (costs.time < startTime) {
      continue;
    }
    int bestDuration=Integer.MAX_VALUE;
    for (    DurationAndDistance departure : costs.costs) {
      final int time=departure.duration + costs.time - lastTime;
      if (time < bestDuration) {
        bestDuration=time;
      }
    }
    if (bestDuration > worstDuration) {
      worstDuration=bestDuration;
    }
    lastTime=costs.time;
    if (costs.time >= endTime) {
      break;
    }
  }
  return worstDuration;
}
