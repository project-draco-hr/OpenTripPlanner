{
  List<StopTime> out=new ArrayList<StopTime>();
  State result;
  long time=endTime;
  options=options.reversedClone();
  do {
    State s0=new State(e.getToVertex(),time,options);
    result=e.traverse(s0);
    if (result == null)     break;
    time=result.getTimeSeconds();
    if (time < startTime)     break;
    StopTime stopTime=new StopTime();
    TripTimes tripTimes=result.getTripTimes();
    Edge backEdge=result.getBackEdge();
    if (tripTimes != null && !tripTimes.isScheduled() && backEdge instanceof OnboardEdge) {
      OnboardEdge onboardEdge=(OnboardEdge)backEdge;
      stopTime.realTime=true;
      stopTime.delay=tripTimes.getArrivalDelay(onboardEdge.getStopIndex() - 1);
    }
    stopTime.time=time;
    stopTime.trip=new TripType(result.getBackTrip(),extended);
    out.add(stopTime);
    time-=1;
  }
 while (true);
  return out;
}
