{
  for (Iterator<Vertex> vIter=island.streetIterator(); vIter.hasNext(); ) {
    Vertex v=vIter.next();
    Collection<Edge> outgoing=new ArrayList<Edge>(v.getOutgoing());
    for (    Edge e : outgoing) {
      if (e instanceof StreetEdge) {
        StreetEdge pse=(StreetEdge)e;
        StreetTraversalPermission permission=pse.getPermission();
        permission=permission.remove(StreetTraversalPermission.PEDESTRIAN);
        permission=permission.remove(StreetTraversalPermission.BICYCLE);
        if (permission == StreetTraversalPermission.NONE) {
          graph.streetNotesService.removeStaticNotes(pse);
          pse.detach(graph);
        }
 else {
          pse.setPermission(permission);
        }
      }
    }
  }
  for (Iterator<Vertex> vIter=island.streetIterator(); vIter.hasNext(); ) {
    Vertex v=vIter.next();
    if (v.getDegreeOut() + v.getDegreeIn() == 0) {
      graph.remove(v);
    }
  }
  for (Iterator<Vertex> vIter=island.stopIterator(); vIter.hasNext(); ) {
    Vertex v=vIter.next();
    Collection<Edge> edges=new ArrayList<Edge>(v.getOutgoing());
    edges.addAll(v.getIncoming());
    for (    Edge e : edges) {
      if (e instanceof StreetTransitLink) {
        e.detach(graph);
      }
    }
  }
  LOG.debug(graph.addBuilderAnnotation(new GraphConnectivity(island.getRepresentativeVertex(),island.streetSize())));
}
