{
  int psIdx=0;
  this.gidx=gidx;
  LOG.info("Clustering stops by geographic and name proximity...");
  Map<String,String> descriptionForStationId=Maps.newHashMap();
  for (  Stop s0 : gidx.stopForId.values()) {
    if (s0.getParentStation() != null)     continue;
    String s0normalizedName=StopNameNormalizer.normalize(s0.getName());
    String parentId=String.format("PS%03d",psIdx++);
    s0.setParentStation(parentId);
    groupedStops.put(parentId,s0);
    for (    TransitStop ts1 : gidx.stopSpatialIndex.query(s0.getLon(),s0.getLat(),CLUSTER_RADIUS)) {
      Stop s1=ts1.getStop();
      double geoDistance=SphericalDistanceLibrary.getInstance().fastDistance(s0.getLat(),s0.getLon(),s1.getLat(),s1.getLon());
      if (geoDistance < CLUSTER_RADIUS) {
        String s1normalizedName=StopNameNormalizer.normalize(s1.getName());
        if (s1normalizedName.equals(s0normalizedName)) {
          s1.setParentStation(parentId);
          groupedStops.put(parentId,s1);
        }
      }
    }
  }
  LOG.info("Done clustering stops.");
  for (  String parentStationId : groupedStops.keySet()) {
    LOG.info("{}",parentStationId);
    for (    Stop stop : groupedStops.get(parentStationId)) {
      LOG.info("   {}",stop.getName());
    }
  }
}
