{
  if (networkID == null) {
    String url=getUrl();
    try {
      Map<String,List<String>> urlParameters=splitQuery(new URL(url));
      List<String> systemIDs=urlParameters.get("SystemID");
      if (systemIDs != null && systemIDs.size() == 1) {
        networkID=systemIDs.get(0);
        log.info("Extracted SystemID from sharebike url: " + networkID);
      }
 else {
        log.error("Unable to extract SystemID query parameter from sharebike url, using random");
        networkID=UUID.randomUUID().toString();
      }
    }
 catch (    UnsupportedEncodingException|MalformedURLException e) {
      log.error("Unable to extract SystemID query parameter from sharebike url, using random",e);
      networkID=UUID.randomUUID().toString();
    }
  }
  if (!rentalStationNode.path("Online").asBoolean()) {
    log.debug("Station is offline: " + rentalStationNode.path("StationName").asText());
    return null;
  }
  BikeRentalStation brstation=new BikeRentalStation();
  brstation.networks=new HashSet<String>();
  brstation.networks.add(this.networkID);
  brstation.id=networkID + "-" + rentalStationNode.path("StationID").toString();
  brstation.x=rentalStationNode.path("Longitude").asDouble();
  brstation.y=rentalStationNode.path("Latitude").asDouble();
  brstation.name=new NonLocalizedString(rentalStationNode.path("StationName").asText());
  brstation.bikesAvailable=rentalStationNode.path("AvailableBikeCount").asInt();
  brstation.spacesAvailable=rentalStationNode.path("AvailableSlotCount").asInt();
  return brstation;
}
