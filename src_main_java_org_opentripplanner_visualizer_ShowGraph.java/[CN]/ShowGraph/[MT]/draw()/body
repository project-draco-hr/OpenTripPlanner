{
  smooth();
  int startMillis=millis();
  if (drawLevel == DRAW_PARTIAL) {
    drawPartial(startMillis);
  }
 else   if (drawLevel == DRAW_ALL) {
    boolean success=drawAll(startMillis);
    if (!success) {
      return;
    }
  }
 else   if (drawLevel == DRAW_LINKS) {
    boolean success=drawLinks(startMillis);
    if (!success) {
      return;
    }
  }
 else   if (drawLevel == DRAW_TRANSIT) {
    boolean success=drawTransit(startMillis);
    if (!success) {
      return;
    }
  }
 else   if (drawLevel == DRAW_VERTICES) {
    drawVertices();
  }
 else   if (drawLevel == DRAW_SPT) {
    if (sptEdgeQueue == null) {
      sptEdgeQueue=simpleSPT.getEdgeQueue();
    }
    int i=0;
    while (!sptEdgeQueue.isEmpty()) {
      SPTNode node=sptEdgeQueue.poll();
      i++;
      node.draw();
      if ((i % BLOCK_SIZE == 0) && (millis() - startMillis > FRAME_TIME))       return;
    }
    sptEdgeQueue=null;
  }
 else   if (drawLevel == DRAW_MINIMAL) {
    if (!newHighlightedEdges.isEmpty())     handleNewHighlights();
    drawNewEdges();
    drawCoords();
  }
  drawOffset=0;
  if (drawLevel > DRAW_MINIMAL)   drawLevel-=1;
}
