{
  if (lol == null) {
    return null;
  }
  double startDt=st0.getShapeDistTraveled();
  if (startDt == -1) {
    LinearLocation startCoord=lol.indexOf(startJourney.getCoordinate());
    LinearLocation endCoord=lol.indexOf(endJourney.getCoordinate());
    return lol.extractLine(startCoord,endCoord);
  }
 else {
    double endDt=st1.getShapeDistTraveled();
    ArrayList<Coordinate> coords=new ArrayList<Coordinate>();
    ShapePoint prev=null;
    ;
    Iterator<ShapePoint> it=points.iterator();
    while (it.hasNext()) {
      ShapePoint point=it.next();
      if (point.getDistTraveled() >= startDt) {
        Coordinate c=interpolatePoint(startDt,prev,point);
        coords.add(c);
        do {
          if (point.getDistTraveled() < endDt) {
            coords.add(new Coordinate(point.getLon(),point.getLat()));
          }
 else {
            c=interpolatePoint(endDt,prev,point);
            coords.add(c);
          }
          prev=point;
          point=it.next();
        }
 while (it.hasNext());
        break;
      }
      prev=point;
    }
    GeometryFactory factory=new GeometryFactory();
    if (coords.size() < 2) {
      throw new RuntimeException("Not enough points when interpolating geometry by shape_dist_traveled");
    }
    return factory.createLineString(coords.toArray(new Coordinate[0]));
  }
}
