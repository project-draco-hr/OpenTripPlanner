{
  for (  Stop stop : _dao.getAllStops()) {
    String parentStation=stop.getParentStation();
    if (parentStation != null) {
      Vertex stopVertex=stopNodes.get(stop);
      String agencyId=stop.getId().getAgencyId();
      AgencyAndId parentStationId=new AgencyAndId(agencyId,parentStation);
      Stop parentStop=_dao.getStopForId(parentStationId);
      Vertex parentStopVertex=stopNodes.get(parentStop);
      new FreeEdge(parentStopVertex,stopVertex);
      new FreeEdge(stopVertex,parentStopVertex);
      Vertex stopArriveVertex=stopArriveNodes.get(stop);
      Vertex parentStopArriveVertex=stopArriveNodes.get(parentStop);
      new FreeEdge(parentStopArriveVertex,stopArriveVertex);
      new FreeEdge(stopArriveVertex,parentStopArriveVertex);
      Vertex stopDepartVertex=stopDepartNodes.get(stop);
      Vertex parentStopDepartVertex=stopDepartNodes.get(parentStop);
      new FreeEdge(parentStopDepartVertex,stopDepartVertex);
      new FreeEdge(stopDepartVertex,parentStopDepartVertex);
    }
  }
  for (  Transfer transfer : _dao.getAllTransfers()) {
    int type=transfer.getTransferType();
    if (type == 3)     continue;
    Vertex fromv=stopArriveNodes.get(transfer.getFromStop());
    Vertex tov=stopDepartNodes.get(transfer.getToStop());
    if (fromv.equals(tov))     continue;
    double distance=DistanceLibrary.distance(fromv.getCoordinate(),tov.getCoordinate());
    int time;
    if (transfer.getTransferType() == 2) {
      time=transfer.getMinTransferTime();
    }
 else {
      time=(int)distance;
    }
    TransferEdge transferEdge=new TransferEdge(fromv,tov,distance,time);
    CoordinateSequence sequence=new PackedCoordinateSequence.Float(new Coordinate[]{fromv.getCoordinate(),tov.getCoordinate()},2);
    Geometry geometry=_geometryFactory.createLineString(sequence);
    transferEdge.setGeometry(geometry);
  }
}
