{
  Collection<Transfer> transfers=_dao.getAllTransfers();
  Set<TransferEdge> createdTransfers=new HashSet<TransferEdge>();
  for (  Transfer t : transfers) {
    Stop fromStop=t.getFromStop();
    Stop toStop=t.getToStop();
    if (fromStop == toStop) {
      continue;
    }
    Vertex fromStation=graph.getVertex(arrivalVertexId(id(fromStop.getId())));
    Vertex toStation=graph.getVertex(departureVertexId(id(toStop.getId())));
    double distance=fromStation.distance(toStation.getCoordinate());
    if (t.getTransferType() < 3) {
      TransferEdge edge;
      if (t.getTransferType() == 2) {
        edge=new TransferEdge(fromStation,toStation,distance,t.getMinTransferTime());
      }
 else {
        edge=new TransferEdge(fromStation,toStation,distance);
      }
      if (createdTransfers.contains(edge)) {
        continue;
      }
      TransitStop fromStopVertex=(TransitStop)graph.getVertex(id(fromStop.getId()));
      TransitStop toStopVertex=(TransitStop)graph.getVertex(id(toStop.getId()));
      edge.setWheelchairAccessible(fromStopVertex.hasWheelchairEntrance() && toStopVertex.hasWheelchairEntrance());
      LineString geometry=_factory.createLineString(new Coordinate[]{new Coordinate(fromStop.getLon(),fromStop.getLat()),new Coordinate(toStop.getLon(),toStop.getLat())});
      edge.setGeometry(geometry);
      createdTransfers.add(edge);
      graph.addEdge(edge);
    }
  }
}
