{
  Collection<Transfer> transfers=_dao.getAllTransfers();
  Set<org.opentripplanner.routing.edgetype.Transfer> createdTransfers=new HashSet<org.opentripplanner.routing.edgetype.Transfer>();
  for (  Transfer t : transfers) {
    Stop fromStop=t.getFromStop();
    Stop toStop=t.getToStop();
    Vertex fromStation=graph.getVertex(id(fromStop.getId()));
    Vertex toStation=graph.getVertex(id(toStop.getId()));
    int transferTime=0;
    if (t.getTransferType() < 3) {
      if (t.getTransferType() == 2) {
        transferTime=t.getMinTransferTime();
      }
      org.opentripplanner.routing.edgetype.Transfer edge=new org.opentripplanner.routing.edgetype.Transfer(fromStation,toStation,transferTime);
      if (createdTransfers.contains(edge)) {
        continue;
      }
      GeometryFactory factory=new GeometryFactory();
      LineString geometry=factory.createLineString(new Coordinate[]{new Coordinate(fromStop.getLon(),fromStop.getLat()),new Coordinate(toStop.getLon(),toStop.getLat())});
      edge.setGeometry(geometry);
      createdTransfers.add(edge);
      graph.addEdge(edge);
    }
  }
}
