{
  LOG.info("Building bike parks from static source...");
  NetworkLinkerLibrary networkLinkerLibrary=new NetworkLinkerLibrary(graph,extra);
  BikeRentalStationService service=graph.getService(BikeRentalStationService.class,true);
  if (!dataSource.update()) {
    LOG.warn("No bike parks found from the data source.");
    return;
  }
  Collection<BikePark> bikeParks=dataSource.getBikeParks();
  for (  BikePark bikePark : bikeParks) {
    if (namePrefix != null)     bikePark.name=namePrefix + bikePark.name;
    service.addBikePark(bikePark);
    BikeParkVertex bikeParkVertex=new BikeParkVertex(graph,bikePark);
    new BikeParkEdge(bikeParkVertex);
    if (!networkLinkerLibrary.connectVertexToStreets(bikeParkVertex).getResult()) {
      LOG.warn(graph.addBuilderAnnotation(new BikeParkUnlinked(bikeParkVertex)));
    }
  }
  LOG.info("Created " + bikeParks.size() + " bike parks.");
}
