{
  ArrayList<EdgeOption> ret=new ArrayList<EdgeOption>();
  State state0=new State(time.getTime());
  TraverseOptions options=new TraverseOptions();
  options.setGtfsContext(_context);
  for (int i=0; i < allhops.size(); i++) {
    Edge edge=allhops.get(i);
    if (!(edge.payload instanceof Board))     continue;
    Board board=(Board)edge.payload;
    TraverseResult wr=board.traverse(state0,options);
    if (wr != null) {
      for (      Edge og : edge.tov.outgoing) {
        if (og.payload instanceof Hop) {
          edge=og;
          wr=edge.traverse(wr.state,options);
          break;
        }
      }
      long timeToArrival=wr.state.getTime() - time.getTime();
      if (timeToArrival <= window) {
        ret.add(new EdgeOption(edge,timeToArrival));
      }
    }
  }
  Collections.sort(ret);
  return ret;
}
