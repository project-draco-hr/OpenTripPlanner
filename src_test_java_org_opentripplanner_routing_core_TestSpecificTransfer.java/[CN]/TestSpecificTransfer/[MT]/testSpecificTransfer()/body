{
  Route fromRoute=new Route();
  fromRoute.setId(new AgencyAndId("A1","R1"));
  Trip fromTrip=new Trip();
  fromTrip.setId(new AgencyAndId("A1","T1"));
  fromTrip.setRoute(fromRoute);
  Route toRoute=new Route();
  toRoute.setId(new AgencyAndId("A1","R2"));
  Trip toTrip=new Trip();
  toTrip.setId(new AgencyAndId("A1","T2"));
  toTrip.setRoute(toRoute);
  SpecificTransfer s1=new SpecificTransfer(fromRoute.getId(),toRoute.getId(),fromTrip.getId(),toTrip.getId(),1);
  assertTrue(s1.matches(fromTrip,toTrip));
  assertTrue(s1.getSpecificity() == SpecificTransfer.MAX_SPECIFICITY);
  assertTrue(s1.transferTime == 1);
  SpecificTransfer s2=new SpecificTransfer((AgencyAndId)null,null,null,null,2);
  assertTrue(s2.matches(fromTrip,toTrip));
  assertTrue(s2.getSpecificity() == SpecificTransfer.MIN_SPECIFICITY);
  assertTrue(s2.transferTime == 2);
  SpecificTransfer s3=new SpecificTransfer(fromRoute.getId(),toRoute.getId(),null,toTrip.getId(),3);
  assertTrue(s3.matches(fromTrip,toTrip));
  assertTrue(s3.getSpecificity() == 3);
  assertTrue(s3.transferTime == 3);
  SpecificTransfer s4=new SpecificTransfer(fromRoute.getId(),toRoute.getId(),new AgencyAndId("A1","T3"),toTrip.getId(),4);
  assertFalse(s4.matches(fromTrip,toTrip));
  assertTrue(s4.getSpecificity() == SpecificTransfer.MAX_SPECIFICITY);
  assertTrue(s4.transferTime == 4);
  SpecificTransfer s5=new SpecificTransfer(null,toRoute.getId(),null,toTrip.getId(),5);
  assertTrue(s5.matches(fromTrip,toTrip));
  assertTrue(s5.getSpecificity() == 2);
  assertTrue(s5.transferTime == 5);
  SpecificTransfer s6=new SpecificTransfer(null,null,null,toTrip.getId(),6);
  assertTrue(s6.matches(fromTrip,toTrip));
  assertTrue(s6.getSpecificity() == 2);
  assertTrue(s6.transferTime == 6);
  SpecificTransfer s7=new SpecificTransfer(fromRoute.getId(),null,null,null,7);
  assertTrue(s7.matches(fromTrip,toTrip));
  assertTrue(s7.getSpecificity() == 1);
  assertTrue(s7.transferTime == 7);
}
