{
  RoutingRequest options=proto.clone();
  options.setTraversalCostModel(new ConstantIntersectionTraversalCostModel(10.0));
  options.setMode(TraverseMode.CAR);
  options.setRoutingContext(_graph,topRight,bottomLeft);
  GraphPath path=checkForwardRouteDuration(options,380);
  path.dump();
  List<State> states=path.states;
  assertEquals(5,states.size());
  assertEquals("maple_1st",states.get(0).getVertex().getLabel());
  assertEquals("main_1st",states.get(1).getVertex().getLabel());
  assertEquals("broad_1st",states.get(2).getVertex().getLabel());
  assertEquals("broad_2nd",states.get(3).getVertex().getLabel());
  assertEquals("broad_3rd",states.get(4).getVertex().getLabel());
  assertEquals(0,states.get(0).getElapsedTime());
  assertEquals(50,states.get(1).getElapsedTime());
  assertEquals(160,states.get(2).getElapsedTime());
  assertEquals(270,states.get(3).getElapsedTime());
  assertEquals(380,states.get(4).getElapsedTime());
}
