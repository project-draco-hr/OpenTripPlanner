{
  if (!canTraverse(options)) {
    return tryWalkBike(s0,options,back);
  }
  double time=length / options.speed;
  double weight;
  if (options.wheelchairAccessible) {
    weight=getSlopeSpeedEffectiveLength() / options.speed;
  }
 else   if (options.getModes().contains(TraverseMode.BICYCLE)) {
switch (options.optimizeFor) {
case SAFE:
      weight=getBicycleSafetyEffectiveLength() / options.speed;
    break;
case FLAT:
  weight=slopeCostEffectiveLength;
break;
case QUICK:
weight=getSlopeSpeedEffectiveLength() / options.speed;
break;
default :
weight=length / options.speed;
}
}
 else {
weight=time;
}
weight*=options.walkReluctance;
Editor editor=s0.edit();
editor.incrementWalkDistance(length);
editor.incrementTimeInSeconds((int)(back ? -time : time));
if (EdgeLibrary.weHaveWalkedTooFar(editor,options)) return null;
return new TraverseResult(weight,editor.createState(),new FixedModeEdge(this,options.getModes().getNonTransitMode()));
}
