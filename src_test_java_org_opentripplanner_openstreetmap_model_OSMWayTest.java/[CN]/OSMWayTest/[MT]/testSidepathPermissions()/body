{
  OSMWay way=new OSMWay();
  way.addTag("bicycle","use_sidepath");
  way.addTag("highway","primary");
  way.addTag("lanes","2");
  way.addTag("maxspeed","70");
  way.addTag("oneway","yes");
  P2<StreetTraversalPermission> permissionPair=getWayProperties(way);
  assertFalse(permissionPair.first.allows(StreetTraversalPermission.BICYCLE));
  assertFalse(permissionPair.second.allows(StreetTraversalPermission.BICYCLE));
  assertTrue(permissionPair.first.allows(StreetTraversalPermission.CAR));
  assertFalse(permissionPair.second.allows(StreetTraversalPermission.CAR));
  way=new OSMWay();
  way.addTag("bicycle:forward","use_sidepath");
  way.addTag("highway","tertiary");
  permissionPair=getWayProperties(way);
  assertFalse(permissionPair.first.allows(StreetTraversalPermission.BICYCLE));
  assertTrue(permissionPair.second.allows(StreetTraversalPermission.BICYCLE));
  assertTrue(permissionPair.first.allows(StreetTraversalPermission.CAR));
  assertTrue(permissionPair.second.allows(StreetTraversalPermission.CAR));
  way=new OSMWay();
  way.addTag("bicycle:backward","use_sidepath");
  way.addTag("highway","tertiary");
  permissionPair=getWayProperties(way);
  assertTrue(permissionPair.first.allows(StreetTraversalPermission.BICYCLE));
  assertFalse(permissionPair.second.allows(StreetTraversalPermission.BICYCLE));
  assertTrue(permissionPair.first.allows(StreetTraversalPermission.CAR));
  assertTrue(permissionPair.second.allows(StreetTraversalPermission.CAR));
  way=new OSMWay();
  way.addTag("highway","tertiary");
  way.addTag("oneway","yes");
  way.addTag("oneway:bicycle","no");
  permissionPair=getWayProperties(way);
  assertTrue(permissionPair.first.allows(StreetTraversalPermission.BICYCLE));
  assertTrue(permissionPair.second.allows(StreetTraversalPermission.BICYCLE));
  assertTrue(permissionPair.first.allows(StreetTraversalPermission.CAR));
  assertFalse(permissionPair.second.allows(StreetTraversalPermission.CAR));
  way.addTag("bicycle:forward","use_sidepath");
  permissionPair=getWayProperties(way);
  assertFalse(permissionPair.first.allows(StreetTraversalPermission.BICYCLE));
  assertTrue(permissionPair.second.allows(StreetTraversalPermission.BICYCLE));
  assertTrue(permissionPair.first.allows(StreetTraversalPermission.CAR));
  assertFalse(permissionPair.second.allows(StreetTraversalPermission.CAR));
}
