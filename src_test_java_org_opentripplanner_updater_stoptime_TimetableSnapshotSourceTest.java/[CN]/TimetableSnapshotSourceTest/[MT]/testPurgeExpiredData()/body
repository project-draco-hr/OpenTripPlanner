{
  AgencyAndId tripId=new AgencyAndId("agency","1.1");
  ServiceDate previously=serviceDate.previous().previous();
  Trip trip=graph.index.tripForId.get(tripId);
  TripPattern pattern=graph.index.patternForTrip.get(trip);
  updater.maxSnapshotFrequency=(0);
  updater.purgeExpiredData=(false);
  updater.applyTripUpdates(graph,fullDataset,Arrays.asList(TripUpdate.parseFrom(cancellation)),"agency");
  TimetableSnapshot snapshotA=updater.getTimetableSnapshot();
  updater.purgeExpiredData=(true);
  TripDescriptor.Builder tripDescriptorBuilder=TripDescriptor.newBuilder();
  tripDescriptorBuilder.setTripId("1.1");
  tripDescriptorBuilder.setScheduleRelationship(TripDescriptor.ScheduleRelationship.CANCELED);
  tripDescriptorBuilder.setStartDate(previously.getAsString());
  TripUpdate.Builder tripUpdateBuilder=TripUpdate.newBuilder();
  tripUpdateBuilder.setTrip(tripDescriptorBuilder);
  TripUpdate tripUpdate=tripUpdateBuilder.build();
  updater.applyTripUpdates(graph,fullDataset,Arrays.asList(tripUpdate),"agency");
  TimetableSnapshot snapshotB=updater.getTimetableSnapshot();
  assertNotSame(snapshotA,snapshotB);
  assertSame(snapshotA.resolve(pattern,null),snapshotB.resolve(pattern,null));
  assertSame(snapshotA.resolve(pattern,serviceDate),snapshotB.resolve(pattern,serviceDate));
  assertNotSame(snapshotA.resolve(pattern,null),snapshotA.resolve(pattern,serviceDate));
  assertSame(snapshotB.resolve(pattern,null),snapshotB.resolve(pattern,previously));
}
