{
  Graph graph=getGraph(routerId);
  StopList response=new StopList();
  StreetVertexIndexService streetVertexIndexService=graph.streetIndex;
  if (leftUpLat == null || leftUpLon == null || rightDownLat == null || rightDownLon == null) {
    double METERS_PER_DEGREE_LAT=111111;
    double distance=2000;
    for (    Vertex gv : graph.getVertices()) {
      if (gv instanceof TransitStop) {
        Coordinate c=gv.getCoordinate();
        Envelope env=new Envelope(c);
        double meters_per_degree_lon_here=METERS_PER_DEGREE_LAT * Math.cos(Math.toRadians(c.y));
        env.expandBy(distance / meters_per_degree_lon_here,distance / METERS_PER_DEGREE_LAT);
        StopType stop=new StopType(((TransitStop)gv).getStop(),extended);
        response.stops.add(stop);
      }
    }
  }
 else {
    Coordinate cOne=new Coordinate(leftUpLon,leftUpLat);
    Coordinate cTwo=new Coordinate(rightDownLon,rightDownLat);
    List<TransitStop> stops=streetVertexIndexService.getNearbyTransitStops(cOne,cTwo);
    TransitIndexService transitIndexService=graph.getService(TransitIndexService.class);
    if (transitIndexService == null) {
      return new TransitError("No transit index found.  Add TransitIndexBuilder to your graph builder configuration and rebuild your graph.");
    }
    for (    TransitStop transitStop : stops) {
      AgencyAndId stopId=transitStop.getStopId();
      if (agency != null && !agency.equals(stopId.getAgencyId()))       continue;
      StopType stop=new StopType(transitStop.getStop(),extended);
      if (extended != null && extended.equals(true))       stop.routes=transitIndexService.getRoutesForStop(stopId);
      response.stops.add(stop);
    }
  }
  return response;
}
