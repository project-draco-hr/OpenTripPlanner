{
  Graph gg=new Graph();
  try {
    File file=new File("simple_streets.shp");
    DataStore dataStore=new ShapefileDataStore(file.toURI().toURL());
    String[] typeNames=dataStore.getTypeNames();
    String typeName=typeNames[0];
    FeatureSource<SimpleFeatureType,SimpleFeature> featureSource;
    featureSource=dataStore.getFeatureSource(typeName);
    ShapefileStreetLoader loader=new ShapefileStreetLoader(gg,featureSource);
    loader.load();
  }
 catch (  Exception e) {
    e.printStackTrace();
    assertNull("got an exception");
  }
  SpatialVertex northVertex=null;
  for (  Vertex v : gg.getVertices()) {
    if (v instanceof SpatialVertex) {
      SpatialVertex sv=(SpatialVertex)v;
      if (northVertex == null || sv.getCoordinate().y > northVertex.getCoordinate().y) {
        northVertex=sv;
      }
    }
  }
  SpatialVertex eastVertex=null;
  for (  Vertex v : gg.getVertices()) {
    if (v instanceof SpatialVertex) {
      SpatialVertex sv=(SpatialVertex)v;
      if (eastVertex == null || sv.getCoordinate().x > eastVertex.getCoordinate().x) {
        eastVertex=sv;
      }
    }
  }
  ShortestPathTree spt=Dijkstra.getShortestPathTree(gg,northVertex.label,eastVertex.label,new State(new GregorianCalendar(2009,8,7,12,0,0)),new WalkOptions());
  GraphPath path=spt.getPath(eastVertex);
  Narrative narrative=new Narrative(path);
  assertEquals(1,narrative.getSections().size());
  assertEquals(2,narrative.getSections().firstElement().getItems().size());
}
