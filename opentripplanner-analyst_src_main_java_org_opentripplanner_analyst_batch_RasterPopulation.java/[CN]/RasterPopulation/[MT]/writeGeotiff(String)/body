{
  LOG.info("writing geotiff.");
  float[][] imagePixelData=new float[height][width];
  List<Individual> individuals=this.getIndividuals();
  Iterator<Individual> indivIter=this.iterator();
  for (int row=0; row < height; row++) {
    for (int col=0; col < width; col++) {
      Individual indiv=indivIter.next();
      int index=row * width + col;
      float pixel=(float)indiv.output;
      imagePixelData[row][col]=pixel;
    }
  }
  this.cov=new GridCoverageFactory().create(cov.getName(),imagePixelData,cov.getEnvelope());
  try {
    GeoTiffWriteParams wp=new GeoTiffWriteParams();
    wp.setCompressionMode(GeoTiffWriteParams.MODE_EXPLICIT);
    wp.setCompressionType("LZW");
    ParameterValueGroup params=new GeoTiffFormat().getWriteParameters();
    params.parameter(AbstractGridFormat.GEOTOOLS_WRITE_PARAMS.getName().toString()).setValue(wp);
    new GeoTiffWriter(new File(fileName)).write(this.cov,(GeneralParameterValue[])params.values().toArray(new GeneralParameterValue[1]));
  }
 catch (  Exception e) {
    LOG.error("exception while writing geotiff.");
    e.printStackTrace();
  }
  LOG.info("done writing geotiff.");
}
