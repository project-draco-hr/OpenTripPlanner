{
  final double BOARD_COST=60 * 5;
  Vertex tov=traverseResult.getEdgeNarrative().getToVertex();
  if (weightCache.containsKey(tov))   return weightCache.get(tov);
  double w;
  if (wt.includes(tov)) {
    w=Double.POSITIVE_INFINITY;
    for (    NearbyStop ns : targetStops) {
      double nw=wt.getWeight(tov,ns.vertex) + ns.weight;
      if (nw < w)       w=nw;
    }
    if (!(tov instanceof TransitStop))     w-=BOARD_COST;
  }
 else {
    w=defaultHeuristic.computeForwardWeight(from,edge,traverseResult,target);
  }
  weightCache.put(tov,w);
  return w;
}
