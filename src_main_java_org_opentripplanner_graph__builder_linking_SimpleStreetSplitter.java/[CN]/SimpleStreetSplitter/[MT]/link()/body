{
  idx=new HashGridSpatialIndex<StreetEdge>();
  for (  StreetEdge se : Iterables.filter(graph.getEdges(),StreetEdge.class)) {
    idx.insert(se.getGeometry().getEnvelopeInternal(),se);
  }
  for (  TransitStop tstop : Iterables.filter(graph.getVertices(),TransitStop.class)) {
    double radiusDeg=SphericalDistanceLibrary.metersToDegrees(MAX_SEARCH_RADIUS_METERS);
    Envelope env=new Envelope(tstop.getCoordinate());
    double xscale=Math.cos(tstop.getLat() * Math.PI / 180);
    env.expandBy(radiusDeg / xscale,radiusDeg);
    double bestEdgeDist=Double.POSITIVE_INFINITY;
    StreetEdge bestEdge=null;
    for (    StreetEdge edge : idx.query(env)) {
      if (!edge.canTraverse(new TraverseModeSet(TraverseMode.WALK)))       continue;
      if (!edge.getToVertex().getIncoming().contains(edge))       continue;
      double dist=distance(tstop,edge,xscale);
      if (dist < radiusDeg && dist < bestEdgeDist) {
        bestEdgeDist=dist;
        bestEdge=edge;
      }
    }
    if (bestEdge != null)     link(tstop,bestEdge,xscale);
  }
}
