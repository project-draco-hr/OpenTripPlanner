{
  LineString geometry=edge.getGeometry();
  Coordinate splitPoint=ll.getCoordinate(geometry);
  SplitterVertex v;
  if (temporarySplit) {
    v=new TemporarySplitterVertex(graph,"split from " + edge.getId(),splitPoint.x,splitPoint.y,edge,endVertex);
    if (edge.isWheelchairAccessible()) {
      ((TemporarySplitterVertex)v).setWheelchairAccessible(true);
    }
 else {
      ((TemporarySplitterVertex)v).setWheelchairAccessible(false);
    }
  }
 else {
    v=new SplitterVertex(graph,"split from " + edge.getId(),splitPoint.x,splitPoint.y,edge);
  }
  P2<StreetEdge> edges=edge.split(v,!temporarySplit);
  if (destructiveSplitting) {
    idx.insert(edges.first.getGeometry(),edges.first);
    idx.insert(edges.second.getGeometry(),edges.second);
    edge.getToVertex().removeIncoming(edge);
    edge.getFromVertex().removeOutgoing(edge);
  }
  return v;
}
