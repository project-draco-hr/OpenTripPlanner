{
  Coordinate[] coordinates=new Coordinate[5];
  coordinates[0]=new Coordinate(0,0);
  coordinates[1]=new Coordinate(0,2);
  coordinates[2]=new Coordinate(3,2);
  coordinates[3]=new Coordinate(3,0);
  coordinates[4]=new Coordinate(0,0);
  assertEquals(0.0,GeometryUtils.binarySearchCoordinates(coordinates,-9.9),0.0);
  assertEquals(0.0,GeometryUtils.binarySearchCoordinates(coordinates,0.0),0.0);
  assertEquals(0.25,GeometryUtils.binarySearchCoordinates(coordinates,0.5),0.0);
  assertEquals(0.5,GeometryUtils.binarySearchCoordinates(coordinates,1.0),0.0);
  assertEquals(0.75,GeometryUtils.binarySearchCoordinates(coordinates,1.5),0.0);
  assertEquals(1.0,GeometryUtils.binarySearchCoordinates(coordinates,2.0),0.0);
  assertEquals(1.25,GeometryUtils.binarySearchCoordinates(coordinates,2.75),0.0);
  assertEquals(1.5,GeometryUtils.binarySearchCoordinates(coordinates,3.5),0.0);
  assertEquals(1.75,GeometryUtils.binarySearchCoordinates(coordinates,4.25),0.0);
  assertEquals(2.0,GeometryUtils.binarySearchCoordinates(coordinates,5.0),0.0);
  assertEquals(2.25,GeometryUtils.binarySearchCoordinates(coordinates,5.5),0.0);
  assertEquals(2.5,GeometryUtils.binarySearchCoordinates(coordinates,6.0),0.0);
  assertEquals(2.75,GeometryUtils.binarySearchCoordinates(coordinates,6.5),0.0);
  assertEquals(3.0,GeometryUtils.binarySearchCoordinates(coordinates,7.0),0.0);
  assertEquals(3.25,GeometryUtils.binarySearchCoordinates(coordinates,7.75),0.0);
  assertEquals(3.5,GeometryUtils.binarySearchCoordinates(coordinates,8.5),0.0);
  assertEquals(3.75,GeometryUtils.binarySearchCoordinates(coordinates,9.25),0.0);
  assertEquals(4.0,GeometryUtils.binarySearchCoordinates(coordinates,10.0),0.0);
  assertEquals(4.0,GeometryUtils.binarySearchCoordinates(coordinates,99.9),0.0);
}
