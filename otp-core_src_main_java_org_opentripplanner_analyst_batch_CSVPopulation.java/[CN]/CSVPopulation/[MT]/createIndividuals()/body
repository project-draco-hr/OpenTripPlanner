{
  try {
    CsvReader reader=new CsvReader(sourceFilename,',',Charset.forName("UTF8"));
    if (skipHeaders) {
      reader.readHeaders();
    }
    MathTransform mathTransform=null;
    boolean transform=false;
    CoordinateReferenceSystem destCrs=CRS.decode("EPSG:4326");
    Boolean latLon=null;
    if (inputCrs != null) {
      CoordinateReferenceSystem sourceCrs=CRS.decode(inputCrs);
      if (CRS.getAxisOrder(destCrs) == CRS.AxisOrder.NORTH_EAST)       latLon=true;
 else       if (CRS.getAxisOrder(destCrs) == CRS.AxisOrder.EAST_NORTH)       latLon=false;
 else       throw new UnsupportedOperationException("Coordinate axis order for WGS 84 unknown.");
      if (!destCrs.equals(sourceCrs)) {
        transform=true;
        mathTransform=CRS.findMathTransform(sourceCrs,destCrs,false);
      }
    }
    while (reader.readRecord()) {
      double y=Double.parseDouble(reader.get(yCol));
      double x=Double.parseDouble(reader.get(xCol));
      double lon, lat;
      if (transform) {
        DirectPosition2D orig=new DirectPosition2D(x,y);
        DirectPosition2D transformed=new DirectPosition2D();
        mathTransform.transform(orig,transformed);
        if (latLon) {
          lon=transformed.getY();
          lat=transformed.getX();
        }
 else {
          lon=transformed.getX();
          lat=transformed.getY();
        }
      }
 else {
        lon=x;
        lat=y;
      }
      String label=reader.get(labelCol);
      Double input=Double.parseDouble(reader.get(inputCol));
      Individual individual=new Individual(label,lon,lat,input);
      this.addIndividual(individual);
    }
    reader.close();
  }
 catch (  Exception e) {
    LOG.error("exception while loading individuals from CSV file:");
    e.printStackTrace();
  }
}
