{
  super(v1,v2);
  this.setGeometry(geometry);
  this.length=length;
  this.bicycleSafetyEffectiveLength=length;
  this.elevationProfileSegment=new ElevationProfileSegment(length);
  this.name=name;
  this.setPermission(permission);
  this.setBack(back);
  this.setCarSpeed(carSpeed);
  if (geometry != null) {
    try {
      for (      Coordinate c : geometry.getCoordinates()) {
        if (Double.isNaN(c.x)) {
          System.out.println("X DOOM");
        }
        if (Double.isNaN(c.y)) {
          System.out.println("Y DOOM");
        }
      }
      double angleR=DirectionUtils.getLastAngle(geometry);
      outAngle=((int)Math.toDegrees(angleR) + 180) % 360;
      angleR=DirectionUtils.getFirstAngle(geometry);
      inAngle=((int)Math.toDegrees(angleR) + 180) % 360;
    }
 catch (    IllegalArgumentException iae) {
      LOG.error("exception while determining street edge angles. setting to zero. there is probably something wrong with this street segment's geometry.");
      inAngle=0;
      outAngle=0;
    }
  }
}
