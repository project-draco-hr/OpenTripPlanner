{
  FeatureCollection<SimpleFeatureType,SimpleFeature> features=featureSource.getFeatures();
  Iterator<SimpleFeature> i=features.iterator();
  try {
    while (i.hasNext()) {
      SimpleFeature feature=i.next();
      LineString geom=toLineString((Geometry)feature.getDefaultGeometry());
      String id="" + feature.getAttribute("StreetCode");
      String name="" + feature.getAttribute("Street");
      Coordinate[] coordinates=geom.getCoordinates();
      String trafDir=(String)feature.getAttribute("TrafDir");
      Vertex startCorner=new SpatialVertex(coordinates[0].toString(),coordinates[0].x,coordinates[0].y);
      startCorner=graph.addVertex(startCorner);
      Vertex endCorner=new SpatialVertex(coordinates[coordinates.length - 1].toString(),coordinates[coordinates.length - 1].x,coordinates[coordinates.length - 1].y);
      endCorner=graph.addVertex(endCorner);
      if (trafDir.equals("W")) {
        Street street=new Street(id,name,geom.getLength());
        street.setGeometry(geom);
        graph.addEdge(startCorner,endCorner,street);
      }
 else       if (trafDir.equals("A")) {
        Street street=new Street(id,name,geom.getLength());
        street.setGeometry(geom.reverse());
        graph.addEdge(endCorner,startCorner,street);
      }
 else       if (trafDir.equals("T")) {
        Street street=new Street(id,name,geom.getLength());
        street.setGeometry(geom);
        graph.addEdge(startCorner,endCorner,street);
        Street backStreet=new Street(id,name,geom.getLength());
        backStreet.setGeometry(geom.reverse());
        graph.addEdge(endCorner,startCorner,backStreet);
      }
 else {
      }
    }
  }
  finally {
    features.close(i);
  }
}
