{
  List<Option> transitOptions=Lists.newArrayList();
  for (  Option option : allOptions) {
    if (option.transit == null || option.transit.isEmpty())     options.add(option);
 else     transitOptions.add(option);
  }
  Comparator<Option> c;
switch (orderBy) {
case MAX:
    c=new Option.MaxComparator();
  break;
case AVG:
c=new Option.AvgComparator();
break;
case MIN:
default :
c=new Option.MinComparator();
}
Collections.sort(transitOptions,c);
ListMultimap<TraverseMode,Option> transitOptionsByAccessMode=ArrayListMultimap.create();
for (Option option : transitOptions) {
for (StreetSegment segment : option.access) {
transitOptionsByAccessMode.put(segment.qmode.mode,option);
}
}
for (Collection<Option> singleModeOptions : transitOptionsByAccessMode.asMap().values()) {
int n=0;
for (Option option : singleModeOptions) {
options.add(option);
if (limit > 0 && ++n >= limit) break;
}
}
for (Option option : this.options) {
LOG.info("{} {}",option.stats,option.summary);
}
}
