{
  if (ee.getElevationProfile() != null) {
    return;
  }
  Geometry g=ee.getGeometry();
  Coordinate[] coords=g.getCoordinates();
  List<Coordinate> coordList=new LinkedList<Coordinate>();
  double edgeLenM=0;
  for (int i=0; i < coords.length - 1; i++) {
    edgeLenM+=DistanceLibrary.distance(coords[i].y,coords[i].x,coords[i + 1].y,coords[i + 1].x);
  }
  coordList.add(new Coordinate(0,getElevation(coords[0])));
  for (double x=distanceBetweenSamplesM; x < edgeLenM; x+=distanceBetweenSamplesM) {
    if (edgeLenM - x < distanceBetweenSamplesM / 2) {
      break;
    }
    Coordinate internal=getPointAlongEdge(coords,edgeLenM,x / edgeLenM);
    coordList.add(new Coordinate(x,getElevation(internal)));
  }
  coordList.add(new Coordinate(edgeLenM,getElevation(coords[coords.length - 1])));
  Coordinate coordArr[]=new Coordinate[coordList.size()];
  PackedCoordinateSequence elevPCS=new PackedCoordinateSequence.Double(coordList.toArray(coordArr));
  ee.setElevationProfile(elevPCS);
}
