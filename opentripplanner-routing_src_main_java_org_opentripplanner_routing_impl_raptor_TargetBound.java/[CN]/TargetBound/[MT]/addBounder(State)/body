{
  for (Iterator<State> it=bounders.iterator(); it.hasNext(); ) {
    State old=it.next();
    if (bounder.dominates(old)) {
      it.remove();
      removedBoundingStates.add(old);
    }
 else     if (bounder.getNumBoardings() <= old.getNumBoardings() && options.arriveBy ? (bounder.getTime() - WORST_TIME_DIFFERENCE > old.getTime()) : (bounder.getTime() + WORST_TIME_DIFFERENCE < old.getTime())) {
      it.remove();
      removedBoundingStates.add(old);
    }
  }
  bounders.add(bounder);
  RaptorState state=(RaptorState)bounder.getExtension("raptorParent");
  if (state == null) {
    previousArrivalTime.add(-1);
    return;
  }
  RaptorStop stop=state.stop;
  if (options.isArriveBy()) {
    final int nextDepartTime=getNextDepartTime(options,(state.arrivalTime - options.getBoardSlack()) - 2,stop.stopVertex);
    previousArrivalTime.add((int)((nextDepartTime - options.getAlightSlack()) - bounder.getElapsedTime()));
  }
 else {
    final int previousArriveTime=getPreviousArriveTime(options,state.arrivalTime - options.getAlightSlack() + 2,stop.stopVertex);
    previousArrivalTime.add((int)(previousArriveTime + options.getAlightSlack() + bounder.getElapsedTime()));
  }
}
