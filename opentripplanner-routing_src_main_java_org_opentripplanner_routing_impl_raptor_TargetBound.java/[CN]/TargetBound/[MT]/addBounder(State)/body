{
  for (Iterator<State> it=bounders.iterator(); it.hasNext(); ) {
    State old=it.next();
    if (bounder.dominates(old)) {
      it.remove();
      removedBoundingStates.add(old);
    }
 else     if (bounder.getNumBoardings() <= old.getNumBoardings() && bounder.getTime() + WORST_TIME_DIFFERENCE < old.getTime()) {
      it.remove();
      removedBoundingStates.add(old);
    }
  }
  bounders.add(bounder);
  RaptorState state=(RaptorState)bounder.getExtension("raptorParent");
  RaptorStop stop=state.stop;
  final int previousArriveTime=getPreviousArriveTime(options,state.arrivalTime - options.getAlightSlack() - 2,stop.stopVertex);
  previousArrivalTime.add((int)(previousArriveTime + options.getAlightSlack() + bounder.getElapsedTime()));
}
