{
  final Vertex vertex=current.getVertex();
  final double targetDistance=distanceLibrary.fastDistance(realTargetCoordinate,vertex.getCoordinate());
  final double remainingWalk=traverseOptions.maxWalkDistance - current.getWalkDistance();
  final double minWalk;
  double minTime=0;
  if (targetDistance > remainingWalk) {
    minWalk=this.distanceToNearestTransitStop + vertex.getDistanceToNearestTransitStop();
    minTime=traverseOptions.getBoardSlack();
  }
 else {
    minWalk=targetDistance;
  }
  if (minWalk > remainingWalk)   return true;
  final double optimisticDistance=current.getWalkDistance() + minWalk;
  minTime+=(targetDistance - minWalk) / Raptor.MAX_TRANSIT_SPEED + minWalk / current.getOptions().getSpeedUpperBound();
  double stateWeight=optimisticDistance + current.getTime() + minTime - traverseOptions.dateTime;
  for (  State bounder : bounders) {
    if (optimisticDistance > bounder.getWalkDistance() && current.getTime() + minTime > bounder.getTime())     return true;
    double bounderWeight=bounder.getWalkDistance() + bounder.getTime() - traverseOptions.dateTime;
    if (bounderWeight * 4 < stateWeight) {
      return true;
    }
  }
  return false;
}
