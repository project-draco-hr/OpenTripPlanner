{
  State state=new State(states.get(0).getRequest());
  for (int i=states.size() - 1; i >= 0; --i) {
    RaptorState cur=states.get(i);
    if (cur.walkPath != null) {
      GraphPath path=new GraphPath(cur.walkPath,false);
      Edge edge0=path.edges.getFirst();
      if (edge0.getFromVertex() != state.getVertex()) {
        state=state.getBackState();
      }
      for (      Edge e : path.edges) {
        state=e.traverse(state);
      }
    }
 else {
      if (cur.getParent() == null || !cur.getParent().interlining) {
        for (        Edge e : state.getVertex().getOutgoing()) {
          if (e instanceof PreAlightEdge) {
            state=e.traverse(state);
            break;
          }
        }
        for (        Edge e : state.getVertex().getOutgoing()) {
          if (e instanceof PreBoardEdge) {
            state=e.traverse(state);
            break;
          }
        }
        TransitBoardAlight board=cur.getRoute().boards[cur.boardStopSequence][cur.patternIndex];
        state=board.traverse(state);
      }
      HOP:       while (true) {
        for (        Edge e : state.getVertex().getOutgoing()) {
          if (e instanceof PatternDwell) {
            state=e.traverse(state);
          }
 else           if (e instanceof PatternHop) {
            state=e.traverse(state);
            if (cur.interlining) {
              for (              Edge e2 : state.getVertex().getOutgoing()) {
                RaptorState next=states.get(i - 1);
                if (e2 instanceof PatternInterlineDwell) {
                  Stop toStop=((TransitVertex)e2.getToVertex()).getStop();
                  Stop expectedStop=next.boardStop.stopVertex.getStop();
                  if (toStop.equals(expectedStop)) {
                    State newState=e2.traverse(state);
                    if (newState == null)                     continue;
                    if (newState.getTripId() != next.tripId)                     continue;
                    state=newState;
                    break HOP;
                  }
                }
              }
            }
 else {
              for (              Edge e2 : state.getVertex().getOutgoing()) {
                if (e2 instanceof TransitBoardAlight) {
                  for (                  Edge e3 : e2.getToVertex().getOutgoing()) {
                    if (e3 instanceof PreAlightEdge) {
                      if (data.raptorStopsForStopId.get(((TransitStop)e3.getToVertex()).getStopId()) == cur.stop) {
                        state=e2.traverse(state);
                        state=e3.traverse(state);
                        break HOP;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return state;
}
