{
  RoutingRequest options=s0.getOptions();
  if (!options.bannedStops.isEmpty()) {
    if (options.bannedStops.matches(((TransitStop)fromv).getStop())) {
      return null;
    }
  }
  if (!options.bannedStopsHard.isEmpty()) {
    if (options.bannedStopsHard.matches(((TransitStop)fromv).getStop())) {
      return null;
    }
  }
  if (options.arriveBy) {
    StateEditor s1=s0.edit(this);
    TransitStop fromVertex=(TransitStop)getFromVertex();
    s1.incrementTimeInSeconds(options.boardSlack);
    s1.alightTransit();
    s1.setBackMode(getMode());
    return s1.makeState();
  }
 else {
    if (!options.modes.isTransit())     return null;
    if (s0.getNumBoardings() > options.maxTransfers)     return null;
    long t0=s0.getTimeSeconds();
    long slack;
    if (s0.isEverBoarded()) {
      slack=options.transferSlack - options.alightSlack;
    }
 else {
      slack=options.boardSlack;
    }
    long board_after=t0 + slack;
    long transfer_penalty=0;
    if (s0.isEverBoarded()) {
      transfer_penalty+=options.transferPenalty;
    }
    StateEditor s1=s0.edit(this);
    s1.setTimeSeconds(board_after);
    long wait_cost=board_after - t0;
    s1.incrementWeight(wait_cost + transfer_penalty);
    s1.setBackMode(getMode());
    return s1.makeState();
  }
}
