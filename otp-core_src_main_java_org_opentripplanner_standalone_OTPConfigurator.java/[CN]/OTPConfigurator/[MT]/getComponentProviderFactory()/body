{
  if (componentProviderFactory != null)   return componentProviderFactory;
  LOG.info("Wiring up and configuring server task.");
  OTPComponentProviderFactory cpf=new OTPComponentProviderFactory();
  cpf.bind(GraphService.class,getGraphService());
  cpf.bind(RoutingRequest.class);
  cpf.bind(PlanGenerator.class);
  cpf.bind(MetadataService.class);
  cpf.bind(SPTService.class,new GenericAStar());
  if (params.longDistance) {
    LongDistancePathService pathService=new LongDistancePathService();
    pathService.setTimeout(10);
    cpf.bind(PathService.class,pathService);
  }
 else {
    RetryingPathServiceImpl pathService=new RetryingPathServiceImpl();
    pathService.setFirstPathTimeout(10.0);
    pathService.setMultiPathTimeout(1.0);
    cpf.bind(PathService.class,pathService);
    cpf.bind(RemainingWeightHeuristicFactory.class,new DefaultRemainingWeightHeuristicFactoryImpl());
  }
  if (params.analyst) {
    cpf.bind(Renderer.class);
    cpf.bind(SPTCache.class);
    cpf.bind(TileCache.class);
    cpf.bind(GeometryIndex.class);
    cpf.bind(SampleFactory.class);
    cpf.bind(IsoChroneSPTRendererAccSampling.class);
    cpf.bind(IsoChroneSPTRendererRecursiveGrid.class);
    cpf.bind(SampleGridRenderer.class);
  }
  cpf.doneBinding();
  this.componentProviderFactory=cpf;
  return cpf;
}
