{
  int i, child;
  int minElem=elem[1];
  int lastElem=elem[size];
  double lastPrio=prio[size];
  if (size <= 0)   throw new IllegalStateException("An empty queue does not have a minimum value.");
  size-=1;
  for (i=1; i * 2 <= size; i=child) {
    child=i * 2;
    if (child != size && prio[child + 1] < prio[child])     child++;
    if (lastPrio > prio[child]) {
      elem[i]=elem[child];
      prio[i]=prio[child];
    }
 else     break;
  }
  elem[i]=lastElem;
  prio[i]=lastPrio;
  return minElem;
}
