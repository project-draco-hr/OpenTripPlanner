{
  Object closestT=null;
  double closestDistance=Double.POSITIVE_INFINITY;
  int radiusBins=(int)Math.ceil(radiusMeters / binSizeMeters);
  int xBin=xBin(c);
  int yBin=yBin(c);
  int minBinX=xBin - radiusBins;
  int maxBinX=xBin + radiusBins;
  int minBinY=yBin - radiusBins;
  int maxBinY=yBin + radiusBins;
  for (int x=minBinX; x <= maxBinX; x+=1) {
    int wrappedX=xWrap(x);
    for (int y=minBinY; y <= maxBinY; y+=1) {
      int wrappedY=yWrap(y);
      List<Object> bin=bins[wrappedX][wrappedY];
      if (bin != null) {
        for (        Object t : bin) {
          double distance=DistanceLibrary.fastDistance(c,c);
          if (distance > radiusMeters)           continue;
          if (distance < closestDistance) {
            closestT=t;
            closestDistance=distance;
          }
        }
      }
    }
  }
  return closestT;
}
