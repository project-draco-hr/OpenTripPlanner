{
  this.path=path;
  if (path.edges.size() == 0) {
    return;
  }
  this.sections=new Vector<NarrativeSection>();
  int i=0;
  String lastName=path.edges.elementAt(i).payload.getName();
  TransportationMode lastMode=null;
  Vector<SPTEdge> currentSection=new Vector<SPTEdge>();
  int startVertex=0;
  for (  SPTEdge edge : path.edges) {
    Traversable traversable=edge.payload;
    String edgeName=traversable.getName();
    if (!edgeName.equals(lastName) && !(traversable.getMode() == TransportationMode.WALK && lastMode == TransportationMode.WALK)) {
      List<SPTVertex> currentVertices=path.vertices.subList(startVertex,i + 1);
      if (lastMode != TransportationMode.ALIGHTING && lastMode != TransportationMode.BOARDING)       sections.add(new NarrativeSection(currentVertices,currentSection));
      currentSection.clear();
      lastName=edgeName;
      startVertex=i;
    }
    i+=1;
    lastMode=traversable.getMode();
    currentSection.add(edge);
  }
  if (lastMode != TransportationMode.ALIGHTING) {
    sections.add(new NarrativeSection(path.vertices.subList(startVertex,i + 1),currentSection));
  }
}
