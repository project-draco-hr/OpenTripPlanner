{
  TurnVertex fromv=((TurnVertex)this.fromv);
  TraverseMode traverseMode=s0.getNonTransitMode(options);
  if (!fromv.canTraverse(options,traverseMode)) {
    if (traverseMode == TraverseMode.BICYCLE) {
      return doTraverse(s0,options.getWalkingOptions());
    }
 else {
      return null;
    }
  }
  StateEditor s1=s0.edit(this);
  if (fromv.getWheelchairNotes() != null && options.wheelchairAccessible) {
    s1.addAlerts(fromv.getWheelchairNotes());
  }
  double speed=options.getSpeed(traverseMode);
  double time=fromv.getEffectiveLength(traverseMode) / speed;
  double weight=fromv.computeWeight(s0,options,time);
  s1.incrementWalkDistance(fromv.getLength());
  s1.incrementTimeInSeconds((int)time);
  s1.incrementWeight(weight);
  s1.setBackMode(s0.getNonTransitMode(options));
  if (s1.weHaveWalkedTooFar(options))   return null;
  return s1.makeState();
}
