{
  StreetVertex fromv=((StreetVertex)this.fromv);
  if (!fromv.canTraverse(options)) {
    if (options.getModes().contains(TraverseMode.BICYCLE)) {
      return doTraverse(s0,options.getWalkingOptions());
    }
 else {
      return null;
    }
  }
  TraverseMode traverseMode=options.getModes().getNonTransitMode();
  EdgeNarrative en=new FixedModeEdge(this,traverseMode);
  StateEditor s1=s0.edit(this,en);
  double time=fromv.getEffectiveLength(traverseMode) / options.speed;
  double weight=fromv.computeWeight(s0,options,time);
  s1.incrementWalkDistance(fromv.getLength());
  s1.incrementTimeInSeconds((int)time);
  s1.incrementWeight(weight);
  if (s1.weHaveWalkedTooFar(options))   return null;
  return s1.makeState();
}
