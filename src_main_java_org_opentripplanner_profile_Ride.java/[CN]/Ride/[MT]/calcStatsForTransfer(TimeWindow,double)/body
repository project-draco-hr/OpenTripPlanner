{
  TIntList arrivals=previous.getSortedStoptimes(window,true);
  TIntList departures=this.getSortedStoptimes(window,false);
  List<Integer> waits=Lists.newArrayList();
  TIntIterator departureIterator=departures.iterator();
  int departure=departureIterator.next();
  ARRIVAL:   for (TIntIterator arrivalsIterator=arrivals.iterator(); arrivalsIterator.hasNext(); ) {
    int arrival=arrivalsIterator.next();
    int boardTime=arrival + accessStats.min + ProfileRouter.SLACK;
    while (departure <= boardTime) {
      if (!departureIterator.hasNext())       break ARRIVAL;
      departure=departureIterator.next();
    }
    waits.add(departure - boardTime);
  }
  if (waits.isEmpty())   return null;
  return new Stats(waits);
}
